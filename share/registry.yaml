- Name: LWM2M Security
  Description1: |-
    This LwM2M Object provides the keying material of a LwM2M Client appropriate to access a specified LwM2M Server. One Object Instance SHOULD address a LwM2M Bootstrap-Server.
    These LwM2M Object Resources MUST only be changed by a LwM2M Bootstrap-Server or Bootstrap from Smartcard and MUST NOT be accessible by any other LwM2M Server.
  Description2: ""
  ObjectID: 0
  ObjectURN: urn:oma:lwm2m:oma:0
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Mandatory
  Resources:
    Item:
        - id: 0
          name: LWM2M  Server URI
          operations: ""
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: 0-255 bytes
          units: ""
          description: Uniquely identifies the LwM2M Server or LwM2M Bootstrap-Server. The format of the CoAP URI is defined in Section 6 of RFC 7252.
        - id: 1
          name: Bootstrap-Server
          operations: ""
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Determines if the current instance concerns a LwM2M Bootstrap-Server (true) or a standard LwM2M Server (false)
        - id: 2
          name: Security Mode
          operations: ""
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0-4
          units: ""
          description: 'Determines which UDP payload security mode is used0: Pre-Shared Key mode1: Raw Public Key mode2: Certificate mode3: NoSec mode4: Certificate mode with EST'
        - id: 3
          name: Public Key or Identity
          operations: ""
          multipleinstances: Single
          mandatory: Mandatory
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: Stores the LwM2M Client’s Certificate (Certificate mode), public key (RPK mode) or PSK Identity (PSK mode). The format is defined in Section E.1.1 of the LwM2M version 1.0 specification.
        - id: 4
          name: Server Public Key
          operations: ""
          multipleinstances: Single
          mandatory: Mandatory
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: Stores the LwM2M Server’s or LwM2M Bootstrap-Server’s Certificate (Certificate mode), public key (RPK mode). The format is defined in Section E.1.1 of the LwM2M version 1.0 specification.
        - id: 5
          name: Secret Key
          operations: ""
          multipleinstances: Single
          mandatory: Mandatory
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: Stores the secret key or private key of the security mode. The format of the keying material is defined by the security mode in Section E.1.1 of the LwM2M version 1.0 specification. This Resource MUST only be changed by a bootstrap-server and MUST NOT be readable by any server.
        - id: 6
          name: SMS Security Mode
          operations: ""
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0-255
          units: ""
          description: 'Determines which SMS security mode is used (see section 7.2 of the LwM2M version 1.0 specification)0: Reserved for future use1: DTLS mode (Device terminated) PSK mode assumed2: Secure Packet Structure mode (Smartcard terminated)3: NoSec mode4: Reserved mode (DTLS mode with multiplexing Security Association support)5-203 : Reserved for future use204-255: Proprietary modes'
        - id: 7
          name: SMS Binding Key Parameters
          operations: ""
          multipleinstances: Single
          mandatory: Optional
          type: Opaque
          rangeenumeration: 6 bytes
          units: ""
          description: Stores the KIc, KID, SPI and TAR. The format is defined in Section E.1.2 of the LwM2M version 1.0 specification.
        - id: 8
          name: SMS Binding Secret Key(s)
          operations: ""
          multipleinstances: Single
          mandatory: Optional
          type: Opaque
          rangeenumeration: 16-32-48 bytes
          units: ""
          description: Stores the values of the key(s) for the SMS binding. This resource MUST only be changed by a bootstrap-server and MUST NOT be readable by any server.
        - id: 9
          name: LwM2M Server SMS Number
          operations: ""
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: MSISDN used by the LwM2M Client to send messages to the LwM2M Server via the SMS binding. The LwM2M Client SHALL silently ignore any SMS originated from unknown MSISDN
        - id: 10
          name: Short Server ID
          operations: ""
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 1-65534
          units: ""
          description: This identifier uniquely identifies each LwM2M Server configured for the LwM2M Client.This Resource MUST be set when the Bootstrap-Server Resource has false value.Specific ID:0 and ID:65535 values MUST NOT be used for identifying the LwM2M Server (Section 6.3 of the LwM2M version 1.0 specification).
        - id: 11
          name: Client Hold Off Time
          operations: ""
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: s
          description: Relevant information for a Bootstrap-Server only.The number of seconds to wait before initiating a Client Initiated Bootstrap once the LwM2M Client has determined it should initiate this bootstrap mode.In case client initiated bootstrap is supported by the LwM2M Client, this resource MUST be supported.
        - id: 12
          name: Bootstrap-Server Account Timeout
          operations: ""
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: s
          description: The LwM2M Client MUST purge the LwM2M Bootstrap-Server Account after the timeout value given by this resource. The lowest timeout value is 1.If the value is set to 0, or if this resource is not instantiated, the Bootstrap-Server Account lifetime is infinite.
- Name: LWM2M Security
  Description1: |-
    This LwM2M Object provides the keying material of a LwM2M Client appropriate to access a specified LwM2M Server. One Object Instance SHOULD address a LwM2M Bootstrap-Server.
    These LwM2M Object Resources MUST only be changed by a LwM2M Bootstrap-Server or Bootstrap from Smartcard and MUST NOT be accessible by any other LwM2M Server.
  Description2: ""
  ObjectID: 0
  ObjectURN: urn:oma:lwm2m:oma:0:1.1
  LWM2MVersion: "1.1"
  ObjectVersion: "1.1"
  MultipleInstances: Multiple
  Mandatory: Mandatory
  Resources:
    Item:
        - id: 0
          name: LWM2M  Server URI
          operations: ""
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: 0..255 bytes
          units: ""
          description: Uniquely identifies the LwM2M Server or LwM2M Bootstrap-Server. The format of the CoAP URI is defined in Section 6 of RFC 7252.
        - id: 1
          name: Bootstrap-Server
          operations: ""
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Determines if the current instance concerns a LwM2M Bootstrap-Server (true) or a standard LwM2M Server (false)
        - id: 2
          name: Security Mode
          operations: ""
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..4
          units: ""
          description: 'Determines which security mode is used0: Pre-Shared Key mode1: Raw Public Key mode2: Certificate mode3: NoSec mode4: Certificate mode with EST'
        - id: 3
          name: Public Key or Identity
          operations: ""
          multipleinstances: Single
          mandatory: Mandatory
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: Stores the LwM2M Client's certificate, public key (RPK mode) or PSK Identity (PSK mode).
        - id: 4
          name: Server Public Key
          operations: ""
          multipleinstances: Single
          mandatory: Mandatory
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: Stores the LwM2M Server's, respectively LwM2M Bootstrap-Server's, certificate, public key (RPK mode) or trust anchor. The Certificate Mode Resource determines the content of this resource.
        - id: 5
          name: Secret Key
          operations: ""
          multipleinstances: Single
          mandatory: Mandatory
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: Stores the secret key (PSK mode) or private key (RPK or certificate mode).
        - id: 6
          name: SMS Security Mode
          operations: ""
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..255
          units: ""
          description: 'Determines which SMS security mode is used: 0: Reserved for future use1: DTLS mode (Device terminated) PSK mode assumed2: Secure Packet Structure mode (Smartcard terminated)3: NoSec mode4: Reserved mode (DTLS mode with multiplexing Security Association support)5-203 : Reserved for future use204-255: Proprietary modes'
        - id: 7
          name: SMS Binding Key Parameters
          operations: ""
          multipleinstances: Single
          mandatory: Optional
          type: Opaque
          rangeenumeration: "6"
          units: ""
          description: Stores the KIc, KID, SPI and TAR.
        - id: 8
          name: SMS Binding Secret Key(s)
          operations: ""
          multipleinstances: Single
          mandatory: Optional
          type: Opaque
          rangeenumeration: 16,32,48
          units: ""
          description: Stores the values of the key(s) for the SMS binding.
        - id: 9
          name: LwM2M Server SMS Number
          operations: ""
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: MSISDN used by the LwM2M Client to send messages to the LwM2M Server via the SMS binding.
        - id: 10
          name: Short Server ID
          operations: ""
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 1..65534
          units: ""
          description: This identifier uniquely identifies each LwM2M Server configured for the LwM2M Client.This Resource MUST be set when the Bootstrap-Server Resource has a value of 'false'. The values ID:0 and ID:65535 values MUST NOT be used for identifying the LwM2M Server.
        - id: 11
          name: Client Hold Off Time
          operations: ""
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: s
          description: The number of seconds to wait before initiating a Client Initiated Bootstrap once the LwM2M Client has determined it should initiate this bootstrap mode.In case client initiated bootstrap is supported by the LwM2M Client, this resource MUST be supported. This information is relevant for use with a Bootstrap-Server only.
        - id: 12
          name: Bootstrap-Server Account Timeout
          operations: ""
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: s
          description: The LwM2M Client MUST purge the LwM2M Bootstrap-Server Account after the timeout value given by this resource. The lowest timeout value is 1.If the value is set to 0, or if this resource is not instantiated, the Bootstrap-Server Account lifetime is infinite.
        - id: 13
          name: Matching Type
          operations: ""
          multipleinstances: Single
          mandatory: Optional
          type: Unsigned Integer
          rangeenumeration: 0..3
          units: s
          description: 'The Matching Type Resource specifies how the certificate or raw public key in in the Server Public Key is presented. Four values are currently defined:0: Exact match. This is the default value and also corresponds to the functionality of LwM2M v1.0. Hence, if this resource is not present then the content of the Server Public Key Resource corresponds to this value.1: SHA-256 hash [RFC6234]2: SHA-384 hash [RFC6234]3: SHA-512 hash [RFC6234]'
        - id: 14
          name: SNI
          operations: ""
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: This resource holds the value of the Server Name Indication (SNI) value to be used during the TLS handshake. When this resource is present then the LwM2M Server URI acts as the address of the service while the SNI value is used for matching a presented certificate, or PSK identity.
        - id: 15
          name: Certificate Usage
          operations: ""
          multipleinstances: Single
          mandatory: Optional
          type: Unsigned Integer
          rangeenumeration: 0..3
          units: s
          description: The Certificate Usage Resource specifies the semantic of the certificate or raw public key stored in the Server Public Key Resource, which is used to match the certificate presented in the TLS/DTLS handshake. The currently defined values are 0 for "CA constraint", 1 for "service certificate constraint", 2 for "trust anchor assertion", and 3 for "domain-issued certificate". When this resource is absent, value (3) for domain issued certificate mode is assumed. More details about the semantic of each value can be found in the security consideration section of the LwM2M specification.
        - id: 16
          name: DTLS/TLS Ciphersuite
          operations: ""
          multipleinstances: Multiple
          mandatory: Optional
          type: Unsigned Integer
          rangeenumeration: ""
          units: ""
          description: When this resource is present it instructs the TLS/DTLS client to propose the indicated ciphersuite(s) in the ClientHello of the handshake. A ciphersuite is indicated as a 32-bit integer value. The IANA TLS ciphersuite registry is maintained at https://www.iana.org/assignments/tls-parameters/tls-parameters.xhtml. As an example, the TLS_PSK_WITH_AES_128_CCM_8 ciphersuite is represented with the following string "0xC0,0xA8". To form an integer value the two values are concatenated. In this example, the value is 0xc0a8 or 49320.
        - id: 17
          name: OSCORE Security Mode
          operations: ""
          multipleinstances: Single
          mandatory: Optional
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: If this resource is defined, it provides a link to the OSCORE Object Instance.
- Name: LWM2M Security
  Description1: |-
    This LwM2M Object provides the keying material of a LwM2M Client appropriate to access a specified LwM2M Server. One Object Instance SHOULD address a LwM2M Bootstrap-Server.
    These LwM2M Object Resources MUST only be changed by a LwM2M Bootstrap-Server or Bootstrap from Smartcard and MUST NOT be accessible by any other LwM2M Server.
  Description2: ""
  ObjectID: 0
  ObjectURN: urn:oma:lwm2m:oma:0:1.2
  LWM2MVersion: "1.1"
  ObjectVersion: "1.2"
  MultipleInstances: Multiple
  Mandatory: Mandatory
  Resources:
    Item:
        - id: 0
          name: LWM2M  Server URI
          operations: ""
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: 0..255
          units: ""
          description: Uniquely identifies the LwM2M Server or LwM2M Bootstrap-Server. The format of the CoAP URI is defined in Section 6 of RFC 7252.
        - id: 1
          name: Bootstrap-Server
          operations: ""
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Determines if the current instance concerns a LwM2M Bootstrap-Server (true) or a standard LwM2M Server (false)
        - id: 2
          name: Security Mode
          operations: ""
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..4
          units: ""
          description: 'Determines which security mode is used0: Pre-Shared Key mode1: Raw Public Key mode2: Certificate mode3: NoSec mode4: Certificate mode with EST'
        - id: 3
          name: Public Key or Identity
          operations: ""
          multipleinstances: Single
          mandatory: Mandatory
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: Stores the LwM2M Client's certificate, public key (RPK mode) or PSK Identity (PSK mode).
        - id: 4
          name: Server Public Key
          operations: ""
          multipleinstances: Single
          mandatory: Mandatory
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: Stores the LwM2M Server's, respectively LwM2M Bootstrap-Server's, certificate, public key (RPK mode) or trust anchor. The Certificate Mode Resource determines the content of this resource.
        - id: 5
          name: Secret Key
          operations: ""
          multipleinstances: Single
          mandatory: Mandatory
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: Stores the secret key (PSK mode) or private key (RPK or certificate mode).
        - id: 6
          name: SMS Security Mode
          operations: ""
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..255
          units: ""
          description: 'Determines which SMS security mode is used: 0: Reserved for future use1: DTLS mode (Device terminated) PSK mode assumed2: Secure Packet Structure mode (Smartcard terminated)3: NoSec mode4: Reserved mode (DTLS mode with multiplexing Security Association support)5-203 : Reserved for future use204-255: Proprietary modes'
        - id: 7
          name: SMS Binding Key Parameters
          operations: ""
          multipleinstances: Single
          mandatory: Optional
          type: Opaque
          rangeenumeration: "6"
          units: ""
          description: Stores the KIc, KID, SPI and TAR.
        - id: 8
          name: SMS Binding Secret Key(s)
          operations: ""
          multipleinstances: Single
          mandatory: Optional
          type: Opaque
          rangeenumeration: 16,32,48
          units: ""
          description: Stores the values of the key(s) for the SMS binding.
        - id: 9
          name: LwM2M Server SMS Number
          operations: ""
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: MSISDN used by the LwM2M Client to send messages to the LwM2M Server via the SMS binding.
        - id: 10
          name: Short Server ID
          operations: ""
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 1..65534
          units: ""
          description: This identifier uniquely identifies each LwM2M Server configured for the LwM2M Client.This Resource MUST be set when the Bootstrap-Server Resource has a value of 'false'. The values ID:0 and ID:65535 values MUST NOT be used for identifying the LwM2M Server.
        - id: 11
          name: Client Hold Off Time
          operations: ""
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: s
          description: The number of seconds to wait before initiating a Client Initiated Bootstrap once the LwM2M Client has determined it should initiate this bootstrap mode.In case client initiated bootstrap is supported by the LwM2M Client, this resource MUST be supported. This information is relevant for use with a Bootstrap-Server only.
        - id: 12
          name: Bootstrap-Server Account Timeout
          operations: ""
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: s
          description: The LwM2M Client MUST purge the LwM2M Bootstrap-Server Account after the timeout value given by this resource. The lowest timeout value is 1.If the value is set to 0, or if this resource is not instantiated, the Bootstrap-Server Account lifetime is infinite.
        - id: 13
          name: Matching Type
          operations: ""
          multipleinstances: Single
          mandatory: Optional
          type: Unsigned Integer
          rangeenumeration: 0..3
          units: ""
          description: 'The Matching Type Resource specifies how the certificate or raw public key in in the Server Public Key is presented. Four values are currently defined:0: Exact match. This is the default value and also corresponds to the functionality of LwM2M v1.0. Hence, if this resource is not present then the content of the Server Public Key Resource corresponds to this value.1: SHA-256 hash [RFC6234]2: SHA-384 hash [RFC6234]3: SHA-512 hash [RFC6234]'
        - id: 14
          name: SNI
          operations: ""
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: This resource holds the value of the Server Name Indication (SNI) value to be used during the TLS handshake. When this resource is present then the LwM2M Server URI acts as the address of the service while the SNI value is used for matching a presented certificate, or PSK identity.
        - id: 15
          name: Certificate Usage
          operations: ""
          multipleinstances: Single
          mandatory: Optional
          type: Unsigned Integer
          rangeenumeration: 0..3
          units: ""
          description: The Certificate Usage Resource specifies the semantic of the certificate or raw public key stored in the Server Public Key Resource, which is used to match the certificate presented in the TLS/DTLS handshake. The currently defined values are 0 for "CA constraint", 1 for "service certificate constraint", 2 for "trust anchor assertion", and 3 for "domain-issued certificate". When this resource is absent, value (3) for domain issued certificate mode is assumed. More details about the semantic of each value can be found in the security consideration section of the LwM2M specification.
        - id: 16
          name: DTLS/TLS Ciphersuite
          operations: ""
          multipleinstances: Multiple
          mandatory: Optional
          type: Unsigned Integer
          rangeenumeration: ""
          units: ""
          description: When this resource is present it instructs the TLS/DTLS client to propose the indicated ciphersuite(s) in the ClientHello of the handshake. A ciphersuite is indicated as a 32-bit integer value. The IANA TLS ciphersuite registry is maintained at https://www.iana.org/assignments/tls-parameters/tls-parameters.xhtml. As an example, the TLS_PSK_WITH_AES_128_CCM_8 ciphersuite is represented with the following string "0xC0,0xA8". To form an integer value the two values are concatenated. In this example, the value is 0xc0a8 or 49320.
        - id: 17
          name: OSCORE Security Mode
          operations: ""
          multipleinstances: Single
          mandatory: Optional
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: If this resource is defined, it provides a link to the OSCORE Object Instance and OSCORE MUST be used by the LwM2M Client with the linked OSCORE Object Instance.
        - id: 18
          name: Groups To Use by Client
          operations: ""
          multipleinstances: Multiple
          mandatory: Optional
          type: Unsigned Integer
          rangeenumeration: 0..65535
          units: ""
          description: If this resource is defined, it indicates what groups the LwM2M Client should use with a LwM2M Server/LwM2M Bootstrap-Server (ordered from most preferred to least preferred). Resource instance 0 indicates the most preferred group. The values are taken from Section 4.2.7 of RFC 8446. An example is secp256r1 (0x0017).
        - id: 19
          name: Signature Algorithms Supported by Server
          operations: ""
          multipleinstances: Multiple
          mandatory: Optional
          type: Unsigned Integer
          rangeenumeration: 0..65535
          units: ""
          description: If this resource is defined, it indicates what signature algorithms the LwM2M Server/LwM2M Bootstrap-Server supports. The values are taken from Section 4.2.3 of RFC 8446. An example is ecdsa_secp256r1_sha256(0x0403).
        - id: 20
          name: Signature Algorithms To Use by Client
          operations: ""
          multipleinstances: Multiple
          mandatory: Optional
          type: Unsigned Integer
          rangeenumeration: 0..65535
          units: ""
          description: If this resource is defined, it indicates what signature algorithms the LwM2M Client should use with a LwM2M Server/LwM2M Bootstrap-Server (ordered from most preferred to least preferred). Resource instance 0 indicates the most preferred group. The values are taken from Section 4.2.3 of RFC 8446. An example is ecdsa_secp256r1_sha256(0x0403).
        - id: 21
          name: Signature Algorithm Certs Supported by Server
          operations: ""
          multipleinstances: Multiple
          mandatory: Optional
          type: Unsigned Integer
          rangeenumeration: 0..65535
          units: ""
          description: If this resource is defined, it indicates what certificate-specific signature algorithms the the LwM2M Server/LwM2M Bootstrap-Server supports. The values are taken from Section 4.2.3 of RFC 8446. An example is ecdsa_secp256r1_sha256(0x0403).
        - id: 22
          name: TLS 1.3 Features To Use by Client
          operations: ""
          multipleinstances: Single
          mandatory: Optional
          type: Unsigned Integer
          rangeenumeration: 0..65535
          units: ""
          description: If this resource is defined, it indicates which features the LwM2M Client should use with the respective LwM2M Server/LwM2M Bootstrap-Server. The bitmask values listed below are defined. A bit value of '0' means the feature should not be used. bit(0) - PSK Plain, bit(1) - 0-RTT, bit(2) - PSK with PFS, bit(3) - Certificate-based Authentication. Bit(4) to bit(31) are reserved.
        - id: 23
          name: TLS Extensions Supported by Server
          operations: ""
          multipleinstances: Single
          mandatory: Optional
          type: Unsigned Integer
          rangeenumeration: 0..65535
          units: ""
          description: 'If this resource is defined, it indicates what extensions the LwM2M Server/LwM2M Bootstrap-Server supports in form of a bitmap.The following values are defined: bit(0) - Server Name Indication (RFC 6066), bit (1) - Max Fragment Length (RFC 6066), bit (2) - Status Request (RFC 6066), bit (3) - Heartbeat (RFC 6520), bit (4) - Application Layer Protocol Negotiation (RFC 7301), bit (5) - Signed Certificate Timestamp (RFC 6962), bit (6) - Certificate Compression (draft-ietf-tls-certificate-compression), bit (7) - Record Size Limit (RFC 8449), bit (8) - Ticket Pinning (draft-ietf-tls-pinning-ticket), bit (9) - Certificate Authorities (RFC 8446), bit (10) - OID Filters (RFC 8446), bit (11) - Post Handshake Auth (RFC 8446), bit (12) - Connection ID (draft-ietf-tls-dtls-connection-id/draft-ietf-tls-dtls13). Bit(13) to bit(31) are reserved.'
        - id: 24
          name: TLS Extensions To Use by Client
          operations: ""
          multipleinstances: Single
          mandatory: Optional
          type: Unsigned Integer
          rangeenumeration: 0..65535
          units: ""
          description: 'If this resource is defined, it indicates what extensions the LwM2M Client should use with the LwM2M Server/LwM2M Bootstrap-Server in form of a bitmap. The following values are defined: bit(0) - Server Name Indication (RFC 6066), bit (1) - Max Fragment Length (RFC 6066), bit (2) - Status Request (RFC 6066), bit (3) - Heartbeat (RFC 6520), bit (4) - Application Layer Protocol Negotiation (RFC 7301), bit (5) - Signed Certificate Timestamp (RFC 6962), bit (6) - Certificate Compression (draft-ietf-tls-certificate-compression), bit (7) - Record Size Limit (RFC 8449), bit (8) - Ticket Pinning (draft-ietf-tls-pinning-ticket), bit (9) - Certificate Authorities (RFC 8446), bit (10) - OID Filters (RFC 8446), bit (11) - Post Handshake Auth (RFC 8446), bit (12) - Connection ID (draft-ietf-tls-dtls-connection-id/draft-ietf-tls-dtls13). Bit(13) to bit(31) are reserved.'
        - id: 25
          name: Secondary LwM2M Server URI
          operations: ""
          multipleinstances: Multiple
          mandatory: Optional
          type: String
          rangeenumeration: 0..255
          units: ""
          description: If this resource is present then the LwM2M Server URI in the Security Object, Resource ID 0, is augmented with information about further LwM2M Server URIs that can be used with the same security information found in the LwM2M Security Object. This is useful when a LwM2M Server is reachable via two different transport bindings (i.e. URIs). For example when the same server is reachable with two different URIs, such as a "coaps" and a "coaps+tcp" URI scheme.
        - id: 26
          name: MQTT Server
          operations: ""
          multipleinstances: Single
          mandatory: Optional
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: If this resource is defined, it provides a link to a MQTT Server Object Instance, which offers additional configuration information for use with this MQTT server. This Resource is used only when the URI scheme in the LwM2M Server URI Resource indicates the use of MQTT.
        - id: 27
          name: LwM2M COSE Security
          operations: ""
          multipleinstances: Multiple
          mandatory: Optional
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: If this resource is defined, it provides a links to LwM2M COSE Object Instances, which contain security-relevant configuration information for use with COSE.
        - id: 28
          name: RDS Destination Port
          operations: ""
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..15
          units: ""
          description: This resource provides the default RDS Destination Port Number (as defined in 3GPP TS 24.250) to use for contacting the LwM2M or Bootstrap Server when communicating through the SCEF across the Non-IP binding.
        - id: 29
          name: RDS Source Port
          operations: ""
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..15
          units: ""
          description: This resource provides the default RDS Source Port Number (as defined in 3GPP TS 24.250) to use for contacting the LwM2M or Bootstrap Server when communicating through the SCEF across the Non-IP binding.
        - id: 30
          name: RDS Application ID
          operations: ""
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: This resource provides the Application ID (as defined in 3GPP TS 24.250) to use for querying the SCEF for the source and destination port numbers for contacting the LwM2M or Bootstrap Server when communicating through the SCEF across the Non-IP binding.
- Name: LwM2M Server
  Description1: This LwM2M Objects provides the data related to a LwM2M Server. A Bootstrap-Server has no such an Object Instance associated to it.
  Description2: ""
  ObjectID: 1
  ObjectURN: urn:oma:lwm2m:oma:1
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Mandatory
  Resources:
    Item:
        - id: 0
          name: Short Server ID
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 1-65535
          units: ""
          description: Used as link to associate server Object Instance.
        - id: 1
          name: Lifetime
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: s
          description: Specify the lifetime of the registration in seconds (see Section 5.3 Registration).
        - id: 2
          name: Default Minimum Period
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: s
          description: The default value the LwM2M Client should use for the Minimum Period of an Observation in the absence of this parameter being included in an Observation.If this Resource doesn’t exist, the default value is 0.
        - id: 3
          name: Default Maximum Period
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: s
          description: The default value the LwM2M Client should use for the Maximum Period of an Observation in the absence of this parameter being included in an Observation.
        - id: 4
          name: Disable
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: If this Resource is executed, this LwM2M Server Object is disabled for a certain period defined in the Disabled Timeout Resource. After receiving “Execute” operation, LwM2M Client MUST send response of the operation and perform de-registration process, and underlying network connection between the Client and Server MUST be disconnected to disable the LwM2M Server account.After the above process, the LwM2M Client MUST NOT send any message to the Server and ignore all the messages from the LwM2M Server for the period.
        - id: 5
          name: Disable Timeout
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: s
          description: A period to disable the Server. After this period, the LwM2M Client MUST perform registration process to the Server. If this Resource is not set, a default timeout value is 86400 (1 day).
        - id: 6
          name: Notification Storing When Disabled or Offline
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: If true, the LwM2M Client stores “Notify” operations to the LwM2M Server while the LwM2M Server account is disabled or the LwM2M Client is offline. After the LwM2M Server account is enabled or the LwM2M Client is online, the LwM2M Client reports the stored “Notify” operations to the Server.If false, the LwM2M Client discards all the “Notify” operations or temporarily disables the Observe function while the LwM2M Server is disabled or the LwM2M Client is offline.The default value is true.The maximum number of storing Notifications per Server is up to the implementation.
        - id: 7
          name: Binding
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: The possible values of Resource are listed in 5.3.1.1
          units: ""
          description: This Resource defines the transport binding configured for the LwM2M Client.If the LwM2M Client supports the binding specified in this Resource, the LwM2M Client MUST use that transport for the Current Binding Mode.
        - id: 8
          name: Registration Update Trigger
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: If this Resource is executed the LwM2M Client MUST perform an “Update” operation with this LwM2M Server using that transport for the Current Binding Mode.
- Name: LwM2M Server
  Description1: This LwM2M Objects provides the data related to a LwM2M Server. A Bootstrap-Server has no such an Object Instance associated to it.
  Description2: ""
  ObjectID: 1
  ObjectURN: urn:oma:lwm2m:oma:1:1.1
  LWM2MVersion: "1.1"
  ObjectVersion: "1.1"
  MultipleInstances: Multiple
  Mandatory: Mandatory
  Resources:
    Item:
        - id: 0
          name: Short Server ID
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 1..65534
          units: ""
          description: Used as link to associate server Object Instance.
        - id: 1
          name: Lifetime
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: s
          description: Specify the lifetime of the registration in seconds (see Client Registration Interface).
        - id: 2
          name: Default Minimum Period
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: s
          description: The default value the LwM2M Client should use for the Minimum Period of an Observation in the absence of this parameter being included in an Observation.If this Resource doesn’t exist, the default value is 0.
        - id: 3
          name: Default Maximum Period
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: s
          description: The default value the LwM2M Client should use for the Maximum Period of an Observation in the absence of this parameter being included in an Observation.
        - id: 4
          name: Disable
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: If this Resource is executed, this LwM2M Server Object is disabled for a certain period defined in the Disabled Timeout Resource. After receiving “Execute” operation, LwM2M Client MUST send response of the operation and perform de-registration process, and underlying network connection between the Client and Server MUST be disconnected to disable the LwM2M Server account.After the above process, the LwM2M Client MUST NOT send any message to the Server and ignore all the messages from the LwM2M Server for the period.
        - id: 5
          name: Disable Timeout
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: s
          description: A period to disable the Server. After this period, the LwM2M Client MUST perform registration process to the Server. If this Resource is not set, a default timeout value is 86400 (1 day).
        - id: 6
          name: Notification Storing When Disabled or Offline
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: If true, the LwM2M Client stores “Notify” operations to the LwM2M Server while the LwM2M Server account is disabled or the LwM2M Client is offline. After the LwM2M Server account is enabled or the LwM2M Client is online, the LwM2M Client reports the stored “Notify” operations to the Server.If false, the LwM2M Client discards all the “Notify” operations or temporarily disables the Observe function while the LwM2M Server is disabled or the LwM2M Client is offline.The default value is true.The maximum number of storing Notifications per Server is up to the implementation.
        - id: 7
          name: Binding
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: The possible values are those listed in the LwM2M Core Specification
          units: ""
          description: This Resource defines the transport binding configured for the LwM2M Client.If the LwM2M Client supports the binding specified in this Resource, the LwM2M Client MUST use that transport for the Current Binding Mode.
        - id: 8
          name: Registration Update Trigger
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: If this Resource is executed the LwM2M Client MUST perform an “Update” operation with this LwM2M Server. The LwM2M Client can use a transport binding supported in the Current Binding Mode, Preferred Transport resource or the transport specified as an argument in the Registration Update Trigger.
        - id: 9
          name: Bootstrap-Request Trigger
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: When this Resource is executed the LwM2M Client MUST initiate a "Client Initiated Bootstrap" procedure in using the LwM2M Bootstrap-Server Account.
        - id: 10
          name: APN Link
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: If this resource is defined, it provides a link to the APN connection profile Object Instance (OMNA registered Object ID:11) to be used to communicate with this server.
        - id: 11
          name: TLS-DTLS Alert Code
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Unsigned Integer
          rangeenumeration: 0..255
          units: ""
          description: If this resource is defined, it contains the most recent TLS / DTLS alert message received from the LwM2M Server respective represented by the AlertDescription defined in Section 7.2 of RFC 5246. This resource set by the LwM2M Client may help the LwM2M Bootstrap-Server to determine the cause of TLS/DTLS connection failure with the respective LwM2M Server.
        - id: 12
          name: Last Bootstrapped
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: If this resource is defined, it represents the last time that the bootstrap server updated this LwM2M Server Account. The LwM2M Client is responsible for updating this value. When the Bootstrap Server detects that this LwM2M Server Account is "out-of-date", the Bootstrap Server can update the LwM2M Server Account as represented by the LwM2M Server object instance.
        - id: 13
          name: Registration Priority Order
          operations: ""
          multipleinstances: Single
          mandatory: Optional
          type: Unsigned Integer
          rangeenumeration: ""
          units: ""
          description: The LwM2M Client sequences the LwM2M Server registrations in increasing order of this value. If this value is not defined, registration attempts to this server are not impacted by other server registrations.
        - id: 14
          name: Initial Registration Delay Timer
          operations: ""
          multipleinstances: Single
          mandatory: Optional
          type: Unsigned Integer
          rangeenumeration: ""
          units: s
          description: The delay before registration is attempted for this LwM2M Server based upon the completion of registration of the previous LwM2M Server in the registration order. This is only applied until the first successful registration after a successful bootstrapping sequence.
        - id: 15
          name: Registration Failure Block
          operations: ""
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: When set to true and registration to this LwM2M server fails, the LwM2M Client blocks registration to other servers in the order. When set to false, the LwM2M Client proceeds with registration to the next server in the order.
        - id: 16
          name: Bootstrap on Registration Failure
          operations: ""
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: If set to true, this indicates that the LwM2M Client should re-bootstrap when either registration is explicitly rejected by the LwM2M Server or registration is considered as failing as dictated by the other resource settings. If set to false, the LwM2M Client will continue with the registration attempts as dictated by the other resource settings.
        - id: 17
          name: Communication Retry Count
          operations: ""
          multipleinstances: Single
          mandatory: Optional
          type: Unsigned Integer
          rangeenumeration: ""
          units: ""
          description: The number of successive communication attempts before which a communication sequence is considered as failed.
        - id: 18
          name: Communication Retry Timer
          operations: ""
          multipleinstances: Single
          mandatory: Optional
          type: Unsigned Integer
          rangeenumeration: ""
          units: s
          description: The delay between successive communication attempts in a communication sequence. This value is multiplied by two to the power of the communication retry attempt minus one (2**(retry attempt-1)) to create an exponential back-off.
        - id: 19
          name: Communication Sequence Delay Timer
          operations: ""
          multipleinstances: Single
          mandatory: Optional
          type: Unsigned Integer
          rangeenumeration: ""
          units: ""
          description: The delay between successive communication sequences. A communication sequence is defined as the exhaustion of the Communication Retry Count and Communication Retry Timer values. A communication sequence can be applied to server registrations or bootstrapping attempts. MAX_VALUE means do not perform another communication sequence.
        - id: 20
          name: Communication Sequence Retry Count
          operations: ""
          multipleinstances: Single
          mandatory: Optional
          type: Unsigned Integer
          rangeenumeration: ""
          units: ""
          description: The number of successive communication sequences before which a registration attempt is considered as failed.
        - id: 21
          name: Trigger
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Using the Trigger Resource a LwM2M Client can indicate whether it is reachable over SMS (value set to 'true') or not (value set to 'false'). The default value (resource not present) is 'false'. When set to 'true' the LwM2M Server MAY, for example, request the LwM2M Client to perform operations, such as the "Update" operation by sending an "Execute" operation on "Registration Update Trigger" Resource via SMS. No SMS response is expected for such a message.
        - id: 22
          name: Preferred Transport
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: The possible values are those listed in the LwM2M Core Specification
          units: ""
          description: Only a single transport binding SHALL be present. When the LwM2M client supports multiple transports, it MAY use this transport to initiate a connection. This resource can also be used to switch between multiple transports e.g. a non-IP device can switch to UDP transport to perform firmware updates.
        - id: 23
          name: Mute Send
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: If true or the Resource is not present, the LwM2M Client Send command capability is de-activated. If false, the LwM2M Client Send Command capability is activated.
- Name: LwM2M Server
  Description1: This LwM2M Objects provides the data related to a LwM2M Server. A Bootstrap-Server has no such an Object Instance associated to it.
  Description2: ""
  ObjectID: 1
  ObjectURN: urn:oma:lwm2m:oma:1:1.2
  LWM2MVersion: "1.2"
  ObjectVersion: "1.2"
  MultipleInstances: Multiple
  Mandatory: Mandatory
  Resources:
    Item:
        - id: 0
          name: Short Server ID
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 1..65534
          units: ""
          description: Used as link to associate server Object Instance.
        - id: 1
          name: Lifetime
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: s
          description: Specify the lifetime of the registration in seconds (see Client Registration Interface). If the value is set to 0, the lifetime is infinite.
        - id: 2
          name: Default Minimum Period
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: s
          description: The default value the LwM2M Client should use for the Minimum Period of an Observation in the absence of this parameter being included in an Observation.If this Resource doesn’t exist, the default value is 0.
        - id: 3
          name: Default Maximum Period
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: s
          description: The default value the LwM2M Client should use for the Maximum Period of an Observation in the absence of this parameter being included in an Observation.
        - id: 4
          name: Disable
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: If this Resource is executed, this LwM2M Server Object is disabled for a certain period defined in the Disabled Timeout Resource. After receiving "Execute" operation, LwM2M Client MUST send response of the operation and perform de-registration process, and underlying network connection between the Client and Server MUST be disconnected to disable the LwM2M Server account.After the above process, the LwM2M Client MUST NOT send any message to the Server and ignore all the messages from the LwM2M Server for the period.
        - id: 5
          name: Disable Timeout
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: s
          description: A period to disable the Server. After this period, the LwM2M Client MUST perform registration process to the Server. If this Resource is not set, a default timeout value is 86400 (1 day).
        - id: 6
          name: Notification Storing When Disabled or Offline
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: If true, the LwM2M Client stores "Notify" operations to the LwM2M Server while the LwM2M Server account is disabled or the LwM2M Client is offline. After the LwM2M Server account is enabled or the LwM2M Client is online, the LwM2M Client reports the stored "Notify" operations to the Server.If false, the LwM2M Client discards all the "Notify" operations or temporarily disables the Observe function while the LwM2M Server is disabled or the LwM2M Client is offline.The default value is true.The maximum number of storing Notifications per Server is up to the implementation.
        - id: 7
          name: Binding
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: The possible values are those listed in the LwM2M Core Specification. This Resource defines the transport binding configured for the LwM2M Client.If the LwM2M Client supports the binding specified in this Resource, the LwM2M Client MUST use that transport for the Current Binding Mode.
        - id: 8
          name: Registration Update Trigger
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: If this Resource is executed the LwM2M Client MUST perform an "Update" operation with this LwM2M Server. The LwM2M Client can use a transport binding supported in the Current Binding Mode, Preferred Transport resource or the transport specified as an argument in the Registration Update Trigger.
        - id: 9
          name: Bootstrap-Request Trigger
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: When this Resource is executed the LwM2M Client MUST initiate a "Client Initiated Bootstrap" procedure in using the LwM2M Bootstrap-Server Account.
        - id: 10
          name: APN Link
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: If this resource is defined, it provides a link to the APN connection profile Object Instance (OMNA registered Object ID:11) to be used to communicate with this server.
        - id: 11
          name: TLS-DTLS Alert Code
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Unsigned Integer
          rangeenumeration: 0..255
          units: ""
          description: If this resource is defined, it contains the most recent TLS / DTLS alert message received from the LwM2M Server respective represented by the AlertDescription defined in Section 7.2 of RFC 5246. This resource set by the LwM2M Client may help the LwM2M Bootstrap-Server to determine the cause of TLS/DTLS connection failure with the respective LwM2M Server.
        - id: 12
          name: Last Bootstrapped
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: If this resource is defined, it represents the last time that the bootstrap server updated this LwM2M Server Account. The LwM2M Client is responsible for updating this value. When the Bootstrap Server detects that this LwM2M Server Account is "out-of-date", the Bootstrap Server can update the LwM2M Server Account as represented by the LwM2M Server object instance.
        - id: 13
          name: Registration Priority Order
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Unsigned Integer
          rangeenumeration: ""
          units: ""
          description: The LwM2M Client sequences the LwM2M Server registrations in increasing order of this value. If this value is not defined, registration attempts to this server are not impacted by other server registrations.
        - id: 14
          name: Initial Registration Delay Timer
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Unsigned Integer
          rangeenumeration: ""
          units: s
          description: The delay, in seconds, before registration is attempted for this LwM2M Server based upon the completion of registration of the previous LwM2M Server in the registration order. This is only applied until the first successful registration after a successful bootstrapping sequence.
        - id: 15
          name: Registration Failure Block
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: When set to true and registration to this LwM2M server fails, the LwM2M Client blocks registration to other servers in the order. When set to false, the LwM2M Client proceeds with registration to the next server in the order.
        - id: 16
          name: Bootstrap on Registration Failure
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: If set to true, this indicates that the LwM2M Client should re-bootstrap when either registration is explicitly rejected by the LwM2M Server or registration is considered as failing as dictated by the other resource settings. If set to false, the LwM2M Client will continue with the registration attempts as dictated by the other resource settings.
        - id: 17
          name: Communication Retry Count
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Unsigned Integer
          rangeenumeration: ""
          units: ""
          description: The number of successive communication attempts before which a communication sequence is considered as failed.
        - id: 18
          name: Communication Retry Timer
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Unsigned Integer
          rangeenumeration: ""
          units: s
          description: The delay, in seconds, between successive communication attempts in a communication sequence. This value is multiplied by two to the power of the communication retry attempt minus one (2**(retry attempt-1)) to create an exponential back-off.
        - id: 19
          name: Communication Sequence Delay Timer
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Unsigned Integer
          rangeenumeration: ""
          units: s
          description: The delay, in seconds, between successive communication sequences. A communication sequence is defined as the exhaustion of the Communication Retry Count and Communication Retry Timer values. A communication sequence can be applied to server registrations or bootstrapping attempts. MAX_VALUE means do not perform another communication sequence.
        - id: 20
          name: Communication Sequence Retry Count
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Unsigned Integer
          rangeenumeration: ""
          units: ""
          description: The number of successive communication sequences before which a registration attempt is considered as failed.
        - id: 21
          name: Trigger
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Using the Trigger Resource a LwM2M Client can indicate whether it is reachable over SMS (value set to 'true') or not (value set to 'false'). The default value (resource not present) is 'false'. When set to 'true' the LwM2M Server MAY, for example, request the LwM2M Client to perform operations, such as the "Update" operation by sending an "Execute" operation on "Registration Update Trigger" Resource via SMS. No SMS response is expected for such a message.
        - id: 22
          name: Preferred Transport
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: The possible values are those listed in the LwM2M Core Specification
          units: ""
          description: Only a single transport binding SHALL be present. When the LwM2M client supports multiple transports, it MAY use this transport to initiate a connection. This resource can also be used to switch between multiple transports e.g. a non-IP device can switch to UDP transport to perform firmware updates.
        - id: 23
          name: Mute Send
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: If true or the Resource is not present, the LwM2M Client Send command capability is de-activated. If false, the LwM2M Client Send Command capability is activated.
        - id: 24
          name: Alternate APN Links
          operations: RW
          multipleinstances: Multiple
          mandatory: Optional
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: If this resource is defined, it provides links to alternate APN connection profile Object Instance (OMNA registered Object ID:11) to be used to communicate with this server if Resource 10 has configuration conflicts.
        - id: 25
          name: Supported Server Versions
          operations: RW
          multipleinstances: Multiple
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: This resource provides the supported enabler versions of the server to the client as a set of strings. Format for each string is 1*DIGIT"."1*DIGIT"."1*DIGIT where the third DIGIT is optional.
        - id: 26
          name: Default Notification Mode
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..1
          units: ""
          description: 'This resource indicates the default mode for observations to be sent: 0 = Non-Confirmable, 1 = Confirmable.'
        - id: 27
          name: Profile ID Hash Algorithm
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Unsigned Integer
          rangeenumeration: 0..255
          units: ""
          description: If this resource is defined, it contains the hash algorithm the LwM2M Server would prefer the LwM2M Client to use with the dynamically generated mode of creating Profile IDs. The numerical ID value of the 'Suite Identifiers' registered by RFC 6920 is used in this Resource.
- Name: LwM2M Access Control
  Description1: Access Control Object is used to check whether the LwM2M Server has access right for performing an operation.
  Description2: ""
  ObjectID: 2
  ObjectURN: urn:oma:lwm2m:oma:2
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: Object ID
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 1..65534
          units: ""
          description: Resources 0 and 1 point to the Object Instance for which the Instances of the ACL Resource of that Access Control Object Instance are applicable.
        - id: 1
          name: Object Instance ID
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..65535
          units: ""
          description: See above
        - id: 2
          name: ACL
          operations: RW
          multipleinstances: Multiple
          mandatory: Optional
          type: Integer
          rangeenumeration: 16-bit
          units: ""
          description: 'The Resource Instance ID MUST be the Short Server ID of a certain LwM2M Server for which associated access rights are contained in the Resource Instance value.The Resource Instance ID 0 is a specific ID, determining the ACL Instance which contains the default access rights.Each bit set in the Resource Instance value, grants an access right to the LwM2M Server to the corresponding operation.The bit order is specified as below.1st LSB: R(Read, Observe, Write-Attributes)2nd LSB: W(Write)3rd LSB: E(Execute)4th LSB: D(Delete)5th LSB: C(Create)Other bits are reserved for future use.'
        - id: 3
          name: Access Control Owner
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..65535
          units: ""
          description: Short Server ID of a certain LwM2M Server; only such an LwM2M Server can manage the Resources of this Object Instance. The specific value MAX_ID=65535 means this Access Control Object Instance is created and modified during a Bootstrap phase only.
- Name: LwM2M Access Control
  Description1: Access Control Object is used to check whether the LwM2M Server has access right for performing an operation.
  Description2: ""
  ObjectID: 2
  ObjectURN: urn:oma:lwm2m:oma:2:1.1
  LWM2MVersion: "1.0"
  ObjectVersion: "1.1"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: Object ID
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 1..65534
          units: ""
          description: Resources 0 and 1 point to the Object Instance for which the Instances of the ACL Resource of that Access Control Object Instance are applicable.
        - id: 1
          name: Object Instance ID
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..65535
          units: ""
          description: See above
        - id: 2
          name: ACL
          operations: RW
          multipleinstances: Multiple
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..31
          units: ""
          description: 'The Resource Instance ID MUST be the Short Server ID of a certain LwM2M Server for which associated access rights are contained in the Resource Instance value.The Resource Instance ID 0 is a specific ID, determining the ACL Instance which contains the default access rights.Each bit set in the Resource Instance value, grants an access right to the LwM2M Server to the corresponding operation.The bit order is specified as below.1st LSB: R(Read, Observe, Write-Attributes)2nd LSB: W(Write)3rd LSB: E(Execute)4th LSB: D(Delete)5th LSB: C(Create)Other bits are reserved for future use.'
        - id: 3
          name: Access Control Owner
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..65535
          units: ""
          description: Short Server ID of a certain LwM2M Server; only such an LwM2M Server can manage the Resources of this Object Instance. The specific value MAX_ID=65535 means this Access Control Object Instance is created and modified during a Bootstrap phase only.
- Name: Device
  Description1: This LwM2M Object provides a range of device related information which can be queried by the LwM2M Server, and a device reboot and factory reset function.
  Description2: ""
  ObjectID: 3
  ObjectURN: urn:oma:lwm2m:oma:3
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Mandatory
  Resources:
    Item:
        - id: 0
          name: Manufacturer
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Human readable manufacturer name
        - id: 1
          name: Model Number
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: A model identifier (manufacturer specified string)
        - id: 2
          name: Serial Number
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Serial Number
        - id: 3
          name: Firmware Version
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Current firmware version of the Device.The Firmware Management function could rely on this resource.
        - id: 4
          name: Reboot
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reboot the LwM2M Device to restore the Device from unexpected firmware failure.
        - id: 5
          name: Factory Reset
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Perform factory reset of the LwM2M Device to make the LwM2M Device to go through initial deployment sequence where provisioning and bootstrap sequence is performed. This requires client ensuring post factory reset to have minimal information to allow it to carry out one of the bootstrap methods specified in section 5.2.3. When this Resource is executed, “De-register” operation MAY be sent to the LwM2M Server(s) before factory reset of the LwM2M Device.
        - id: 6
          name: Available Power Sources
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: Integer
          rangeenumeration: 0-7
          units: ""
          description: 0 – DC power1 – Internal Battery2 – External Battery4 – Power over Ethernet5 – USB6 – AC (Mains) power7 – SolarThe same Resource Instance ID MUST be used to associate a given Power Source (Resource ID:6) with its Present Voltage (Resource ID:7) and its Present Current (Resource ID:8)
        - id: 7
          name: Power Source Voltage
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: mV
          description: Present voltage for each Available Power Sources Resource Instance.
        - id: 8
          name: Power Source Current
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: mA
          description: Present current for each Available Power Source.
        - id: 9
          name: Battery Level
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0-100
          units: '%'
          description: Contains the current battery level as a percentage (with a range from 0 to 100). This value is only valid for the Device internal Battery if present (one Available Power Sources Resource Instance is 1).
        - id: 10
          name: Memory Free
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: KB
          description: Estimated current available amount of storage space which can store data and software in the LwM2M Device (expressed in kilobytes).
        - id: 11
          name: Error Code
          operations: R
          multipleinstances: Multiple
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0-8
          units: ""
          description: 0=No error1=Low battery power2=External power supply off3=GPS module failure4=Low received signal strength5=Out of memory6=SMS failure7=IP connectivity failure8=Peripheral malfunctionWhen the single Device Object Instance is initiated, there is only one error code Resource Instance whose value is equal to 0 that means no error. When the first error happens, the LwM2M Client changes error code Resource Instance to any non-zero value to indicate the error type. When any other error happens, a new error code Resource Instance is created. When an error associated with a Resource Instance is no longer present, that Resource Instance is deleted. When the single existing error is no longer present, the LwM2M Client returns to the original no error state where Instance 0 has value 0.This error code Resource MAY be observed by the LwM2M Server. How to deal with LwM2M Client’s error report depends on the policy of the LwM2M Server.
        - id: 12
          name: Reset Error Code
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Delete all error code Resource Instances and create only one zero-value error code that implies no error, then re-evaluate all error conditions and update and create Resources Instances to capture all current error conditions.
        - id: 13
          name: Current Time
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: Current UNIX time of the LwM2M Client.The LwM2M Client should be responsible to increase this time value as every second elapses.The LwM2M Server is able to write this Resource to make the LwM2M Client synchronized with the LwM2M Server.
        - id: 14
          name: UTC Offset
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Indicates the UTC offset currently in effect for this LwM2M Device. UTC+X [ISO 8601].
        - id: 15
          name: Timezone
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Indicates in which time zone the LwM2M Device is located, in IANA Timezone (TZ) database format.
        - id: 16
          name: Supported Binding and Modes
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: Indicates which bindings and modes are supported in the LwM2M Client. The possible values are those listed in the LwM2M Core Specification.
        - id: 17
          name: Device Type
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: 'Type of the device (manufacturer specified string: e.g. smart meters / dev Class…)'
        - id: 18
          name: Hardware Version
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Current hardware version of the device
        - id: 19
          name: Software Version
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: 'Current software version of the device (manufacturer specified string). On elaborated LwM2M device, SW could be split in 2 parts: a firmware one and a higher level software on top.Both pieces of Software are together managed by LwM2M Firmware Update Object (Object ID 5)'
        - id: 20
          name: Battery Status
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0-6
          units: ""
          description: This value is only valid for the Device Internal Battery if present (one Available Power Sources Resource Instance value is 1).BatteryStatusMeaningDescription0NormalThe battery is operating normally and not on power.1ChargingThe battery is currently charging.2Charge CompleteThe battery is fully charged and still on power.3DamagedThe battery has some problem.4Low BatteryThe battery is low on charge.5Not InstalledThe battery is not installed.6UnknownThe battery information is not available.
        - id: 21
          name: Memory Total
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Total amount of storage space which can store data and software in the LwM2M Device (expressed in kilobytes).
        - id: 22
          name: ExtDevInfo
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: Reference to external “Device” object instance containing information. For example, such an external device can be a Host Device, which is a device into which the Device containing the LwM2M client is embedded. This Resource may be used to retrieve information about the Host Device.
- Name: Device
  Description1: This LwM2M Object provides a range of device related information which can be queried by the LwM2M Server, and a device reboot and factory reset function.
  Description2: ""
  ObjectID: 3
  ObjectURN: urn:oma:lwm2m:oma:3:1.1
  LWM2MVersion: "1.1"
  ObjectVersion: "1.1"
  MultipleInstances: Single
  Mandatory: Mandatory
  Resources:
    Item:
        - id: 0
          name: Manufacturer
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Human readable manufacturer name
        - id: 1
          name: Model Number
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: A model identifier (manufacturer specified string)
        - id: 2
          name: Serial Number
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Serial Number
        - id: 3
          name: Firmware Version
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Current firmware version of the Device.The Firmware Management function could rely on this resource.
        - id: 4
          name: Reboot
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reboot the LwM2M Device to restore the Device from unexpected firmware failure.
        - id: 5
          name: Factory Reset
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Perform factory reset of the LwM2M Device to make the LwM2M Device to go through initial deployment sequence where provisioning and bootstrap sequence is performed. This requires client ensuring post factory reset to have minimal information to allow it to carry out one of the bootstrap methods specified in section 5.2.3. When this Resource is executed, "De-register" operation MAY be sent to the LwM2M Server(s) before factory reset of the LwM2M Device.
        - id: 6
          name: Available Power Sources
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..7
          units: ""
          description: '0: DC power1: Internal Battery2: External Battery3: Fuel Cell4: Power over Ethernet5: USB6: AC (Mains) power7: SolarThe same Resource Instance ID MUST be used to associate a given Power Source (Resource ID:6) with its Present Voltage (Resource ID:7) and its Present Current (Resource ID:8)'
        - id: 7
          name: Power Source Voltage
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Present voltage for each Available Power Sources Resource Instance. The unit used for this resource is in mV.
        - id: 8
          name: Power Source Current
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Present current for each Available Power Source. The unit used for this resource is in mA.
        - id: 9
          name: Battery Level
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..100
          units: '%'
          description: Contains the current battery level as a percentage (with a range from 0 to 100). This value is only valid for the Device internal Battery if present (one Available Power Sources Resource Instance is 1).
        - id: 10
          name: Memory Free
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Estimated current available amount of storage space which can store data and software in the LwM2M Device (expressed in kilobytes).
        - id: 11
          name: Error Code
          operations: R
          multipleinstances: Multiple
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..8
          units: ""
          description: 0=No error1=Low battery power2=External power supply off3=GPS module failure4=Low received signal strength5=Out of memory6=SMS failure7=IP connectivity failure8=Peripheral malfunctionWhen the single Device Object Instance is initiated, there is only one error code Resource Instance whose value is equal to 0 that means no error. When the first error happens, the LwM2M Client changes error code Resource Instance to any non-zero value to indicate the error type. When any other error happens, a new error code Resource Instance is created. When an error associated with a Resource Instance is no longer present, that Resource Instance is deleted. When the single existing error is no longer present, the LwM2M Client returns to the original no error state where Instance 0 has value 0.This error code Resource MAY be observed by the LwM2M Server. How to deal with LwM2M Client’s error report depends on the policy of the LwM2M Server.
        - id: 12
          name: Reset Error Code
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Delete all error code Resource Instances and create only one zero-value error code that implies no error, then re-evaluate all error conditions and update and create Resources Instances to capture all current error conditions.
        - id: 13
          name: Current Time
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: Current UNIX time of the LwM2M Client.The LwM2M Client should be responsible to increase this time value as every second elapses.The LwM2M Server is able to write this Resource to make the LwM2M Client synchronized with the LwM2M Server.
        - id: 14
          name: UTC Offset
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Indicates the UTC offset currently in effect for this LwM2M Device. UTC+X [ISO 8601].
        - id: 15
          name: Timezone
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Indicates in which time zone the LwM2M Device is located, in IANA Timezone (TZ) database format.
        - id: 16
          name: Supported Binding and Modes
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: Indicates which bindings and modes are supported in the LwM2M Client. The possible values are those listed in the LwM2M Core Specification.
        - id: 17
          name: Device Type
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: 'Type of the device (manufacturer specified string: e.g. smart meters / dev Class / ...)'
        - id: 18
          name: Hardware Version
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Current hardware version of the device
        - id: 19
          name: Software Version
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: 'Current software version of the device (manufacturer specified string). On elaborated LwM2M device, SW could be split in 2 parts: a firmware one and a higher level software on top.Both pieces of Software are together managed by LwM2M Firmware Update Object (Object ID 5)'
        - id: 20
          name: Battery Status
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..6
          units: ""
          description: This value is only valid for the Device Internal Battery if present (one Available Power Sources Resource Instance value is 1).BatteryStatusMeaningDescription0NormalThe battery is operating normally and not on power.1ChargingThe battery is currently charging.2Charge CompleteThe battery is fully charged and still on power.3DamagedThe battery has some problem.4Low BatteryThe battery is low on charge.5Not InstalledThe battery is not installed.6UnknownThe battery information is not available.
        - id: 21
          name: Memory Total
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Total amount of storage space which can store data and software in the LwM2M Device (expressed in kilobytes).
        - id: 22
          name: ExtDevInfo
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: Reference to external "Device" object instance containing information. For example, such an external device can be a Host Device, which is a device into which the Device containing the LwM2M client is embedded. This Resource may be used to retrieve information about the Host Device.
- Name: Device
  Description1: This LwM2M Object provides a range of device related information which can be queried by the LwM2M Server, and a device reboot and factory reset function.
  Description2: ""
  ObjectID: 3
  ObjectURN: urn:oma:lwm2m:oma:3:1.2
  LWM2MVersion: "1.1"
  ObjectVersion: "1.2"
  MultipleInstances: Single
  Mandatory: Mandatory
  Resources:
    Item:
        - id: 0
          name: Manufacturer
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Human readable manufacturer name
        - id: 1
          name: Model Number
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: A model identifier (manufacturer specified string)
        - id: 2
          name: Serial Number
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Serial Number
        - id: 3
          name: Firmware Version
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Current firmware version of the Device.The Firmware Management function could rely on this resource.
        - id: 4
          name: Reboot
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reboot the LwM2M Device to restore the Device from unexpected firmware failure.
        - id: 5
          name: Factory Reset
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Perform factory reset of the LwM2M Device to make the LwM2M Device to go through initial deployment sequence where provisioning and bootstrap sequence is performed. This requires client ensuring post factory reset to have minimal information to allow it to carry out one of the bootstrap methods specified in section 5.2.3. When this Resource is executed, "De-register" operation MAY be sent to the LwM2M Server(s) before factory reset of the LwM2M Device.
        - id: 6
          name: Available Power Sources
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..7
          units: ""
          description: '0: DC power1: Internal Battery2: External Battery3: Fuel Cell4: Power over Ethernet5: USB6: AC (Mains) power7: SolarThe same Resource Instance ID MUST be used to associate a given Power Source (Resource ID:6) with its Present Voltage (Resource ID:7) and its Present Current (Resource ID:8)'
        - id: 7
          name: Power Source Voltage
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Present voltage for each Available Power Sources Resource Instance. The unit used for this resource is in mV.
        - id: 8
          name: Power Source Current
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Present current for each Available Power Source. The unit used for this resource is in mA.
        - id: 9
          name: Battery Level
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..100
          units: /100
          description: Contains the current battery level as a percentage (with a range from 0 to 100). This value is only valid for the Device internal Battery if present (one Available Power Sources Resource Instance is 1).
        - id: 10
          name: Memory Free
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: 'Estimated current available amount of storage space which can store data and software in the LwM2M Device (expressed in kilobytes). Note: 1 kilobyte corresponds to 1000 bytes.'
        - id: 11
          name: Error Code
          operations: R
          multipleinstances: Multiple
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..32
          units: ""
          description: 0=No error1=Low battery power2=External power supply off3=GPS module failure4=Low received signal strength5=Out of memory6=SMS failure7=IP connectivity failure8=Peripheral malfunction9..15=Reserved for future use16..32=Device specific error codesWhen the single Device Object Instance is initiated, there is only one error code Resource Instance whose value is equal to 0 that means no error. When the first error happens, the LwM2M Client changes error code Resource Instance to any non-zero value to indicate the error type. When any other error happens, a new error code Resource Instance is created. When an error associated with a Resource Instance is no longer present, that Resource Instance is deleted. When the single existing error is no longer present, the LwM2M Client returns to the original no error state where Instance 0 has value 0.This error code Resource MAY be observed by the LwM2M Server. How to deal with LwM2M Client’s error report depends on the policy of the LwM2M Server. Error codes in between 16 and 32 are specific to the Device and may have different meanings among implementations.
        - id: 12
          name: Reset Error Code
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Delete all error code Resource Instances and create only one zero-value error code that implies no error, then re-evaluate all error conditions and update and create Resources Instances to capture all current error conditions.
        - id: 13
          name: Current Time
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: Current UNIX time of the LwM2M Client.The LwM2M Client should be responsible to increase this time value as every second elapses.The LwM2M Server is able to write this Resource to make the LwM2M Client synchronized with the LwM2M Server.
        - id: 14
          name: UTC Offset
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Indicates the UTC offset currently in effect for this LwM2M Device. UTC+X [ISO 8601].
        - id: 15
          name: Timezone
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Indicates in which time zone the LwM2M Device is located, in IANA Timezone (TZ) database format.
        - id: 16
          name: Supported Binding and Modes
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: Indicates which bindings and modes are supported in the LwM2M Client. The possible values are those listed in the LwM2M Core Specification.
        - id: 17
          name: Device Type
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: 'Type of the device (manufacturer specified string: e.g. smart meters / dev Class / ...)'
        - id: 18
          name: Hardware Version
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Current hardware version of the device
        - id: 19
          name: Software Version
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: 'Current software version of the device (manufacturer specified string). On elaborated LwM2M device, SW could be split in 2 parts: a firmware one and a higher level software on top.Both pieces of Software are together managed by LwM2M Firmware Update Object (Object ID 5)'
        - id: 20
          name: Battery Status
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..6
          units: ""
          description: This value is only valid for the Device Internal Battery if present (one Available Power Sources Resource Instance value is 1).BatteryStatusMeaningDescription0NormalThe battery is operating normally and not on power.1ChargingThe battery is currently charging.2Charge CompleteThe battery is fully charged and still on power.3DamagedThe battery has some problem.4Low BatteryThe battery is low on charge.5Not InstalledThe battery is not installed.6UnknownThe battery information is not available.
        - id: 21
          name: Memory Total
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: 'Total amount of storage space which can store data and software in the LwM2M Device (expressed in kilobytes).Note: 1 kilobyte corresponds to 1000 bytes.'
        - id: 22
          name: ExtDevInfo
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: Reference to external "Device" object instance containing information. For example, such an external device can be a Host Device, which is a device into which the Device containing the LwM2M client is embedded. This Resource may be used to retrieve information about the Host Device.
- Name: Connectivity Monitoring
  Description1: |-
    This LwM2M Object enables monitoring of parameters related to network connectivity.
    In this general connectivity Object, the Resources are limited to the most general cases common to most network bearers. It is recommended to read the description, which refers to relevant standard development organizations (e.g. 3GPP, IEEE).
    The goal of the Connectivity Monitoring Object is to carry information reflecting the more up to date values of the current connection for monitoring purposes. Resources such as Link Quality, Radio Signal Strength, Cell ID are retrieved during connected mode at least for cellular networks.
  Description2: ""
  ObjectID: 4
  ObjectURN: urn:oma:lwm2m:oma:4
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: Network Bearer
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0-50
          units: ""
          description: 'Indicates the network bearer used for the current LwM2M communication session from the network bearer list below. The number range is split into three categories:0 - 20 are Cellular Bearers 21 - 40 are Wireless Bearers 41 - 50 are Wireline BearersMore specifically: 0: GSM cellular network1: TD-SCDMA cellular network2: WCDMA cellular network3: CDMA2000 cellular network4: WiMAX cellular network5: LTE-TDD cellular network6: LTE-FDD cellular network7: NB-IoT8 - 20: Reserved for other types of cellular network21: WLAN network22: Bluetooth network23: IEEE 802.15.4 network24 - 40: Reserved for other types of local wireless network41: Ethernet42: DSL43: PLC44 - 50: reserved for other types of wireline networks.'
        - id: 1
          name: Available Network Bearer
          operations: R
          multipleinstances: Multiple
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0-50
          units: ""
          description: Indicates a list of current available network bearer. Each Resource Instance has a value from the network bearer list.
        - id: 2
          name: Radio Signal Strength
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: dBm
          description: 'Indicates the average value of the received signal strength indication used in thecurrent network bearer (as indicated by Resource 0 of this Object). For the following network bearers the signal strength parameters indicated below are represented by this resource:GSM:RSSIUMTS: RSCPLTE:RSRPNB-IoT: NRSRPFor more details on Network Measurement Report, refer to the appropriate Cellular or Wireless Network standards, (e.g. for LTE Cellular Networkrefer to 3GPP TS 36.133 specification).'
        - id: 3
          name: Link Quality
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: This contains received link qualitye.g. LQI for IEEE 802.15.4 (range 0...255), RxQual Downlink for GSM (range 0...7, refer to [3GPP 44.018] for more details on Network Measurement Report encoding), RSRQ for LTE, (refer to [3GPP 36.214]), NRSRQ for NB-IoT (refer to [3GPP 36.214]).
        - id: 4
          name: IP Addresses
          operations: R
          multipleinstances: Multiple
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: The IP addresses assigned to the connectivity interface. (e.g. IPv4, IPv6, etc.)
        - id: 5
          name: Router IP Addresses
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: 'The IP address of the next-hop IP router, on each of the interfaces specified in resource 4 (IP Addresses).Note: This IP Address doesn’t indicate the Server IP address.'
        - id: 6
          name: Link Utilization
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0-100
          units: '%'
          description: The percentage indicating the average utilization of the link to the next-hop IP router.
        - id: 7
          name: APN
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Access Point Name in case Network Bearer Resource is a Cellular Network.
        - id: 8
          name: Cell ID
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: 'Serving Cell ID in case Network Bearer Resource is a Cellular Network.As specified in TS [3GPP 23.003] and in [3GPP. 24.008]. Range (0...65535) in GSM/EDGEUTRAN Cell ID has a length of 28 bits.Cell Identity in WCDMA/TD-SCDMA. Range: (0...268435455).LTE Cell ID has a length of 28 bits.Parameter definitions in [3GPP 25.331].'
        - id: 9
          name: SMNC
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0-999
          units: '%'
          description: Serving Mobile Network Code. This is applicable when the Network Bearer Resource value is referring to a cellular network.As specified in TS [3GPP 23.003].
        - id: 10
          name: SMCC
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0-999
          units: ""
          description: Serving Mobile Country Code. This is applicable when the Network Bearer Resource value is referring to a cellular network.As specified in TS [3GPP 23.003].
- Name: Connectivity Monitoring
  Description1: |-
    This LwM2M Object enables monitoring of parameters related to network connectivity.
    In this general connectivity Object, the Resources are limited to the most general cases common to most network bearers. It is recommended to read the description, which refers to relevant standard development organizations (e.g. 3GPP, IEEE).
    The goal of the Connectivity Monitoring Object is to carry information reflecting the more up to date values of the current connection for monitoring purposes. Resources such as Link Quality, Radio Signal Strength, Cell ID are retrieved during connected mode at least for cellular networks.
  Description2: ""
  ObjectID: 4
  ObjectURN: urn:oma:lwm2m:oma:4:1.1
  LWM2MVersion: "1.0"
  ObjectVersion: "1.1"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: Network Bearer
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0-50
          units: ""
          description: 'Indicates the network bearer used for the current LwM2M communication session from the network bearer list below. The number range is split into three categories:0 - 20 are Cellular Bearers 21 - 40 are Wireless Bearers 41 - 50 are Wireline BearersMore specifically: 0: GSM cellular network1: TD-SCDMA cellular network2: WCDMA cellular network3: CDMA2000 cellular network4: WiMAX cellular network5: LTE-TDD cellular network6: LTE-FDD cellular network7: NB-IoT8 - 20: Reserved for other types of cellular network21: WLAN network22: Bluetooth network23: IEEE 802.15.4 network24 - 40: Reserved for other types of local wireless network41: Ethernet42: DSL43: PLC44 - 50: reserved for other types of wireline networks.'
        - id: 1
          name: Available Network Bearer
          operations: R
          multipleinstances: Multiple
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0-50
          units: ""
          description: Indicates a list of current available network bearer. Each Resource Instance has a value from the network bearer list.
        - id: 2
          name: Radio Signal Strength
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: dBm
          description: 'Indicates the average value of the received signal strength indication used in thecurrent network bearer (as indicated by Resource 0 of this Object). For the following network bearers the signal strength parameters indicated below are represented by this resource:GSM:RSSIUMTS: RSCPLTE:RSRPNB-IoT: NRSRPFor more details on Network Measurement Report, refer to the appropriate Cellular or Wireless Network standards, (e.g. for LTE Cellular Networkrefer to 3GPP TS 36.133 specification).'
        - id: 3
          name: Link Quality
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: This contains received link qualitye.g. LQI for IEEE 802.15.4 (range 0...255), RxQual Downlink for GSM (range 0...7, refer to [3GPP 44.018] for more details on Network Measurement Report encoding), RSRQ for LTE, (refer to [3GPP 36.214]), NRSRQ for NB-IoT (refer to [3GPP 36.214]).
        - id: 4
          name: IP Addresses
          operations: R
          multipleinstances: Multiple
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: The IP addresses assigned to the connectivity interface. (e.g. IPv4, IPv6, etc.)
        - id: 5
          name: Router IP Addresses
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: 'The IP address of the next-hop IP router, on each of the interfaces specified in resource 4 (IP Addresses).Note: This IP Address doesn’t indicate the Server IP address.'
        - id: 6
          name: Link Utilization
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0-100
          units: '%'
          description: The percentage indicating the average utilization of the link to the next-hop IP router.
        - id: 7
          name: APN
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Access Point Name in case Network Bearer Resource is a Cellular Network.
        - id: 8
          name: Cell ID
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: 'Serving Cell ID in case Network Bearer Resource is a Cellular Network.As specified in TS [3GPP 23.003] and in [3GPP. 24.008]. Range (0...65535) in GSM/EDGEUTRAN Cell ID has a length of 28 bits.Cell Identity in WCDMA/TD-SCDMA. Range: (0...268435455).LTE Cell ID has a length of 28 bits.Parameter definitions in [3GPP 25.331].'
        - id: 9
          name: SMNC
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0-999
          units: '%'
          description: Serving Mobile Network Code. This is applicable when the Network Bearer Resource value is referring to a cellular network.As specified in TS [3GPP 23.003].
        - id: 10
          name: SMCC
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0-999
          units: ""
          description: Serving Mobile Country Code. This is applicable when the Network Bearer Resource value is referring to a cellular network.As specified in TS [3GPP 23.003].
        - id: 11
          name: SignalSNR
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: dB
          description: 'SINR: Signal to Interference plus Noise Ratio SINR is the ratio of the strength of the received signal to the strength of the received interference signal (noise and interference).'
- Name: Connectivity Monitoring
  Description1: |-
    This LwM2M Object enables monitoring of parameters related to network connectivity.
    In this general connectivity Object, the Resources are limited to the most general cases common to most network bearers. It is recommended to read the description, which refers to relevant standard development organizations (e.g. 3GPP, IEEE).
    The goal of the Connectivity Monitoring Object is to carry information reflecting the more up to date values of the current connection for monitoring purposes. Resources such as Link Quality, Radio Signal Strength, Cell ID are retrieved during connected mode at least for cellular networks.
  Description2: ""
  ObjectID: 4
  ObjectURN: urn:oma:lwm2m:oma:4:1.2
  LWM2MVersion: "1.1"
  ObjectVersion: "1.2"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: Network Bearer
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..50
          units: ""
          description: 'Indicates the network bearer used for the current LwM2M communication session from the network bearer list below. The number range is split into three categories:0 - 20 are Cellular Bearers 21 - 40 are Wireless Bearers 41 - 50 are Wireline BearersMore specifically: 0: GSM cellular network1: TD-SCDMA cellular network2: WCDMA cellular network3: CDMA2000 cellular network4: WiMAX cellular network5: LTE-TDD cellular network6: LTE-FDD cellular network7: NB-IoT8 - 20: Reserved for other types of cellular network21: WLAN network22: Bluetooth network23: IEEE 802.15.4 network24 - 40: Reserved for other types of local wireless network41: Ethernet42: DSL43: PLC44 - 50: reserved for other types of wireline networks.'
        - id: 1
          name: Available Network Bearer
          operations: R
          multipleinstances: Multiple
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..50
          units: ""
          description: Indicates a list of current available network bearer. Each Resource Instance has a value from the network bearer list.
        - id: 2
          name: Radio Signal Strength
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: 'Indicates the average value of the received signal strength indication used in thecurrent network bearer (as indicated by Resource 0 of this Object). The value is expressed in dBm. For the following network bearers the signal strength parameters indicated below are represented by this resource:GSM:RSSIUMTS: RSCPLTE:RSRPNB-IoT: NRSRPFor more details on Network Measurement Report, refer to the appropriate Cellular or Wireless Network standards, (e.g. for LTE Cellular Networkrefer to 3GPP TS 36.133 specification).'
        - id: 3
          name: Link Quality
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: This contains received link qualitye.g. LQI for IEEE 802.15.4 (range 0...255), RxQual Downlink for GSM (range 0...7, refer to [3GPP 44.018] for more details on Network Measurement Report encoding), RSRQ for LTE, (refer to [3GPP 36.214]), NRSRQ for NB-IoT (refer to [3GPP 36.214]).
        - id: 4
          name: IP Addresses
          operations: R
          multipleinstances: Multiple
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: The IP addresses assigned to the connectivity interface. (e.g. IPv4, IPv6, etc.)
        - id: 5
          name: Router IP Addresses
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: 'The IP address of the next-hop IP router, on each of the interfaces specified in resource 4 (IP Addresses).Note: This IP Address doesn''t indicate the Server IP address.'
        - id: 6
          name: Link Utilization
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..100
          units: '%'
          description: The percentage indicating the average utilization of the link to the next-hop IP router.
        - id: 7
          name: APN
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Access Point Name in case Network Bearer Resource is a Cellular Network.
        - id: 8
          name: Cell ID
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: 'Serving Cell ID in case Network Bearer Resource is a Cellular Network.As specified in TS [3GPP 23.003] and in [3GPP. 24.008]. Range (0...65535) in GSM/EDGEUTRAN Cell ID has a length of 28 bits.Cell Identity in WCDMA/TD-SCDMA. Range: (0...268435455).LTE Cell ID has a length of 28 bits.Parameter definitions in [3GPP 25.331].'
        - id: 9
          name: SMNC
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..999
          units: ""
          description: Serving Mobile Network Code. This is applicable when the Network Bearer Resource value is referring to a cellular network.As specified in TS [3GPP 23.003].
        - id: 10
          name: SMCC
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..999
          units: ""
          description: Serving Mobile Country Code. This is applicable when the Network Bearer Resource value is referring to a cellular network.As specified in TS [3GPP 23.003].
        - id: 11
          name: SignalSNR
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: dB
          description: 'SINR: Signal to Interference plus Noise Ratio SINR is the ratio of the strength of the received signal to the strength of the received interference signal (noise and interference).'
        - id: 12
          name: LAC
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Location Area Code in case Network Bearer Resource is a Cellular Network. As specified in TS [3GPP 23.003] and in [3GPP. 24.008]
- Name: Connectivity Monitoring
  Description1: |-
    This LwM2M Object enables monitoring of parameters related to network connectivity.
    In this general connectivity Object, the Resources are limited to the most general cases common to most network bearers. It is recommended to read the description, which refers to relevant standard development organizations (e.g. 3GPP, IEEE).
    The goal of the Connectivity Monitoring Object is to carry information reflecting the more up to date values of the current connection for monitoring purposes. Resources such as Link Quality, Radio Signal Strength, Cell ID are retrieved during connected mode at least for cellular networks.
  Description2: ""
  ObjectID: 4
  ObjectURN: urn:oma:lwm2m:oma:4:1.3
  LWM2MVersion: "1.1"
  ObjectVersion: "1.3"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: Network Bearer
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..50
          units: ""
          description: 'Indicates the network bearer used for the current LwM2M communication session from the network bearer list below. The number range is split into three categories:0 - 20 are Cellular Bearers 21 - 40 are Wireless Bearers 41 - 50 are Wireline BearersMore specifically: 0: GSM cellular network1: TD-SCDMA cellular network2: WCDMA cellular network3: CDMA2000 cellular network4: WiMAX cellular network5: LTE-TDD cellular network6: LTE-FDD cellular network7: NB-IoT8: 5G-NR TDD9: 5G-NR FDD10 - 20: Reserved for other types of cellular network21: WLAN network22: Bluetooth network23: IEEE 802.15.4 network24 - 40: Reserved for other types of local wireless network41: Ethernet42: DSL43: PLC44 - 50: reserved for other types of wireline networks.'
        - id: 1
          name: Available Network Bearer
          operations: R
          multipleinstances: Multiple
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..50
          units: ""
          description: Indicates a list of current available network bearer. Each Resource Instance has a value from the network bearer list.
        - id: 2
          name: Radio Signal Strength
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: 'Indicates the average value of the received signal strength indication used in thecurrent network bearer (as indicated by Resource 0 of this Object). The value is expressed in dBm. For the following network bearers the signal strength parameters indicated below are represented by this resource:GSM:RSSIUMTS: RSCPLTE:RSRPNB-IoT: NRSRPFor more details on Network Measurement Report, refer to the appropriate Cellular or Wireless Network standards, (e.g. for LTE Cellular Networkrefer to 3GPP TS 36.133 specification).'
        - id: 3
          name: Link Quality
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: This contains received link qualitye.g. LQI for IEEE 802.15.4 (range 0...255), RxQual Downlink for GSM (range 0...7, refer to [3GPP 44.018] for more details on Network Measurement Report encoding), RSRQ for LTE, (refer to [3GPP 36.214]), NRSRQ for NB-IoT (refer to [3GPP 36.214]).
        - id: 4
          name: IP Addresses
          operations: R
          multipleinstances: Multiple
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: The IP addresses assigned to the connectivity interface. (e.g. IPv4, IPv6, etc.)
        - id: 5
          name: Router IP Addresses
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: 'The IP address of the next-hop IP router, on each of the interfaces specified in resource 4 (IP Addresses).Note: This IP Address doesn''t indicate the Server IP address.'
        - id: 6
          name: Link Utilization
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..100
          units: /100
          description: The percentage indicating the average utilization of the link to the next-hop IP router.
        - id: 7
          name: APN
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Access Point Name in case Network Bearer Resource is a Cellular Network.
        - id: 8
          name: Cell ID
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: 'Serving Cell ID in case Network Bearer Resource is a Cellular Network.As specified in TS [3GPP 23.003] and in [3GPP. 24.008]. Range (0...65535) in GSM/EDGEUTRAN Cell ID has a length of 28 bits.Cell Identity in WCDMA/TD-SCDMA. Range: (0...268435455).LTE Cell ID has a length of 28 bits.Parameter definitions in [3GPP 25.331].'
        - id: 9
          name: SMNC
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..999
          units: ""
          description: Serving Mobile Network Code. This is applicable when the Network Bearer Resource value is referring to a cellular network.As specified in TS [3GPP 23.003].
        - id: 10
          name: SMCC
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..999
          units: ""
          description: Serving Mobile Country Code. This is applicable when the Network Bearer Resource value is referring to a cellular network.As specified in TS [3GPP 23.003].
        - id: 11
          name: SignalSNR
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: dB
          description: 'SINR: Signal to Interference plus Noise Ratio SINR is the ratio of the strength of the received signal to the strength of the received interference signal (noise and interference).'
        - id: 12
          name: LAC
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Location Area Code in case Network Bearer Resource is a Cellular Network. As specified in TS [3GPP 23.003] and in [3GPP. 24.008]
        - id: 13
          name: Coverage Enhancement Level
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..4
          units: ""
          description: 'Indicates the Coverage Enhancement Level of the UE in the serving cell. The Coverage Enhancement levels are defined and specified in 3GPP TS 36.331 and 36.213.0: No Coverage Enhancement in the serving cell1: Coverage Enhancement level 02: Coverage Enhancement level 13: Coverage Enhancement level 24: Coverage Enhancement level 3'
- Name: Firmware Update
  Description1: |-
    This LwM2M Object enables management of firmware which is to be updated. This Object includes installing a firmware package, updating firmware, and performing actions after updating firmware. The firmware update MAY require to reboot the device; it will depend on a number of factors, such as the operating system architecture and the extent of the updated software.
    The envisioned functionality is to allow a LwM2M Client to connect to any LwM2M Server to obtain a firmware image using the object and resource structure defined in this section experiencing communication security protection using TLS/DTLS. There are, however, other design decisions that need to be taken into account to allow a manufacturer of a device to securely install firmware on a device. Examples for such design decisions are how to manage the firmware update repository at the server side (which may include user interface considerations), the techniques to provide additional application layer security protection of the firmware image, how many versions of firmware images to store on the device, and how to execute the firmware update process considering the hardware specific details of a given IoT hardware product. These aspects are considered to be outside the scope of this version of the specification.
    A LwM2M Server may also instruct a LwM2M Client to fetch a firmware image from a dedicated server (instead of pushing firmware images to the LwM2M Client). The Package URI resource is contained in the Firmware object and can be used for this purpose.
    A LwM2M Client MUST support block-wise transfer [CoAP_Blockwise] if it implements the Firmware Update object.
    A LwM2M Server MUST support block-wise transfer. Other protocols, such as HTTP/HTTPs, MAY also be used for downloading firmware updates (via the Package URI resource). For constrained devices it is, however, RECOMMENDED to use CoAP for firmware downloads to avoid the need for additional protocol implementations.
  Description2: ""
  ObjectID: 5
  ObjectURN: urn:oma:lwm2m:oma:5
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: Package
          operations: W
          multipleinstances: Single
          mandatory: Mandatory
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: Firmware package
        - id: 1
          name: Package URI
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: 0..255
          units: ""
          description: URI from where the device can download the firmware package by an alternative mechanism. As soon the device has received the Package URI it performs the download at the next practical opportunity. The URI format is defined in RFC 3986. For example, coaps://example.org/firmware is a syntactically valid URI. The URI scheme determines the protocol to be used. For CoAP this endpoint MAY be a LwM2M Server but does not necessarily need to be. A CoAP server implementing block-wise transfer is sufficient as a server hosting a firmware repository and the expectation is that this server merely serves as a separate file server making firmware images available to LwM2M Clients.
        - id: 2
          name: Update
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: Updates firmware by using the firmware package stored in Package, or, by using the firmware downloaded from the Package URI.This Resource is only executable when the value of the State Resource is Downloaded.
        - id: 3
          name: State
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..3
          units: ""
          description: 'Indicates current state with respect to this firmware update. This value is set by the LwM2M Client.0: Idle (before downloading or after successful updating)1: Downloading (The data sequence is on the way)2: Downloaded3: UpdatingIf writing the firmware package to Package Resource has completed, or, if the device has downloaded the firmware package from the Package URI the state changes to Downloaded.Writing an empty string to Package URI Resource or setting the Package Resource to NULL (‘0’), resets the Firmware Update State Machine: the State Resource value is set to Idle and the Update Result Resource value is set to 0.When in Downloaded state, and the executable Resource Update is triggered, the state changes to Updating.If the Update Resource failed, the state returns at Downloaded.If performing the Update Resource was successful, the state changes from Updating to Idle. The firmware update state machine is illustrated in Figure 29 of the LwM2M version 1.0 specification (and also in Figure E.6.1-1 of this specification).'
        - id: 5
          name: Update Result
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..9
          units: ""
          description: 'Contains the result of downloading or updating the firmware0: Initial value. Once the updating process is initiated (Download /Update), this Resource MUST be reset to Initial value.1: Firmware updated successfully.2: Not enough flash memory for the new firmware package.3: Out of RAM during downloading process.4: Connection lost during downloading process.5: Integrity check failure for new downloaded package.6: Unsupported package type.7: Invalid URI.8: Firmware update failed.9: Unsupported protocol. A LwM2M client indicates the failure to retrieve the firmware image using the URI provided in the Package URI resource by writing the value 9 to the /5/0/5 (Update Result resource) when the URI contained a URI scheme unsupported by the client. Consequently, the LwM2M Client is unable to retrieve the firmware image using the URI provided by the LwM2M Server in the Package URI when it refers to an unsupported protocol.'
        - id: 6
          name: PkgName
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: 0..255
          units: ""
          description: Name of the Firmware Package
        - id: 7
          name: PkgVersion
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: 0..255
          units: ""
          description: Version of the Firmware package
        - id: 8
          name: Firmware Update Protocol Support
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..5
          units: ""
          description: 'This resource indicates what protocols the LwM2M Client implements to retrieve firmware images. The LwM2M server uses this information to decide what URI to include in the Package URI. A LwM2M Server MUST NOT include a URI in the Package URI object that uses a protocol that is unsupported by the LwM2M client.For example, if a LwM2M client indicates that it supports CoAP and CoAPS then a LwM2M Server must not provide an HTTP URI in the Packet URI.The following values are defined by this version of the specification:0: CoAP (as defined in RFC 7252) with the additional support for block-wise transfer. CoAP is the default setting.1: CoAPS (as defined in RFC 7252) with the additional support for block-wise transfer2: HTTP 1.1 (as defined in RFC 7230)3: HTTPS 1.1 (as defined in RFC 7230)4: CoAP over TCP (as defined in RFC 8323)5: CoAP over TLS (as defined in RFC 8323)Additional values MAY be defined in the future. Any value not understood by the LwM2M Server MUST be ignored.'
        - id: 9
          name: Firmware Update Delivery Method
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..2
          units: ""
          description: 'The LwM2M Client uses this resource to indicate its support for transferring firmware images to the client either via the Package Resource (=push) or via the Package URI Resource (=pull) mechanism.0: Pull only1: Push only2: Both. In this case the LwM2M Server MAY choose the preferred mechanism for conveying the firmware image to the LwM2M Client.'
- Name: Firmware Update
  Description1: |-
    This LwM2M Object enables management of firmware which is to be updated. This Object includes installing a firmware package, updating firmware, and performing actions after updating firmware. The firmware update MAY require to reboot the device; it will depend on a number of factors, such as the operating system architecture and the extent of the updated software.
    The envisioned functionality is to allow a LwM2M Client to connect to any LwM2M Server to obtain a firmware image using the object and resource structure defined in this section experiencing communication security protection using TLS/DTLS. There are, however, other design decisions that need to be taken into account to allow a manufacturer of a device to securely install firmware on a device. Examples for such design decisions are how to manage the firmware update repository at the server side (which may include user interface considerations), the techniques to provide additional application layer security protection of the firmware image, how many versions of firmware images to store on the device, and how to execute the firmware update process considering the hardware specific details of a given IoT hardware product. These aspects are considered to be outside the scope of this version of the specification.
    A LwM2M Server may also instruct a LwM2M Client to fetch a firmware image from a dedicated server (instead of pushing firmware images to the LwM2M Client). The Package URI resource is contained in the Firmware object and can be used for this purpose.
    A LwM2M Client MUST support block-wise transfer [CoAP_Blockwise] if it implements the Firmware Update object.
    A LwM2M Server MUST support block-wise transfer. Other protocols, such as HTTP/HTTPs, MAY also be used for downloading firmware updates (via the Package URI resource). For constrained devices it is, however, RECOMMENDED to use CoAP for firmware downloads to avoid the need for additional protocol implementations.
  Description2: ""
  ObjectID: 5
  ObjectURN: urn:oma:lwm2m:oma:5:1.1
  LWM2MVersion: "1.1"
  ObjectVersion: "1.1"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: Package
          operations: W
          multipleinstances: Single
          mandatory: Mandatory
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: Firmware package
        - id: 1
          name: Package URI
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: 0..255
          units: ""
          description: URI from where the device can download the firmware package by an alternative mechanism. As soon the device has received the Package URI it performs the download at the next practical opportunity. The URI format is defined in RFC 3986. For example, coaps://example.org/firmware is a syntactically valid URI. The URI scheme determines the protocol to be used. For CoAP this endpoint MAY be a LwM2M Server but does not necessarily need to be. A CoAP server implementing block-wise transfer is sufficient as a server hosting a firmware repository and the expectation is that this server merely serves as a separate file server making firmware images available to LwM2M Clients.
        - id: 2
          name: Update
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: Updates firmware by using the firmware package stored in Package, or, by using the firmware downloaded from the Package URI.This Resource is only executable when the value of the State Resource is Downloaded.
        - id: 3
          name: State
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..3
          units: ""
          description: 'Indicates current state with respect to this firmware update. This value is set by the LwM2M Client.0: Idle (before downloading or after successful updating)1: Downloading (The data sequence is on the way)2: Downloaded3: UpdatingIf writing the firmware package to Package Resource has completed, or, if the device has downloaded the firmware package from the Package URI the state changes to Downloaded.Writing an empty string to Package URI Resource or setting the Package Resource to NULL (‘0’), resets the Firmware Update State Machine: the State Resource value is set to Idle and the Update Result Resource value is set to 0.The device should remove the downloaded firmware image when the state is reset to Idle.When in Downloaded state, and the executable Resource Update is triggered, the state changes to Updating if the update starts immediately. For devices that support a user interface and the deferred update functionality, the user may be allowed to defer the firmware update to a later time. In this case, the state stays in Downloaded state and the Update Result is set to 11. Once a user accepted the firmware update, the state changes to Updating.When the user deferred the update, the device will continue operations normally until the user approves the firmware update or an automatic update starts. It will not block any operation on the device.If the Update Resource failed, the state may return to either Downloaded or Idle depending on the underlying reason of update failure, e.g. Integrity Check Failure results in the client moving to the Idle state.If performing the Update or Cancel operation was successful, the state changes to Idle. The firmware update state machine is illustrated in the respective LwM2M specification.'
        - id: 5
          name: Update Result
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..11
          units: ""
          description: 'Contains the result of downloading or updating the firmware0: Initial value. Once the updating process is initiated (Download /Update), this Resource MUST be reset to Initial value.1: Firmware updated successfully.2: Not enough flash memory for the new firmware package.3: Out of RAM during downloading process.4: Connection lost during downloading process.5: Integrity check failure for new downloaded package.6: Unsupported package type.7: Invalid URI.8: Firmware update failed.9: Unsupported protocol. A LwM2M client indicates the failure to retrieve the firmware image using the URI provided in the Package URI resource by writing the value 9 to the /5/0/5 (Update Result resource) when the URI contained a URI scheme unsupported by the client. Consequently, the LwM2M Client is unable to retrieve the firmware image using the URI provided by the LwM2M Server in the Package URI when it refers to an unsupported protocol.10: Firmware update cancelled. A Cancel operation has been executed successfully.11: Firmware update deferred.'
        - id: 6
          name: PkgName
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: 0..255
          units: ""
          description: Name of the Firmware Package
        - id: 7
          name: PkgVersion
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: 0..255
          units: ""
          description: Version of the Firmware package
        - id: 8
          name: Firmware Update Protocol Support
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..5
          units: ""
          description: 'This resource indicates what protocols the LwM2M Client implements to retrieve firmware images. The LwM2M server uses this information to decide what URI to include in the Package URI. A LwM2M Server MUST NOT include a URI in the Package URI object that uses a protocol that is unsupported by the LwM2M client.For example, if a LwM2M client indicates that it supports CoAP and CoAPS then a LwM2M Server must not provide an HTTP URI in the Packet URI.The following values are defined by this version of the specification:0: CoAP (as defined in RFC 7252) with the additional support for block-wise transfer. CoAP is the default setting.1: CoAPS (as defined in RFC 7252) with the additional support for block-wise transfer2: HTTP 1.1 (as defined in RFC 7230)3: HTTPS 1.1 (as defined in RFC 7230)4: CoAP over TCP (as defined in RFC 8323)5: CoAP over TLS (as defined in RFC 8323)Additional values MAY be defined in the future. Any value not understood by the LwM2M Server MUST be ignored.'
        - id: 9
          name: Firmware Update Delivery Method
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..2
          units: ""
          description: 'The LwM2M Client uses this resource to indicate its support for transferring firmware images to the client either via the Package Resource (=push) or via the Package URI Resource (=pull) mechanism.0: Pull only1: Push only2: Both. In this case the LwM2M Server MAY choose the preferred mechanism for conveying the firmware image to the LwM2M Client.'
        - id: 10
          name: Cancel
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Cancels firmware update.Cancel can be executed if the device has not initiated the Update process. If the device is in the process of installing the firmware or has already completed installation it MUST respond with Method Not Allowed error code.Upon successful Cancel operation, Update Result Resource is set to 10 and State is set to 0 by the device.
        - id: 11
          name: Severity
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..2
          units: ""
          description: 'Severity of the firmware image.0: Critical1: Mandatory2: OptionalThis information is useful when the device provides option for the deferred update. Default value is 1.'
        - id: 12
          name: Last State Change Time
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: This resource stores the time when the State resource is changed. Device updates this resource before making any change to the State.
        - id: 13
          name: Maximum Defer Period
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Unsigned Integer
          rangeenumeration: ""
          units: s
          description: The number of seconds a user can defer the software update.When this time period is over, the device will not prompt the user for update and install it automatically.If the value is 0, a deferred update is not allowed.
- Name: Location
  Description1: This LwM2M Object provides a range of location telemetry related information which can be queried by the LwM2M Server.
  Description2: ""
  ObjectID: 6
  ObjectURN: urn:oma:lwm2m:oma:6
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: Latitude
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: lat
          description: The decimal notation of latitude, e.g. -43.5723 [World Geodetic System 1984].
        - id: 1
          name: Longitude
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: lon
          description: The decimal notation of longitude, e.g. 153.21760 [World Geodetic System 1984].
        - id: 2
          name: Altitude
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: m
          description: The decimal notation of altitude in meters above sea level.
        - id: 3
          name: Radius
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: m
          description: The value in this resource indicates the radius of a circular area in meters. The circular area is used to describe uncertainty about a point for coordinates in a two-dimensional coordinate reference systems (CRS). The center point of a circular area is specified by using the Latitude and the Longitude Resources.
        - id: 4
          name: Velocity
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: The velocity of the LwM2M Client, as defined in [3GPP-TS_23.032].
        - id: 5
          name: Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Time
          rangeenumeration: ""
          units: ""
          description: The timestamp of when the location measurement was performed.
        - id: 6
          name: Speed
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: m/s
          description: 'Speed is the time rate of change in position of a LwM2M Client without regard for direction: the scalar component of velocity.'
- Name: Connectivity Statistics
  Description1: This LwM2M Objects enables client to collect statistical information and enables the LwM2M Server to retrieve these information, set the collection duration and reset the statistical parameters.
  Description2: |-
    Note: When reporting the Tx Data or Rx Data, the LwM2M Client reports the total KB transmitted/received over IP bearer(s), including all protocol header bytes up to and including the IP header. This does not include lower level retransmissions/optimizations (e.g. RAN, header compression) or SMS messages.
    		
  ObjectID: 7
  ObjectURN: urn:oma:lwm2m:oma:7
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: SMS Tx Counter
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Indicate the total number of SMS successfully transmitted during the collection period.
        - id: 1
          name: SMS Rx Counter
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Indicate the total number of SMS successfully received during the collection period.
        - id: 2
          name: Tx Data
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Indicate the total amount of data (IP / non-IP) transmitted during the collection period expressed in kilobytes.
        - id: 3
          name: Rx Data
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Indicate the total amount of data (IP / non-IP) received during the collection period expressed in kilobytes.
        - id: 4
          name: Max Message Size
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: B
          description: The maximum IP message size that is used during the collection period.
        - id: 5
          name: Average Message Size
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: B
          description: The average IP message size that is used during the collection period.
        - id: 6
          name: Start
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset resources 0-5 to 0 and start to collect information, If resource 8 (Collection Period) value is 0, the client will keep collecting information until resource 7 (Stop) is executed, otherwise the client will stop collecting information after specified period ended.Note:When reporting the Tx Data or Rx Data, the LwM2M Client reports the total KB transmitted/received over IP bearer(s), including all protocol header bytes up to and including the IP header. This does not include lower level retransmissions/optimizations (e.g. RAN, header compression) or SMS messages.
        - id: 7
          name: Stop
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: Stop collecting information, but do not reset resources 0-5.
        - id: 8
          name: Collection Period
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: s
          description: The default collection period in seconds. The value 0 indicates that the collection period is not set.
- Name: Lock and Wipe
  Description1: This LWM2M objects provides the resources needed to perform the lock and wipe operations.
  Description2: ""
  ObjectID: 8
  ObjectURN: urn:oma:lwm2m:oma:8
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: State
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..2
          units: ""
          description: 'State of the device:0: unlocked state Normal operation.1: partially locked stateTo render the device inoperable the device has been partially locked. The "lock target" resource allows specifying the target(s) for this operation.2: fully locked stateTo render the device fully inoperable the device has been fully locked.'
        - id: 1
          name: Lock target
          operations: W
          multipleinstances: Multiple
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: To specify one or several targets for the lock operation. This allows partially locking the device by selecting specific components or interfaces to be locked.
        - id: 2
          name: Wipe item
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Indicates which data can be wiped from the device. This resource could be e.g. representing a directory.
        - id: 3
          name: Wipe
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: To permanently erase data from the device.
        - id: 4
          name: Wipe target
          operations: W
          multipleinstances: Multiple
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: To specify one or several targets for the wipe operation. This allows selecting specific data, or, memory areas for the wipe operation.
        - id: 5
          name: Lock or Wipe Operation Result
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..8
          units: ""
          description: 'Contains the result of a lock and wipe operation0: Default1: Partially Lock operation successful2: Fully Lock operation successful3: Unlock operation successful4: Wipe operation successful5: Partially Lock operation failed6: Fully Lock operation failed7: Unlock operation failed 8: Wipe operation failedThis Resource MAY be reported by sending Observe operation.'
- Name: LWM2M Software Management
  Description1: This LwM2M objects provides the resources needed to perform software management on the device. Each software component is managed via a dedicated Software Management Object instance.
  Description2: ""
  ObjectID: 9
  ObjectURN: urn:oma:lwm2m:oma:9
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: PkgName
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: 0..255 bytes
          units: ""
          description: Name of the software package
        - id: 1
          name: PkgVersion
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: 0..255 bytes
          units: ""
          description: Version of the software package
        - id: 2
          name: Package
          operations: W
          multipleinstances: Single
          mandatory: Optional
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: Software packageThe package can be in one single software component, or any delivery material used by the Device to determine the software component(s) and proceed to their installation.Can be archive file, executable, manifest. This resource to be used when it is single block of delivery.
        - id: 3
          name: Package URI
          operations: W
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: 0..255 bytes
          units: ""
          description: URI from where the device can download the software package by an alternative mechanism. As soon the device has received the Package URI it performs the download at the next practical opportunity.Can be direct link to a single software component or link to archive file, executable, or manifest, used by the Device to determine, then access to the software component(s). This resource to be used when it is single block of delivery.
        - id: 4
          name: Install
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: Installs software from the package either stored in Package resource, or, downloaded from the Package URI. This Resource is only executable when the value of the State Resource is DELIVERED.
        - id: 5
          name: Checkpoint
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: Link to a "Checkpoint" object which allows to specify conditions/dependencies for a software update. E.g. power connected, sufficient memory, target system.
        - id: 6
          name: Uninstall
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: Uninstalls the software package.This executable resource may have one argument.If used with no argument or argument is 0, the Package is removed i from the Device. If the argument is 1 ("ForUpdate"), the Client MUST prepare itself for receiving a Package used to upgrade the Software already in place. Update State is set back to INITIAL state.
        - id: 7
          name: Update State
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..4
          units: ""
          description: 'Indicates current state with respect to this software update. This value is set by the LwM2M Client.0: INITIALBefore downloading.(see 5.1.2.1)1: DOWNLOAD STARTEDThe downloading process has started and is on-going.(see 5.1.2.2)2: DOWNLOADEDThe package has been completely downloaded (see 5.1.2.3)3: DELIVEREDIn that state, the package has been correctly downloaded and is ready to be installed. (see 5.1.2.4)If executing the Install Resource failed, the state remains at DELIVERED.If executing the Install Resource was successful, the state changes from DELIVERED to INSTALLED.After executing the UnInstall Resource, the state changes to INITIAL.4: INSTALLEDIn that state the software is correctly installed and can be activated or deactivated according to the Activation State Machine.(see 5.1.2.5)'
        - id: 8
          name: Update Supported Objects
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: If this value is true, the LwM2M Client MUST inform the registered LwM2M Servers of Objects and Object Instances parameter by sending an Update or Registration message after the software update operation at the next practical opportunity if supported Objects in the LwM2M Client have changed, in order for the LwM2M Servers to promptly manage newly installed Objects. If false, Objects and Object Instances parameter MUST be reported at the next periodic Update message.The default value is false.
        - id: 9
          name: Update Result
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..200
          units: ""
          description: 'Contains the result of downloading or installing/uninstalling the software0: Initial value. Prior to download any new package in the Device, Update Result MUST be reset to this initial value. One side effect of executing the Uninstall resource is to reset Update Result to this initial value "0".1: Downloading. The package downloading process is on-going.2: Software successfully installed.3: Successfully Downloaded and package integrity verified(( 4-49, for expansion, of other scenarios))50: Not enough storage for the new software package.51: Out of memory during downloading process.52: Connection lost during downloading process.53: Package integrity check failure.54: Unsupported package type.56: Invalid URI57: Device defined update error58: Software installation failure59: Uninstallation Failure during forUpdate(arg=0)60-200 : (for expansion, selection to be in blocks depending on new introduction of features)This Resource MAY be reported by sending Observe operation.'
        - id: 10
          name: Activate
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: This action activates the software previously successfully installed (the Package Installation State Machine is currently in the INSTALLED state)
        - id: 11
          name: Deactivate
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: This action deactivates softwareif the Package Installation State Machine is currently in the INSTALLED state.
        - id: 12
          name: Activation State
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: 'Indicates the current activation state of this software:0: DISABLEDActivation State is DISABLED if the Software Activation State Machine is in the INACTIVE state or not alive.1: ENABLEDActivation State is ENABLED only if the Software Activation State Machine is in the ACTIVE state'
        - id: 13
          name: Package Settings
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: 'Link to "Package Settings" object which allows to modify at any time software configuration settings. This is an application specific object. Note: OMA might provide a template for a Package Settings object in a future release of this specification.'
        - id: 14
          name: User Name
          operations: W
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: 0..255 bytes
          units: ""
          description: User Name for access to SW Update Package in pull mode.Key based mechanism can alternatively use for talking to the component server instead of user name and password combination.
        - id: 15
          name: Password
          operations: W
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: 0..255 bytes
          units: ""
          description: Password for access to SW Update Package in pull mode.
        - id: 16
          name: Status Reason
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Contains the status of the actions done by the client on the SW Component(s) referred by the present SW Update Package. The status is defined in Appendix B.
        - id: 17
          name: Software Component Link
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: 'Reference to SW Components downloaded and installed in scope of the present SW Update Package Note: When resource 17 objlink exist, resources 2, 3 and 12 in this table are ignored.'
        - id: 18
          name: Software Component tree length
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..255
          units: ""
          description: Software Component tree length indicates the number of instances existing for this software package in the Software Component Object.
- Name: LWM2M Cellular Connectivity
  Description1: This object specifies resources to enable a device to connect to a 3GPP or 3GPP2 bearer, including GPRS/EDGE, UMTS, LTE, NB-IoT, SMS. For cellular connectivity, this object focuses on Packet Switched (PS) connectivity and doesn't aim to provide comprehensive Circuit Switched (CS) connectivity management.
  Description2: |-
    Notes:
    		(1) This parameter is controlled by the 3GPP network. A LwM2M server may write a suggested value to this resource. As soon a LwM2M server changes the current value the device then suggests the new value to the network upon the next practical opportunity e.g. by inclusion of the requested value in an Attach or TAU request. In case the network confirms the suggested value then the device shall apply that value. In case the network provides a different value then the value provided by the network shall be applied by the device and the resource value shall be set to that value.
    		The LwM2M server may use the observe function to be notified upon any changes of PSM or Active timer. By using the observe function the LwM2M server will get notified in case the value suggested by the LwM2M server is not accepted by the network, or, if the value is changed by the network for any reason (e.g., if the device moves into new tracking areas there is no guarantee that the above values remain the same and are not altered by the network).
  ObjectID: 10
  ObjectURN: urn:oma:lwm2m:oma:10
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: SMSC address
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: E.164 address of SMSC.Applicable for 3GPP2 networks where SMSC is not available from a smart card, or for 3GPP/3GPP2 networks to provide the application with a customer specific SMSC.The application decides how to use this parameter, e.g. precedence over UICC based SMSC address.
        - id: 1
          name: Disable radio period
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..65535
          units: ""
          description: Time period in MINUTES for which the device shall disconnect from cellular radio (PS detach, CS detach if applicable).Can be used to handle network overload situations. The value is a positive integer (0 to 65535), duration can be from 1 minute to 65535 minutes (approximately 45 days)As soon the server writes a value which is >0 the device SHALL disconnect. When the period has elapsed the device MAY reconnect.
        - id: 2
          name: Module activation code
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Configurable in case the application needs to issue a code (e.g. via AT command) to activate the module. e.g. “*98”.
        - id: 3
          name: Vendor specific extensions
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: Links to a vendor specific object.
        - id: 4
          name: PSM Timer (1)
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: s
          description: Power saving mode (PSM) timer as defined in [3GPP-TS_23.682].PSM Timer = Extended T3412 in the range 10min..992 days and coded as section 10.5.7.3 of [3GPP-TS_24.008]. It defines Max interval between periodic TAU if there is no other transmission from the device. During most of this time the device is considered as unreachable and can therefore go into a deep sleep mode while keeping the PDN connection(s) active.
        - id: 5
          name: Active Timer (1)
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: s
          description: Active timer = T3324 in the range 2sec..31 min and coded as per section 10.5.7.4 of [3GPP-TS_24.008]. This is the time a UE has to remain reachable after transitioning to idle state in case there is pending data from the NW to send out. At the end of T3324 UE can go into a deep sleep mode while keeping the PDN connection(s) active.
        - id: 6
          name: Serving PLMN Rate control
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Applicable only when Signalling Radio Bearers are used to transfer data, Data over NAS (DoNAS), it indicates the maximum number of allowed uplink PDU transmissions per 6 minute interval aggregated across all PDN connections. See [3GPP-TS_23.401], octet 3 to 4 of the Serving PLMN rate control IE.
        - id: 7
          name: eDRX parameters for Iu mode (1)
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Opaque
          rangeenumeration: 8 bit
          units: ""
          description: Extended DRX parameters (Paging Time Window and eDRX value) for Iu mode which the UE can request from the network. This resource is encoded as octet 3 in [3GPP-TS_24.008, clause 10.5.5.32].
        - id: 8
          name: eDRX parameters for WB-S1 mode (1)
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Opaque
          rangeenumeration: 8 bit
          units: ""
          description: Extended DRX parameters (Paging Time Window and eDRX value) for WB-S1 mode which the UE can request from the network. This resource is encoded as octet 3 in [3GPP-TS_24.008, clause 10.5.5.32].
        - id: 9
          name: eDRX parameters for NB-S1 mode (1)
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Opaque
          rangeenumeration: 8 bit
          units: ""
          description: Extended DRX parameters (Paging Time Window and eDRX value) for NB-S1 mode which the UE can request from the network. This resource is encoded as octet 3 in [3GPP-TS_24.008, clause 10.5.5.32].
        - id: 10
          name: eDRX parameters for A/Gb mode (1)
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Opaque
          rangeenumeration: 8 bit
          units: ""
          description: Extended DRX parameters (Paging Time Window and eDRX value) for A/Gb mode which the UE can request from the network. This resource is encoded as octet 3 in [3GPP-TS_24.008, clause 10.5.5.32].
        - id: 11
          name: Activated Profile Names
          operations: R
          multipleinstances: Multiple
          mandatory: Mandatory
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: Links to instances of the “APN connection profile” object representing every APN connection profile that has an activated PDN connection.
- Name: LWM2M Cellular Connectivity
  Description1: This object specifies resources to enable a device to connect to a 3GPP or 3GPP2 bearer, including GPRS/EDGE, UMTS, LTE, NB-IoT, SMS. For cellular connectivity, this object focuses on Packet Switched (PS) connectivity and doesn't aim to provide comprehensive Circuit Switched (CS) connectivity management.
  Description2: |-
    Notes:
                    (0) Resource 6 "Serving PLMN Rate control" was moved to the APN Connection Profile Object (#11) to correctly correspond to the 3GPP specifications.

    		(1) PSM Timer, Active Timer and all eDRX parameters resources are controlled by the 3GPP network. A LwM2M server may write a suggested values to these resource. As soon a LwM2M server changes the current values the device then suggests the new values to the network upon the next practical opportunity e.g. by inclusion of the requested value in an Attach or TAU request. In case the network confirms the suggested value then the device shall apply that value. In case the network provides a different value then the value provided by the network shall be applied by the device and the resource value shall be set to that value.
    		The LwM2M server may use the observe function to be notified upon any changes of PSM, Active timer or eDRX parameters. By using the observe function the LwM2M server will get notified in case the value suggested by the LwM2M server is not accepted by the network, or, if the value is changed by the network for any reason (e.g., if the device moves into new tracking areas there is no guarantee that the above values remain the same and are not altered by the network).
  ObjectID: 10
  ObjectURN: urn:oma:lwm2m:oma:10:1.1
  LWM2MVersion: "1.1"
  ObjectVersion: "1.1"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: SMSC address
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: E.164 address of SMSC.Applicable for 3GPP2 networks where SMSC is not available from a smart card, or for 3GPP/3GPP2 networks to provide the application with a customer specific SMSC.The application decides how to use this parameter, e.g. precedence over UICC based SMSC address.
        - id: 1
          name: Disable radio period
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..65535
          units: ""
          description: Time period in MINUTES for which the device shall disconnect from cellular radio (PS detach, CS detach if applicable).Can be used to handle network overload situations. The value is a positive integer (0 to 65535), duration can be from 1 minute to 65535 minutes (approximately 45 days)As soon the server writes a value which is >0 the device SHALL disconnect. When the period has elapsed the device MAY reconnect.
        - id: 2
          name: Module activation code
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Configurable in case the application needs to issue a code (e.g. via AT command) to activate the module. e.g. "*98".
        - id: 3
          name: Vendor specific extensions
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: Links to a vendor specific object.
        - id: 4
          name: PSM Timer
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: s
          description: PSM Timer = Extended T3412 as described in section 10.5.7.4a (GPRS Timer 3) of [3GPP-TS_24.008]. The value in seconds has to be compatible with Extended T3412, otherwise conversion will not be exact. It defines Max interval between periodic TAU if there is no other transmission from the device. During most of this time the device is considered as unreachable and can therefore go into a deep sleep mode while keeping the PDN connection(s) active.
        - id: 5
          name: Active Timer
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: s
          description: Active Timer = T3324 as described in section 10.5.7.3 (GPRS Timer) of [3GPP-TS_24.008]. The value in seconds has to be compatible with T3324, otherwise conversion will not be exact. This is the time a UE has to remain reachable after transitioning to idle state in case there is pending data from the NW to send out. At the end of T3324 UE can go into a deep sleep mode while keeping the PDN connection(s) active.
        - id: 7
          name: eDRX parameters for Iu mode
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Opaque
          rangeenumeration: 0..255
          units: ""
          description: Extended DRX parameters (Paging Time Window and eDRX value) for Iu mode which the UE can request from the network. This resource is encoded as octet 3 in [3GPP-TS_24.008, clause 10.5.5.32].
        - id: 8
          name: eDRX parameters for WB-S1 mode
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Opaque
          rangeenumeration: 0..255
          units: ""
          description: Extended DRX parameters (Paging Time Window and eDRX value) for WB-S1 mode which the UE can request from the network. This resource is encoded as octet 3 in [3GPP-TS_24.008, clause 10.5.5.32].
        - id: 9
          name: eDRX parameters for NB-S1 mode
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Opaque
          rangeenumeration: 0..255
          units: ""
          description: Extended DRX parameters (Paging Time Window and eDRX value) for NB-S1 mode which the UE can request from the network. This resource is encoded as octet 3 in [3GPP-TS_24.008, clause 10.5.5.32].
        - id: 10
          name: eDRX parameters for A/Gb mode
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Opaque
          rangeenumeration: 0..255
          units: ""
          description: Extended DRX parameters (Paging Time Window and eDRX value) for A/Gb mode which the UE can request from the network. This resource is encoded as octet 3 in [3GPP-TS_24.008, clause 10.5.5.32].
        - id: 11
          name: Activated Profile Names
          operations: R
          multipleinstances: Multiple
          mandatory: Mandatory
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: Links to instances of the "APN connection profile" object representing every APN connection profile that has an activated PDN connection.
        - id: 12
          name: Supported Power Saving Modes
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Unsigned Integer
          rangeenumeration: 0..255
          units: ""
          description: 'This Resource is used to indicate the Power Saving Modes supported by the LwM2M Client.Each bit set in the Resource Instance value corresponds to a supported mode. Several bit set, means several modes are supported.1st LSB: PSM2nd LSB: eDRXOther bits are reserved for future use'
        - id: 13
          name: Active Power Saving Modes
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Unsigned Integer
          rangeenumeration: 0..255
          units: ""
          description: 'This Resource is used to indicate which Power Saving Mode(s) is (are) currently active in the LwM2M Client.Each bit set in the Resource Instance value corresponds to an active mode.1st LSB: PSM 2nd LSB: eDRXOther bits are reserved for future use'
        - id: 14
          name: Release Assistance Indication Usage
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Unsigned Integer
          rangeenumeration: 0..255
          units: ""
          description: 'This resource is used to indicate client configuration as to when it uses Release Assistance Indicator (RAI) as defined in 3GPP-TS_24.310, clause 9.9.4.25 to indicate to the NW when connection can be released.1st LSB: RAI not used2nd LSB: RAI used when transmitting last message which requires no application/transport layer response/ confirmation3rd LSB: RAI used when transmitting last message which requires response/confirmation; when this bit is set, 2nd LSB is also expected to be set.'
- Name: LWM2M APN Connection Profile
  Description1: This object specifies resources to enable a device to connect to an APN.
  Description2: |
    Notes:
    (1)	For each activated PDP context request, the device may store at least one value of ‘Connection establishment time’, ‘connection establishment result’, ‘Connection end time’ and if activation is unsuccessful then a ‘connection establishment reject cause’.   It is a device decision how many instances to keep.
    (2)	These resources are used in case IP related parameters are defined statically, can also be used to reflect IP related parameters in case of dynamic IP address assignment.  The normal use case would be to have one IPv4 and one IPv6 address which have each associated a prefix length (IPv6 only), a subnet mask, a gateway, and a primary and secondary DNS address.
    (3)	For LTE a higher QoS may be established by setting up an additional bearer (“dedicated bearer”) in addition to the default bearer which is established to the default APN. A dedicated bearer which is set up by the network on request by the device containing a requested QCI value can either be established to the same APN as the default bearer or to another APN. The QoS of a dedicated bearer may be modified on request by the device. The association of QoS values and APNs for a subscriber is stored in the network and checked during the establishment of a bearer.
  ObjectID: 11
  ObjectURN: urn:oma:lwm2m:oma:11
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: Profile name
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: Human-readable identifier. Multiple connection profiles can share the same APN value but e.g. have different credentials.
        - id: 1
          name: APN
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Presented to network during connection to PDN e.g. ‘internet.15.234’.This resource is not included in case ‘Auto select APN by device’ resource has the value TRUE.If the APN resource is present but contains an empty string, then the device shall not provide an APN in the connection request (invoking default APN procedures in the network).
        - id: 2
          name: Auto select APN by device
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: If this resource is present for a connection profile, it enables the device to choose an APN according to a device specific algorithm. It provides a fall-back mechanism e.g. for some MVNO SIMs the configured APN may not work.Resource not included or set to False in case the ‘APN’ resource is specified.
        - id: 3
          name: Enable status
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: 'Allows the profile to be remotely enabled or disabled. True: APN profile is enabled. False: APN profile is disabled. If the status is set to disabled (False) while a data connection for that profile is active, that data connection will be released.'
        - id: 4
          name: Authentication Type
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: 'Enumerated type:0: PAP1: CHAP2: PAP or CHAP3: None'
        - id: 5
          name: User Name
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Used with e.g. PAP.
        - id: 6
          name: Secret
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Used with e.g. PAP.
        - id: 7
          name: Reconnect Schedule
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Comma separated list of retry delay values in seconds to be used in case of unsuccessful connection establishment attempts. e.g. “10,60,600,3600,86400”
        - id: 8
          name: Validity (MCC, MNC)
          operations: RW
          multipleinstances: Multiple
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Coma separated mobile country code, then mobile network code – for which this APN is valid.
        - id: 9
          name: Connection establishment time (1)
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: UTC time of connection request. See note (1)
        - id: 10
          name: Connection establishment result (1)
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: 0 = accepted1 = rejected
        - id: 11
          name: Connection establishment reject cause (1)
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..111
          units: ""
          description: Reject cause, see [3GPP-TS_24.008, 3GPP-TS_24.301]
        - id: 12
          name: Connection end time (1)
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: UTC time of connection end.
        - id: 13
          name: TotalBytesSent
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Rolling counter for total number of bytes sent via this interface since last device reset.
        - id: 14
          name: TotalBytesReceived
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Rolling counter for total number of bytes received via this interface since last device reset.
        - id: 15
          name: IP address (2)
          operations: RW
          multipleinstances: Multiple
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: May be IPv4 or IPv6 address.
        - id: 16
          name: Prefix length(2)
          operations: RW
          multipleinstances: Multiple
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Associated with IPv6 address.
        - id: 17
          name: Subnet mask (2)
          operations: RW
          multipleinstances: Multiple
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Subnet mask.
        - id: 18
          name: Gateway (2)
          operations: RW
          multipleinstances: Multiple
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Gateway.
        - id: 19
          name: Primary DNS address (2)
          operations: RW
          multipleinstances: Multiple
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Primary DNS address.
        - id: 20
          name: Secondary DNS address (2)
          operations: RW
          multipleinstances: Multiple
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Secondary DNS address.
        - id: 21
          name: QCI (3)
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 1..9
          units: ""
          description: Quality of service Class Identifier QCI), applicable to LTE and NB-IoT onlyThis resource enables the LWM2M server to signal the LWM2M client which QCI it shall request from the network.See [3GPP-TS_23.203, and 3GPP-TS_24.301] for a description of QCI values. See note (3).
        - id: 22
          name: Vendor specific extensions
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: Links to a vendor specific object.
        - id: 23
          name: TotalPacketsSent
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Rolling counter for total number of packets sent via this interface since last device reset.
        - id: 24
          name: PDN Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: 0=Non-IP1=IPv42=IPv63=IPv4v6
        - id: 25
          name: APN Rate Control
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Determines the number of allowed uplink PDU transmissions per time interval per APN.Rate Control information is part of the Protocol Configuration Options (PCO) according to[3GPP-TS_24.301], [3GPP-TS_24.008 and [3GPP-TS_27.060]
- Name: LWM2M APN Connection Profile
  Description1: This object specifies resources to enable a device to connect to an APN.
  Description2: |
    Notes:
    (1)	For each activated PDP context request, the device may store at least one value of ‘Connection establishment time’, ‘connection establishment result’, ‘Connection end time’ and if activation is unsuccessful then a ‘connection establishment reject cause’.   It is a device decision how many instances to keep.
    (2)	These resources are used in case IP related parameters are defined statically, can also be used to reflect IP related parameters in case of dynamic IP address assignment.  The normal use case would be to have one IPv4 and one IPv6 address which have each associated a prefix length (IPv6 only), a subnet mask, a gateway, and a primary and secondary DNS address.
    (3)	For LTE a higher QoS may be established by setting up an additional bearer ("dedicated bearer") in addition to the default bearer which is established to the default APN. A dedicated bearer which is set up by the network on request by the device containing a requested QCI value can either be established to the same APN as the default bearer or to another APN. The QoS of a dedicated bearer may be modified on request by the device. The association of QoS values and APNs for a subscriber is stored in the network and checked during the establishment of a bearer.
  ObjectID: 11
  ObjectURN: urn:oma:lwm2m:oma:11:1.1
  LWM2MVersion: "1.1"
  ObjectVersion: "1.1"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: Profile name
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: Human-readable identifier. Multiple connection profiles can share the same APN value but e.g. have different credentials.
        - id: 1
          name: APN
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Presented to network during connection to PDN e.g. ‘internet.15.234’.This resource is not included in case ‘Auto select APN by device’ resource has the value TRUE.If the APN resource is present but contains an empty string, then the device shall not provide an APN in the connection request (invoking default APN procedures in the network).
        - id: 2
          name: Auto select APN by device
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: If this resource is present for a connection profile, it enables the device to choose an APN according to a device specific algorithm. It provides a fall-back mechanism e.g. for some MVNO SIMs the configured APN may not work.Resource not included or set to False in case the ‘APN’ resource is specified.
        - id: 3
          name: Enable status
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: 'Allows the profile to be remotely enabled or disabled. True: APN profile is enabled. False: APN profile is disabled. If the status is set to disabled (False) while a data connection for that profile is active, that data connection will be released.'
        - id: 4
          name: Authentication Type
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: 'Enumerated type:0: PAP1: CHAP2: PAP or CHAP3: None'
        - id: 5
          name: User Name
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Used with e.g. PAP.
        - id: 6
          name: Secret
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Used with e.g. PAP.
        - id: 7
          name: Reconnect Schedule
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Comma separated list of retry delay values in seconds to be used in case of unsuccessful connection establishment attempts. e.g. "10,60,600,3600,86400"
        - id: 8
          name: Validity (MCC, MNC)
          operations: RW
          multipleinstances: Multiple
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Coma separated mobile country code, then mobile network code - for which this APN is valid.
        - id: 9
          name: Connection establishment time (1)
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: UTC time of connection request. See note (1)
        - id: 10
          name: Connection establishment result (1)
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: 0 = accepted1 = rejected
        - id: 11
          name: Connection establishment reject cause (1)
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..111
          units: ""
          description: Reject cause, see [3GPP-TS_24.008, 3GPP-TS_24.301]
        - id: 12
          name: Connection end time (1)
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: UTC time of connection end.
        - id: 13
          name: TotalBytesSent
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Rolling counter for total number of bytes sent via this interface since last device reset.
        - id: 14
          name: TotalBytesReceived
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Rolling counter for total number of bytes received via this interface since last device reset.
        - id: 15
          name: IP address (2)
          operations: RW
          multipleinstances: Multiple
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: May be IPv4 or IPv6 address.
        - id: 16
          name: Prefix length(2)
          operations: RW
          multipleinstances: Multiple
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Associated with IPv6 address.
        - id: 17
          name: Subnet mask (2)
          operations: RW
          multipleinstances: Multiple
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Subnet mask.
        - id: 18
          name: Gateway (2)
          operations: RW
          multipleinstances: Multiple
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Gateway.
        - id: 19
          name: Primary DNS address (2)
          operations: RW
          multipleinstances: Multiple
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Primary DNS address.
        - id: 20
          name: Secondary DNS address (2)
          operations: RW
          multipleinstances: Multiple
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Secondary DNS address.
        - id: 21
          name: QCI (3)
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 1..9
          units: ""
          description: Quality of service Class Identifier QCI), applicable to LTE and NB-IoT onlyThis resource enables the LWM2M server to signal the LWM2M client which QCI it shall request from the network.See [3GPP-TS_23.203, and 3GPP-TS_24.301] for a description of QCI values. See note (3).
        - id: 22
          name: Vendor specific extensions
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: Links to a vendor specific object.
        - id: 23
          name: TotalPacketsSent
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Rolling counter for total number of packets sent via this interface since last device reset.
        - id: 24
          name: PDN Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: 0=Non-IP1=IPv42=IPv63=IPv4v6
        - id: 25
          name: APN Rate Control
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Determines the number of allowed uplink PDU transmissions per time interval per APN.Rate Control information is part of the Protocol Configuration Options (PCO) according to[3GPP-TS_24.301], [3GPP-TS_24.008 and [3GPP-TS_27.060]
        - id: 26
          name: Serving PLMN Rate control
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Unsigned Integer
          rangeenumeration: ""
          units: ""
          description: For data sent over NAS, this indicates the maximum number of messages the UE can send per time unit (Resource 27) per PDN connection. See [3GPP-TS_23.401] clause 4.7.7.2 and [3GPP-TS_24.008] clause 10.5.6.3.2.
        - id: 27
          name: Uplink Time Unit
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Unsigned Integer
          rangeenumeration: 0..4
          units: ""
          description: In association with APN Rate Control (Resource 28), this indicates the units of the period over which the maximum number of PDU transmissions are measured. [3GPP-TS_24.008] clause 10.5.6.3.2 specifies that 0=unrestricted, 1=minute, 2=hour, 3=day and 4=week.
        - id: 28
          name: APN Rate Control for Exception Data
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Determines the number of allowed uplink PDU transmissions for exception data per time interval for this APN. ThisRate Control information is part of the Protocol Configuration Options (PCO) according to[3GPP-TS_24.301], [3GPP-TS_24.008 and [3GPP-TS_27.060]
        - id: 29
          name: APN Exception Data Uplink Time Unit
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Unsigned Integer
          rangeenumeration: 0..4
          units: ""
          description: In association with APN Rate Control for Exception Data (Resource 28), this indicates the units of the period over which the maximum number of messages is measured. [3GPP-TS_24.008] clause 10.5.6.3.2 specifies that 0=unrestricted, 1=minute, 2=hour, 3=day and 4=week.
        - id: 30
          name: Supported RAT Types
          operations: RW
          multipleinstances: Multiple
          mandatory: Optional
          type: Unsigned Integer
          rangeenumeration: ""
          units: ""
          description: 'This resource specifies the supported RAT Types that the LWM2M Client can use for connecting to the specified APN.Each instance is one of these values:1: 3GPP PS2: 3GPP PS GSM (GPRS)3: 3GPP PS UMTS4: 3GPP PS LTE5: 1xEV-DO6: 3GPP CS12: 3GPP PS LTE with CIoT EPS optimisations, User Plane13: 3GPP PS LTE with CIoT EPS optimisations, Control Plane14: 3GPP PS NB-IoT Control Plane optimisations15: 3GPP PS NB-IoT User Plane optimisations16-100: Reserved for future use'
        - id: 31
          name: RDS Application ID
          operations: RW
          multipleinstances: Multiple
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: This resource provides the Application ID to correlate to the appropriate instance Ids of Resources 32 and 33.
        - id: 32
          name: RDS Destination Port
          operations: RW
          multipleinstances: Multiple
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..15
          units: ""
          description: This resource provides the correlated RDS Destination Port Number (as defined in 3GPP TS 24.250) to use for contacting the LwM2M Server identifed in Resource 29 when communicating through the SCEF across the Non-IP binding (Resource 24 must equal 0).
        - id: 33
          name: RDS Source Port
          operations: RW
          multipleinstances: Multiple
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..15
          units: ""
          description: This resource provides the correlated RDS Source Port Number (as defined in 3GPP TS 24.250) to use for contacting the LwM2M Server identifed in Resource 29 when communicating through the SCEF across the Non-IP binding (Resource 24 must equal 0).
- Name: WLAN connectivity
  Description1: |
    This object specifies resources to enable a device to connect to a WLAN bearer.
  Description2: ""
  ObjectID: 12
  ObjectURN: urn:oma:lwm2m:oma:12
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: Interface name
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: Human-readable identifiereg. wlan0
        - id: 1
          name: Enable
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: '0: Disabled1: EnabledEnable / Disable interfaceWhen disabled radio must also be disabled'
        - id: 2
          name: Radio Enabled
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: '0: Disabled1: 2.4 GHz2: 5 GHz3: 0.9 GHz4: 3.7 GHz5: 45 GHz6: 60 GHz'
        - id: 3
          name: Status
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: '0: Disabled1: UP (OK)2: Error'
        - id: 4
          name: BSSID
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: 12 bytes
          units: ""
          description: The MAC address of the interface, in hexadecimal form.
        - id: 5
          name: SSID
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: 1..32 Bytes
          units: ""
          description: The Service Set Identifier for this interface.
        - id: 6
          name: Broadcast SSID
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: '0: Do not broadcast SSID1: Broadcast SSID'
        - id: 7
          name: Beacon Enabled
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: '0: Do not broadcast beacons1: Broadcast beacons'
        - id: 8
          name: Mode
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: '0: Access Point1: Client (Station)2: Bridge3: Repeater'
        - id: 9
          name: Channel
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..255
          units: ""
          description: 'The current radio channel in use by this interface.0: Disabled1: Enabled'
        - id: 10
          name: Auto Channel
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: '0: Disabled1: Enabled'
        - id: 11
          name: Supported Channels
          operations: RW
          multipleinstances: Multiple
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Array of supported radio channels.
        - id: 12
          name: Channels In Use
          operations: RW
          multipleinstances: Multiple
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Array of channels which the access point has determined are ‘in use’.Including any channels in-use by access point itself.
        - id: 13
          name: Regulatory Domain
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: 3 Bytes
          units: ""
          description: 802.11d Regulatory Domain String. First two octets are ISO/IEC 3166-1 two-character country code. The third octet is either “ ” (all environments), “O” (outside) or “I” (inside).
        - id: 14
          name: Standard
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: '0: 802.11a1: 802.11b2: 802.11bg 3: 802.11g4: 802.11n5: 802.11bgn6: 802.11ac7: 802.11ah'
        - id: 15
          name: Authentication Mode
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: '0: None (Open)1: PSK2: EAP3: EAP+PSK4: EAPSIM'
        - id: 16
          name: Encryption Mode
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: '0: AES (WPA2)1: TKIP (WPA)2: WEP (1)'
        - id: 17
          name: WPA Pre Shared Key
          operations: W
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: 64 Bytes
          units: ""
          description: WPA/WPA2 Key expressed as a hex string.Write – Only.
        - id: 18
          name: WPA Key Phrase
          operations: W
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: 1..64 Bytes
          units: ""
          description: WPA/WPA2 Key Phrase.Write Only.
        - id: 19
          name: WEP Encryption Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: 'Description.0: None1: 40-bit2: 104-bit'
        - id: 20
          name: WEP Key Index
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: '[1:4]'
          units: ""
          description: Index of the default WEP key.
        - id: 21
          name: WEP Key Phrase
          operations: W
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: 1..64 Bytes
          units: ""
          description: WPA/WPA2 Key Phrase.Write Only.
        - id: 22
          name: WEP Key 1
          operations: W
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: 0 or 26 Bytes
          units: ""
          description: WEP Key 1 expressed as a hexadecimal string.10 Bytes for a 40 Bit key26 Bytes for a 104 Bit key
        - id: 23
          name: WEP Key 2
          operations: W
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: 0 or 26 Bytes
          units: ""
          description: WEP Key 2 expressed as a hexadecimal string.10 Bytes for a 40 Bit key26 Bytes for a 104 Bit key
        - id: 24
          name: WEP Key 3
          operations: W
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: 10 or 26 Bytes
          units: ""
          description: WEP Key 3 expressed as a hexadecimal string.10 Bytes for a 40 Bit key26 Bytes for a 104 Bit key
        - id: 25
          name: WEP Key 4
          operations: W
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: 10 or 26 Bytes
          units: ""
          description: WEP Key 4 expressed as a hexadecimal string.10 Bytes for a 40 Bit key26 Bytes for a 104 Bit key
        - id: 26
          name: RADIUS Server
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: 1..256 Bytes
          units: ""
          description: RADIUS Authentication Server Address
        - id: 27
          name: RADIUS Server Port
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: RADIUS Authentication Server Port Number
        - id: 28
          name: RADIUS Secret
          operations: W
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: 1..256 Bytes
          units: ""
          description: RADIUS Shared Secret
        - id: 29
          name: WMM Supported
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: '0: WMM NOT Supported1: WMM Wupported'
        - id: 30
          name: WMM Enabled
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: '0: Disabled1: Enabled'
        - id: 31
          name: MAC Control Enabled
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: '0: Any Client MAC Address accepted1: Client MAC address must exist in MACAddressList'
        - id: 32
          name: MAC Address List
          operations: RW
          multipleinstances: Multiple
          mandatory: Optional
          type: String
          rangeenumeration: 12 Bytes
          units: ""
          description: Array of allowed client MAC addresses, in hexadecimal form.
        - id: 33
          name: Total Bytes Sent
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Total number of bytes sent via this interface
        - id: 34
          name: Total Bytes Received
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Total number of bytes received via this interface
        - id: 35
          name: Total Packets Sent
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Total packets sent via this interface
        - id: 36
          name: Total Packets Received
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Total packets received via this interface
        - id: 37
          name: Transmit Errors
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Total number of packets which could not be transmitted because of errors.
        - id: 38
          name: Receive Errors
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Total number of packets received with errors which prevented those packets from being delivered.
        - id: 39
          name: Unicast Packets Sent
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Count of Unicast Packets Sent
        - id: 40
          name: Unicast Packets Received
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Count of Unicast Packets Received
        - id: 41
          name: Multicast Packets  Received
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Count of Multicast Packets Sent
        - id: 42
          name: Multicast Packets  Received
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Count of Multicast Packets Received
        - id: 43
          name: Broadcast Packets Sent
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Count of Broadcast Packets Sent
        - id: 44
          name: 44 Broadcast Packets Received
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Count of Broadcast Packets Received
        - id: 45
          name: Discard Packets Sent
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Count of valid outbound packets intentionally discarded without transmission, for example a packet may be discarded to manage buffer space.
        - id: 46
          name: Discard Packets Received
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Count of valid packets received and intentionally discarded without delivery to the system, for example a packet may be discarded to manage buffer space.
        - id: 47
          name: Unknown Packets Received
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Count of Unknown Packets Received
        - id: 48
          name: Vendor specific extensions
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: Links to a vendor specific object.
- Name: WLAN connectivity
  Description1: This object specifies resources to enable a device to connect to a WLAN bearer.
  Description2: |-
    Notes:
    (1)	WEP is supported by this object for legacy devices. All encryption parameter resources are optional e.g. a Wifi Alliance "HotSpot 2.0" device would not support WEP related resources.
  ObjectID: 12
  ObjectURN: urn:oma:lwm2m:oma:12:1.1
  LWM2MVersion: "1.0"
  ObjectVersion: "1.1"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: Interface name
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: Human-readable identifier eg. wlan0
        - id: 1
          name: Enable
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: '0: Disabled1: EnabledEnable / Disable interfaceWhen disabled radio must also be disabled'
        - id: 2
          name: Radio Enabled
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: '0: Disabled1: 2.4 GHz2: 5 GHz3: 0.9 GHz4: 3.7 GHz5: 45 GHz6: 60 GHz'
        - id: 3
          name: Status
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: '0: Disabled1: UP (OK)2: Error'
        - id: 4
          name: BSSID
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: 12 bytes
          units: ""
          description: The MAC address of the interface, in hexadecimal form.
        - id: 5
          name: SSID
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: 1..32
          units: ""
          description: The Service Set Identifier for this interface.
        - id: 6
          name: Broadcast SSID
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: '0: Do not broadcast SSID 1: Broadcast SSID'
        - id: 7
          name: Beacon Enabled
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: '0: Do not broadcast beacons 1: Broadcast beacons'
        - id: 8
          name: Mode
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: '0: Access Point1: Client (Station)2: Bridge3: Repeater'
        - id: 9
          name: Channel
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..255
          units: ""
          description: The current radio channel in use by this interface.
        - id: 10
          name: Auto Channel
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: '0: Disabled 1: Enabled'
        - id: 11
          name: Supported Channels
          operations: RW
          multipleinstances: Multiple
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Array of supported radio channels.
        - id: 12
          name: Channels In Use
          operations: RW
          multipleinstances: Multiple
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Array of channels which the access point has determined are ‘in use’.Including any channels in-use by access point itself.
        - id: 13
          name: Regulatory Domain
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: 3 B
          units: ""
          description: 802.11d Regulatory Domain String. First two octets are ISO/IEC 3166-1 two-character country code. The third octet is either " " (all environments), "O" (outside) or "I" (inside).
        - id: 14
          name: Standard
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: '0: 802.11a1: 802.11b2: 802.11bg 3: 802.11g4: 802.11n5: 802.11bgn6: 802.11ac7: 802.11ah'
        - id: 15
          name: Authentication Mode
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: '0: None (Open)1: PSK2: EAP3: EAP+PSK4: EAPSIM'
        - id: 16
          name: Encryption Mode
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: '0: AES (WPA2)1: TKIP (WPA)2: WEP (1)'
        - id: 17
          name: WPA Pre Shared Key
          operations: W
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: 64 B
          units: ""
          description: WPA/WPA2 Key expressed as a hex string. Write - Only.
        - id: 18
          name: WPA Key Phrase
          operations: W
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: 1..64
          units: ""
          description: WPA/WPA2 Key Phrase. Write Only.
        - id: 19
          name: WEP Encryption Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: '0: None1: 40-bit2: 104-bit'
        - id: 20
          name: WEP Key Index
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 1..4
          units: ""
          description: Index of the default WEP key.
        - id: 21
          name: WEP Key Phrase
          operations: W
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: 1..64
          units: ""
          description: WPA/WPA2 Key Phrase. Write Only.
        - id: 22
          name: WEP Key 1
          operations: W
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: 10,26
          units: ""
          description: WEP Key 1 expressed as a hexadecimal string.10 Bytes for a 40 Bit key26 Bytes for a 104 Bit key
        - id: 23
          name: WEP Key 2
          operations: W
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: 10,26
          units: ""
          description: WEP Key 2 expressed as a hexadecimal string.10 Bytes for a 40 Bit key26 Bytes for a 104 Bit key
        - id: 24
          name: WEP Key 3
          operations: W
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: 10,26
          units: ""
          description: WEP Key 3 expressed as a hexadecimal string.10 Bytes for a 40 Bit key26 Bytes for a 104 Bit key
        - id: 25
          name: WEP Key 4
          operations: W
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: 10,26
          units: ""
          description: WEP Key 4 expressed as a hexadecimal string.10 Bytes for a 40 Bit key26 Bytes for a 104 Bit key
        - id: 26
          name: RADIUS Server
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: 1..256
          units: ""
          description: RADIUS Authentication Server Address
        - id: 27
          name: RADIUS Server Port
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: RADIUS Authentication Server Port Number
        - id: 28
          name: RADIUS Secret
          operations: W
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: 1..256
          units: ""
          description: RADIUS Shared Secret
        - id: 29
          name: WMM Supported
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: '0: WMM NOT Supported 1: WMM Wupported'
        - id: 30
          name: WMM Enabled
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: '0: Disabled 1: Enabled'
        - id: 31
          name: MAC Control Enabled
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: '0: Any Client MAC Address accepted 1: Client MAC address must exist in MACAddressList'
        - id: 32
          name: MAC Address List
          operations: RW
          multipleinstances: Multiple
          mandatory: Optional
          type: String
          rangeenumeration: "12"
          units: ""
          description: Array of allowed client MAC addresses, in hexadecimal form.
        - id: 33
          name: Total Bytes Sent
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Total number of bytes sent via this interface
        - id: 34
          name: Total Bytes Received
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Total number of bytes received via this interface
        - id: 35
          name: Total Packets Sent
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Total packets sent via this interface
        - id: 36
          name: Total Packets Received
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Total packets received via this interface
        - id: 37
          name: Transmit Errors
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Total number of packets which could not be transmitted because of errors.
        - id: 38
          name: Receive Errors
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Total number of packets received with errors which prevented those packets from being delivered.
        - id: 39
          name: Unicast Packets Sent
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Count of Unicast Packets Sent
        - id: 40
          name: Unicast Packets Received
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Count of Unicast Packets Received
        - id: 41
          name: Multicast Packets Sent
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Count of Multicast Packets Sent
        - id: 42
          name: Multicast Packets  Received
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Count of Multicast Packets Received
        - id: 43
          name: Broadcast Packets Sent
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Count of Broadcast Packets Sent
        - id: 44
          name: Broadcast Packets Received
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Count of Broadcast Packets Received
        - id: 45
          name: Discard Packets Sent
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Count of valid outbound packets intentionally discarded without transmission, for example a packet may be discarded to manage buffer space.
        - id: 46
          name: Discard Packets Received
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Count of valid packets received and intentionally discarded without delivery to the system, for example a packet may be discarded to manage buffer space.
        - id: 47
          name: Unknown Packets Received
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Count of Unknown Packets Received
        - id: 48
          name: Vendor specific extensions
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: Links to a vendor specific object.
- Name: LWM2M Bearer Selection
  Description1: |-
    This object specifies resources to enable a device to choose a PLMN/network on which to attach/register and what type of bearer to then connect.
    		This object allows via remote bearer and network configuration to overwrite automatic network and bearer selection e.g. as supported by the UICC. An equivalent example for overwriting automatic selection is a user doing manual network and bearer selection on a smart phone.
  Description2: |-
    Notes:
    		(1)	Remote management of this communications bearer via LwM2M is currently not supported.
    		(2)	See [3GPP-TS_23.401, section 4.3.5.10] for the Preferred Network Behaviour indication used by the UE to inform the network about its capabilities and preferences.
  ObjectID: 13
  ObjectURN: urn:oma:lwm2m:oma:13
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: Preferred Communications Bearer
          operations: RW
          multipleinstances: Multiple
          mandatory: Optional
          type: Integer
          rangeenumeration: 8 bit
          units: ""
          description: 'Used in network selection and, if applicable, in subsequent mobility management procedures:0: auto connect1: 3GPP PS preferred2: 3GPP PS GSM (GPRS) preferred (including EC-GSM-IoT)3: 3GPP PS UMTS preferred4: 3GPP PS LTE preferred5: 1xEV-DO preferred (1)6: 3GPP CS preferred (1)7: WLAN preferred8: Ethernet preferred (1)9: DSL preferred (1)10: Bluetooth preferred (1)11: WIMAX preferred (1)12: 3GPP PS LTE with CIoT EPS optimisations, User Plane preferred (2)13: 3GPP PS LTE with CIoT EPS optimisations, Control Plane preferred (2)14: 3GPP PS NB-IoT Control Plane optimisations preferred (2)15: 3GPP PS NB-IoT User Plane optimisations preferred (2) 16-100: Reserved for future useThe Preferred Communications Bearer resource specifies the preferred communications bearer that the LWM2M Client is requested to use for connecting to the LWM2M Server. If multiple preferred communications bearers are specified, the priority order is reflected by the resource instance order. E.g. the bearer which appears first in the list of resource instances is to have higher priority over the rest of available bearers. The LWM2M Client SHOULD use the preferred bearers with higher priority first if they are available. If none of indicated preferred bearers is available, the LWM2M Client SHOULD wait until one of them becomes available.'
        - id: 1
          name: Acceptable RSSI (GSM)
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Provides guide to the application when performing manual network selection; the range is -48 to -110.
        - id: 2
          name: Acceptable RSCP (UMTS)
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Provides guide to the application when performing manual network selection; the range is -25 to -120.
        - id: 3
          name: Acceptable RSRP (LTE)
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Provides guide to the application when performing manual network selection; the range is -44 to -140.
        - id: 4
          name: Acceptable RSSI (1xEV-DO)
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Provides guide to the application when performing manual network selection.
        - id: 5
          name: Cell lock list
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Comma separated list of allowed Global Cell Identities.
        - id: 6
          name: Operator list
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Comma separated list of MCC+MNC of operators, in priority order.Resource “operator list mode” indicates how to process this list.
        - id: 7
          name: Operator list mode
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Indicates whether resource “operator list” represents the allowed operator list (white list), or, the preferred operator list.0=preferred1=allowed
        - id: 8
          name: List of available PLMNs
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Allows server to see results of network scan (e.g. result of AT+COPS=? as per 3GPP-TS_27.007)
        - id: 9
          name: Vendor specific extensions
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: Link to a vendor specific object.
        - id: 10
          name: Acceptable RSRP (NB-IoT)
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Provides guide to the application when performing manual network selection; the range is -44 to -158.
        - id: 11
          name: Higher Priority PLMN Search Timer
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Interval between periodic searches for higher priority PLMNs of the same country when camped on a visited PLMN, i.e. roaming scenario; based on SIM configuration, EFHPPLMN [3GPP-TS_31.102, section 4.2.6]
        - id: 12
          name: Attach without PDN connection
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: 'False: attach with PDN connectionTrue: attach without PDN connection'
- Name: LWM2M Bearer Selection
  Description1: |-
    This object specifies resources to enable a device to choose a PLMN/network on which to attach/register and what type of bearer to then connect.
    		This object allows via remote bearer and network configuration to overwrite automatic network and bearer selection e.g. as supported by the UICC. An equivalent example for overwriting automatic selection is a user doing manual network and bearer selection on a smart phone.
  Description2: |-
    Notes:
    		(1)	Remote management of this communications bearer via LwM2M is currently not supported.
    		(2)	See [3GPP-TS_23.401, section 4.3.5.10] for the Preferred Network Behaviour indication used by the UE to inform the network about its capabilities and preferences.
  ObjectID: 13
  ObjectURN: urn:oma:lwm2m:oma:13:1.1
  LWM2MVersion: "1.1"
  ObjectVersion: "1.1"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: Preferred Communications Bearer
          operations: RW
          multipleinstances: Multiple
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..100
          units: ""
          description: 'Used in network selection and, if applicable, in subsequent mobility management procedures:0: auto connect1: 3GPP PS preferred2: 3GPP PS GSM (GPRS) preferred (including EC-GSM-IoT)3: 3GPP PS UMTS preferred4: 3GPP PS LTE preferred5: 1xEV-DO preferred (1)6: 3GPP CS preferred (1)7: WLAN preferred8: Ethernet preferred (1)9: DSL preferred (1)10: Bluetooth preferred (1)11: WIMAX preferred (1)12: 3GPP PS LTE with CIoT EPS optimisations, User Plane preferred (2)13: 3GPP PS LTE with CIoT EPS optimisations, Control Plane preferred (2)14: 3GPP PS NB-IoT Control Plane optimisations preferred (2)15: 3GPP PS NB-IoT User Plane optimisations preferred (2) 16: 3GPP 5G-NR preferred17-100: Reserved for future useThe Preferred Communications Bearer resource specifies the preferred communications bearer that the LWM2M Client is requested to use for connecting to the LWM2M Server. If multiple preferred communications bearers are specified, the priority order is reflected by the resource instance order. E.g. the bearer which appears first in the list of resource instances is to have higher priority over the rest of available bearers. The LWM2M Client SHOULD use the preferred bearers with higher priority first if they are available. If none of indicated preferred bearers is available, the LWM2M Client SHOULD wait until one of them becomes available.'
        - id: 1
          name: Acceptable RSSI (GSM)
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: -110..-48
          units: ""
          description: Provides guide to the application when performing manual network selection.
        - id: 2
          name: Acceptable RSCP (UMTS)
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: -120..-25
          units: ""
          description: Provides guide to the application when performing manual network selection.
        - id: 3
          name: Acceptable RSRP (LTE)
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: -140..-44
          units: ""
          description: Provides guide to the application when performing manual network selection.
        - id: 4
          name: Acceptable RSSI (1xEV-DO)
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Provides guide to the application when performing manual network selection.
        - id: 5
          name: Cell lock list
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Comma separated list of allowed Global Cell Identities.
        - id: 6
          name: Operator list
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Comma separated list of MCC+MNC of operators, in priority order.Resource "operator list mode" indicates how to process this list.
        - id: 7
          name: Operator list mode
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Indicates whether resource "operator list" represents the allowed operator list (white list), or, the preferred operator list.0=preferred1=allowed
        - id: 8
          name: List of available PLMNs
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Allows server to see results of network scan (e.g. result of AT+COPS=? as per 3GPP-TS_27.007)
        - id: 9
          name: Vendor specific extensions
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: Link to a vendor specific object.
        - id: 10
          name: Acceptable RSRP (NB-IoT)
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: -158..-44
          units: ""
          description: Provides guide to the application when performing manual network selection.
        - id: 11
          name: Higher Priority PLMN Search Timer
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Interval between periodic searches for higher priority PLMNs of the same country when camped on a visited PLMN, i.e. roaming scenario; based on SIM configuration, EFHPPLMN [3GPP-TS_31.102, section 4.2.6]
        - id: 12
          name: Attach without PDN connection
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: 'False: attach with PDN connectionTrue: attach without PDN connection'
- Name: LWM2M Software Component
  Description1: If some Objects are not supported after software update, the LwM2M Client MUST delete all the Object Instances of the Objects that are not supported.
  Description2: ""
  ObjectID: 14
  ObjectURN: urn:oma:lwm2m:oma:14
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: Component Identity
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: 0..255 bytes
          units: ""
          description: Name or identifier of the software component
        - id: 1
          name: Component Pack
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: Software components is stored in this resource
        - id: 2
          name: Component Version
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: 0..255 bytes
          units: ""
          description: Version of the software component.
        - id: 3
          name: Activate
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: This action activates the software previously successfully installed (the SW Update Package Installation State Machine is currently in the INSTALLED state).
        - id: 4
          name: Deactivate
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: This action deactivates software if the SW Update Package Installation State Machine is currently in the INSTALLED state.
        - id: 5
          name: Activation State
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: 'Indicates the current activation state of this software component:0: DISABLEDActivation State is DISABLED if the Software Component Activation State Machine is in the INACTIVE state or not alive.1: ENABLEDActivation State is ENABLED only if the Software Component Activation State Machine is in the ACTIVE state.'
- Name: DevCapMgmt
  Description1: This LWM2M Object is dedicated to manage the device capabilities of a device e.g. sensors, communication, etc.
  Description2: ""
  ObjectID: 15
  ObjectURN: urn:oma:lwm2m:oma:15
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: Property
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: 'List of Device Capabilities inside a given Group.The format is a free list ASCII-represented integers separated by a semi colon. (e.g. 0;1;10)The list of capabilities per Group is given in Appendix B: Device Capabilities Vocabularyexecutable Resource can work with.'
        - id: 1
          name: Group
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..15
          units: ""
          description: 'Group name of Device Capabilities0: SENSOR: luminosity, presence,temp,humidity1: CONTROL: Light, Power, Sound2: CONNECTIVITY: Bluetooth, wifi, …3: NAVIGATION: gps, galieo4: STORAGE: external memory,5: VISION: cam, video-cam, night_cam.6: SOUND: speaker, buzzer7: ANALOG_INPUT: generic input8: ANALOG_OUTPUT: generic output9..15: reserved'
        - id: 2
          name: Description
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Device Capability Description(manufacturer specified string)
        - id: 3
          name: Attached
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: When the resource doesn’t exist, it means the associated Device Capability is not removable.When this resource is "False", it means the associated Device Capability is removable and is currently not attached to the device.When this resource is "True", it means the associated Device Capability - if removable - is currently attached to the Device.When a Device Capability is not removable, and the "Attached" Resource is present, the "Attached" value but be set to "True".
        - id: 4
          name: Enabled
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: This resource indicates whether the Device Capability is enabled regardless whether the Device Capability is attached or not. If the value of this resource is "True" the Device Capability is in Enabled State. If the value is "False" the Device Capability is in Disabled State;The ‘Attached’ and ‘Enabled’ resources are independent. A Device Capability MAY have ‘True’ as value for ‘Enabled’ Resource while having ‘False’ as value for the ‘Attached’ Resource. That means the Device Capability is still not available and can’t be used until it is attached to the Device, but will be useable once the Device Capability is attached.
        - id: 5
          name: opEnable
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: This command is used to enable the Device Capability to transfer the Device Capability from Disabled State to Enabled state.In Enabled State, the Device Capability is allowed to work when it is attached to the Device.
        - id: 6
          name: opDisable
          operations: E
          multipleinstances: Multiple
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: This command is used to disable the Device Capability to transfer the Device Capability from Enabled State to Disabled State.In Disabled state the Device Capability is not allowed to work.
        - id: 7
          name: NotifyEn
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: When the Resources "Enabled" or "Attached" are under "Observation", this resource specifies whether the LWM2M Server MUST be notified when the value of the Resource on "Observation" changed. If the Resource "NotifyEn" is not present or the value is ‘False’, the LWM2M Server will be not notified about this change. If the "NotifyEn" Resource is present and the value is ‘True’, the LWM2M Server will be notified.
- Name: DevCapMgmt
  Description1: This LWM2M Object is dedicated to manage the device capabilities of a device e.g. sensors, communication, etc.
  Description2: ""
  ObjectID: 15
  ObjectURN: urn:oma:lwm2m:oma:15:2.0
  LWM2MVersion: "1.0"
  ObjectVersion: "2.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: Property
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: 'List of Device Capabilities inside a given Group.The format is a free list ASCII-represented integers separated by a semi colon. (e.g. 0;1;10)The list of capabilities per Group is given in Appendix B: Device Capabilities Vocabularyexecutable Resource can work with.'
        - id: 1
          name: Group
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..15
          units: ""
          description: 'Group name of Device Capabilities0: SENSOR: luminosity, presence,temp,humidity1: CONTROL: Light, Power, Sound2: CONNECTIVITY: Bluetooth, wifi, …3: NAVIGATION: gps, galieo4: STORAGE: external memory,5: VISION: cam, video-cam, night_cam.6: SOUND: speaker, buzzer7: ANALOG_INPUT: generic input8: ANALOG_OUTPUT: generic output9..15: reserved'
        - id: 2
          name: Description
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Device Capability Description(manufacturer specified string)
        - id: 3
          name: Attached
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: When the resource doesn’t exist, it means the associated Device Capability is not removable.When this resource is "False", it means the associated Device Capability is removable and is currently not attached to the device.When this resource is "True", it means the associated Device Capability - if removable - is currently attached to the Device.When a Device Capability is not removable, and the "Attached" Resource is present, the "Attached" value but be set to "True".
        - id: 4
          name: Enabled
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: This resource indicates whether the Device Capability is enabled regardless whether the Device Capability is attached or not. If the value of this resource is "True" the Device Capability is in Enabled State. If the value is "False" the Device Capability is in Disabled State;The ‘Attached’ and ‘Enabled’ resources are independent. A Device Capability MAY have ‘True’ as value for ‘Enabled’ Resource while having ‘False’ as value for the ‘Attached’ Resource. That means the Device Capability is still not available and can’t be used until it is attached to the Device, but will be useable once the Device Capability is attached.
        - id: 5
          name: opEnable
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: This command is used to enable the Device Capability to transfer the Device Capability from Disabled State to Enabled state.In Enabled State, the Device Capability is allowed to work when it is attached to the Device.
        - id: 6
          name: opDisable
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: This command is used to disable the Device Capability to transfer the Device Capability from Enabled State to Disabled State.In Disabled state the Device Capability is not allowed to work.
        - id: 7
          name: NotifyEn
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: When the Resources "Enabled" or "Attached" are under "Observation", this resource specifies whether the LWM2M Server MUST be notified when the value of the Resource on "Observation" changed. If the Resource "NotifyEn" is not present or the value is ‘False’, the LWM2M Server will be not notified about this change. If the "NotifyEn" Resource is present and the value is ‘True’, the LWM2M Server will be notified.
- Name: Portfolio
  Description1: The Portfolio Object allows to extend the data storage capability of other Object Instances in the LwM2M system, as well as the services which may be used to authenticate and to protect privacy of data contained in those extensions. In addition, a service of data encryption is also defined
  Description2: ""
  ObjectID: 16
  ObjectURN: urn:oma:lwm2m:oma:16
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: Identity
          operations: RW
          multipleinstances: Multiple
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: 'Data Storage extension for other Object Instances.e.gfor [GSMA]: 0 : Host Device ID, 1:Host Device Manufacturer2:Host Device Model3:Host Device Software Version,This Resource contains data that the GetAuthData executable Resource can work with.'
        - id: 1
          name: GetAuthData
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Executable resource to trigger Services described in Section 5.2.2 Arguments definitions are described in Section 5.2.1 as well as in table 2 of this document
        - id: 2
          name: AuthData
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: Buffer which contains the data generated by theprocess triggered by a GetAuthData request
        - id: 3
          name: AuthStatus
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..2
          units: ""
          description: 'This Resource contains the state related to the process triggered by GetAuthDatarequest.0 :IDLE_STATE :AuthData doesn’t contain any valid data1 :DATA_AVAIL_STATE : AuthDatacontains a valid data 2 :ERROR_STATE :an error occurredThis state is reset to IDLE_STATE, when the executable resource "GetAuthData" is triggered or when the AuthData resource has been returned to the LwM2M Server (READ / NOTIFY) .'
- Name: BinaryAppDataContainer
  Description1: "This LwM2M Objects provides the application service data related to a LwM2M Server, eg. Water meter data. \nThere are several methods to create instance to indicate the message direction based on the negotiation between Application and LwM2M. The Client and Server should negotiate the instance(s) used to exchange the data. For example:\n - Using a single instance for both directions communication, from Client to Server and from Server to Client.\n - Using an instance for communication from Client to Server and another one for communication from Server to Client\n - Using several instances\n"
  Description2: ""
  ObjectID: 19
  ObjectURN: urn:oma:lwm2m:oma:19
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: Data
          operations: RW
          multipleinstances: Multiple
          mandatory: Mandatory
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: Indicates the application data content.
        - id: 1
          name: Data Priority
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 1 bytes
          units: ""
          description: 'Indicates the Application data priority:0:Immediate1:BestEffort2:Latest3-100: Reserved for future use.101-254: Proprietary mode.'
        - id: 2
          name: Data Creation Time
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: Indicates the Data instance creation timestamp.
        - id: 3
          name: Data Description
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: 32 bytes
          units: ""
          description: Indicates the data description.e.g. "meter reading".
        - id: 4
          name: Data Format
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: 32 bytes
          units: ""
          description: Indicates the format of the Application Data.e.g. YG-Meter-Water-ReadingUTF8-string
        - id: 5
          name: App ID
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 2 bytes
          units: ""
          description: Indicates the destination Application ID.
- Name: Event Log
  Description1: |
    The Event Log Object is a single Instance Object defined for logging data in a straightforward and generic way.
    The Resources of that Object are based on the OMA LwM2M set of reusable Resources dedicated to logging event activity.
  Description2: ""
  ObjectID: 20
  ObjectURN: urn:oma:lwm2m:oma:20
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 4010
          name: LogClass
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: "255"
          units: ""
          description: 'Define the Log Event Class: 0: generic (default)1: system 2: security3: event 4: trace 5: panic 6: charging [7-99]: reserved [100-255]: vendor specific'
        - id: 4011
          name: LogStart
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Actions:a) Start data collection(DC)b) LogStatus is set to 0 (running)c) DC is emptied (default) or extended according arg'0' value Arguments definitions are described in the table below.
        - id: 4012
          name: LogStop
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: 'Actions: a) Stop data collection(DC) b)1st LSB of LogStatus is set to "1"(stopped) c) DC is kept (default) or emptied according arg''0'' value Arguments definitions are described in the table below.'
        - id: 4013
          name: LogStatus
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 8-Bits
          units: ""
          description: 'Data Collection process status: Each bit of this Resource Instance value defines specific status: 1st LSB 0=running, 1=stopped 2nd LSB 1=LogData contains Valid Data 0=LogData doesn''t contain Valid Data 3rd LSB 1=Error occurred during Data Collection 0=No error [4th -7th ] LSB:reserved 8th LSB: vendor specific.'
        - id: 4014
          name: LogData
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: Read Access on that Resource returns the Data Collection associated to the current Object Instance.
        - id: 4015
          name: LogDataFormat
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: "255"
          units: ""
          description: 'when set by the Server, this Resource indicates to the Client, what is the Server preferred data format to use when the LogData Resource is returned. when retrieved by the Server, this Resource indicates which specific data format is used when the LogData Resource is returned to the Server 0or Resource not present : no specific data format (sequence of bytes)1 : OMA-LwM2M TLV format2 : OMA-LwM2M JSON format3:OMA-LwM2M CBOR format[4..99] reserved[100..255] vendor specific data format'
- Name: LWM2M OSCORE
  Description1: |-
    This LwM2M Object provides the keying material and related information of a LwM2M Client appropriate to access a specified LwM2M Server using OSCORE. One Object Instance MAY address a LwM2M Bootstrap-Server. These LwM2M Object Resources MUST only be changed by a LwM2M Bootstrap-Server or Bootstrap from Smartcard and MUST NOT be accessible by any other LwM2M Server.
    Instances of this Object are linked from Instances of Object 0 using the OSCORE Security Mode Resource of Object 0. Instances of this Object MUST NOT be linked from more than one Instance of Object 0.
  Description2: ""
  ObjectID: 21
  ObjectURN: urn:oma:lwm2m:oma:21
  LWM2MVersion: "1.1"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: OSCORE Master Secret
          operations: ""
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: This resource MUST be used to store the pre-shared key used in LwM2M Client and LwM2M Server/Bootstrap-Server, called the Master Secret.
        - id: 1
          name: OSCORE Sender ID
          operations: ""
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: This resource MUST store an OSCORE identifier for the LwM2M Client called the Sender ID.
        - id: 2
          name: OSCORE Recipient ID
          operations: ""
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: This resource MUST store an OSCORE identifier for the LwM2M Client called the Recipient ID.
        - id: 3
          name: 'OSCORE AEAD Algorithm '
          operations: ""
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: This resource MUST be used to store the encoding of the AEAD Algorithm as defined in Table 10 of RFC 8152. The AEAD is used by OSCORE for encryption and integrity protection of CoAP message fields.
        - id: 4
          name: 'OSCORE HMAC Algorithm '
          operations: ""
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: This resource MUST be used to store the encoding of the HMAC Algorithm used in the HKDF. The encoding of HMAC algorithms are defined in Table 7 of RFC 8152. The HKDF is used to derive the security context used by OSCORE.
        - id: 5
          name: OSCORE Master Salt
          operations: ""
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: This resource MUST be used to store a non-secret random value called the Master Salt. The Master Salt is used to derive the security context used by OSCORE.
- Name: LWM2M OSCORE
  Description1: |-
    This LwM2M Object provides the keying material and related information of a LwM2M Client appropriate to access a specified LwM2M Server using OSCORE. One Object Instance MAY address a LwM2M Bootstrap-Server. These LwM2M Object Resources MUST only be changed by a LwM2M Bootstrap-Server or Bootstrap from Smartcard and MUST NOT be accessible by any other LwM2M Server.
    Instances of this Object are linked from Instances of Object 0 using the OSCORE Security Mode Resource of Object 0. Instances of this Object MUST NOT be linked from more than one Instance of Object 0.
  Description2: ""
  ObjectID: 21
  ObjectURN: urn:oma:lwm2m:oma:21:1.1
  LWM2MVersion: "1.1"
  ObjectVersion: "1.1"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: OSCORE Master Secret
          operations: ""
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: This resource MUST be used to store the pre-shared key used in LwM2M Client and LwM2M Server/Bootstrap-Server, called the Master Secret.
        - id: 1
          name: OSCORE Sender ID
          operations: ""
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: This resource MUST store an OSCORE identifier for the LwM2M Client called the Sender ID.
        - id: 2
          name: OSCORE Recipient ID
          operations: ""
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: This resource MUST store an OSCORE identifier for the LwM2M Client called the Recipient ID.
        - id: 3
          name: 'OSCORE AEAD Algorithm '
          operations: ""
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: This resource MUST be used to store the encoding of the AEAD Algorithm as defined in Table 10 of RFC 8152. The AEAD is used by OSCORE for encryption and integrity protection of CoAP message fields.
        - id: 4
          name: 'OSCORE HMAC Algorithm '
          operations: ""
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: This resource MUST be used to store the encoding of the HMAC Algorithm used in the HKDF. The encoding of HMAC algorithms are defined in Table 7 of RFC 8152. The HKDF is used to derive the security context used by OSCORE.
        - id: 5
          name: OSCORE Master Salt
          operations: ""
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: This resource MUST be used to store a non-secret random value called the Master Salt. The Master Salt is used to derive the security context used by OSCORE.
        - id: 6
          name: ' OSCORE ID Context'
          operations: ""
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: This resource MUST be used to store an OSCORE identifier called ID Context. This identifier is used to identify the Common Context and derive the security context used by OSCORE.
- Name: LWM2M OSCORE
  Description1: |-
    This LwM2M Object provides the keying material and related information of a LwM2M Client appropriate to access a specified LwM2M Server using OSCORE. One Object Instance MAY address a LwM2M Bootstrap-Server. These LwM2M Object Resources MUST only be changed by a LwM2M Bootstrap-Server or Bootstrap from Smartcard and MUST NOT be accessible by any other LwM2M Server.
    Instances of this Object are linked from Instances of Object 0 using the OSCORE Security Mode Resource of Object 0. Instances of this Object MUST NOT be linked from more than one Instance of Object 0.
  Description2: ""
  ObjectID: 21
  ObjectURN: urn:oma:lwm2m:oma:21:2.0
  LWM2MVersion: "1.1"
  ObjectVersion: "2.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: OSCORE Master Secret
          operations: ""
          multipleinstances: Single
          mandatory: Mandatory
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: This resource MUST be used to store the pre-shared key used in LwM2M Client and LwM2M Server/Bootstrap-Server, called the Master Secret.
        - id: 1
          name: OSCORE Sender ID
          operations: ""
          multipleinstances: Single
          mandatory: Mandatory
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: This resource MUST store an OSCORE identifier for the LwM2M Client called the Sender ID.
        - id: 2
          name: OSCORE Recipient ID
          operations: ""
          multipleinstances: Single
          mandatory: Mandatory
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: This resource MUST store an OSCORE identifier for the LwM2M Client called the Recipient ID.
        - id: 3
          name: 'OSCORE AEAD Algorithm '
          operations: ""
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: This resource MUST be used to store the encoding of the AEAD Algorithm as defined in Table 10 of RFC 8152. The AEAD is used by OSCORE for encryption and integrity protection of CoAP message fields.
        - id: 4
          name: 'OSCORE HMAC Algorithm '
          operations: ""
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: This resource MUST be used to store the encoding of the HMAC Algorithm used in the HKDF. The encoding of HMAC algorithms are defined in Table 7 of RFC 8152. The HKDF is used to derive the security context used by OSCORE.
        - id: 5
          name: OSCORE Master Salt
          operations: ""
          multipleinstances: Single
          mandatory: Optional
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: This resource MUST be used to store a non-secret random value called the Master Salt. The Master Salt is used to derive the security context used by OSCORE.
        - id: 6
          name: ' OSCORE ID Context'
          operations: ""
          multipleinstances: Single
          mandatory: Optional
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: This resource MUST be used to store an OSCORE identifier called ID Context. This identifier is used to identify the Common Context and derive the security context used by OSCORE.
- Name: Virtual Observe Notify
  Description1: The Virtual Observe Notify Object provides a main function to notify multiple resources to a LwM2M Server in one notification message whether the resources are in one object/object instance or across multiple objects. The Virtual Observe Notify Object also provides some functions to implement more efficient multi-resource report.
  Description2: |-
    Notes:
    (1)	When the ResourceFilter is set to TRUE, this condition takes precedence over any pmax. Namely, when the LwM2M Server set the Resource ResourceFilter to TRUE, whatever the pmax attribute is attached to any resource included in the ObserveLinks, the Report is only populated by the LwM2M Client each time the resources included in the ObserveLinks are changed.
    (2)	Any default pmax and pmin values which have been configured in the Server Object should not apply to VirtualObserveNotify and each instance of this object should use explicit pmin and pmax as requested by the LwM2M Server when setting up notifications.
  ObjectID: 22
  ObjectURN: urn:oma:lwm2m:oma:22
  LWM2MVersion: "1.1"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: ObserveLinks
          operations: RW
          multipleinstances: Multiple
          mandatory: Mandatory
          type: Corelnk
          rangeenumeration: ""
          units: ""
          description: Array of Core Links where each element includes a Resource ID or Object Instance ID to be observed and its observation criteria (lt, gt, st, pmin, pmax).When the LwM2M Server write the resources or object instances to this Resource, the LwM2M Client starts to observe these resources.When the LwM2M Server write empty string to this Resource, the LwM2M Client stop to observe resources.
        - id: 1
          name: Report
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: This resource is populated by the LwM2M Client each time an observed resource from ObserveLinks meets its observation criteria, thereby resulting in a notification to a LwM2M Server that is observing Report resource. The type MUST be SenML JSON
        - id: 2
          name: ResourceFilter
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: 'Used by the LwM2M Server to indicate the LwM2M Client whether send all or changed resources. false: report all Resources, true: report only changed Resources.When it is absent, the LwM2M Client shall report all Resources as default.'
        - id: 3
          name: ReportLinks
          operations: RW
          multipleinstances: Multiple
          mandatory: Optional
          type: Corelnk
          rangeenumeration: ""
          units: ""
          description: Array of Core Links where each element includes the Resources ID to be included in the notification.If ReportLinks Resource is absent, the notification sent to the LwM2M Server will only include the Resources in ObserveLinks.If the ReportLinks Resource is present, the notification sent to the LwM2M Server will only include the Resources that are listed in ReportLinks and not include the value of the Resource ObserveLinks.To provide maximum flexibility to the server the Notifications will not comprise the union of resources in ObserveLinks and ReportLinks when both present.
        - id: 4
          name: ObserveRelation
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: 'Used by the server to indicate the AND/OR logic relationship combination between or among resources included in ObserveLinks Resource.0: OR 1: AND 2: reserved value.'
- Name: Virtual Observe Notify
  Description1: The Virtual Observe Notify Object provides a main function to notify multiple resources to a LwM2M Server in one notification message whether the resources are in one object/object instance or across multiple objects. The Virtual Observe Notify Object also provides some functions to implement more efficient multi-resource report.
  Description2: |-
    Notes:
    (1)	When the ResourceFilter is set to TRUE, this condition takes precedence over any pmax. Namely, when the LwM2M Server set the Resource ResourceFilter to TRUE, whatever the pmax attribute is attached to any resource included in the ObserveLinks, the Report is only populated by the LwM2M Client each time the resources included in the ObserveLinks are changed.
    (2)	Any default pmax and pmin values which have been configured in the Server Object should not apply to VirtualObserveNotify and each instance of this object should use explicit pmin and pmax as requested by the LwM2M Server when setting up notifications.
  ObjectID: 22
  ObjectURN: urn:oma:lwm2m:oma:22:1.1
  LWM2MVersion: "1.1"
  ObjectVersion: "1.1"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: ObserveLinks
          operations: RW
          multipleinstances: Multiple
          mandatory: Mandatory
          type: Corelnk
          rangeenumeration: ""
          units: ""
          description: Array of Core Links where each element includes a Resource ID or Object Instance ID to be observed and its observation criteria (lt, gt, st, pmin, pmax).When the LwM2M Server write the resources or object instances to this Resource, the LwM2M Client starts to observe these resources.When the LwM2M Server write empty string to this Resource, the LwM2M Client stop to observe resources.
        - id: 1
          name: Report
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: This resource is populated by the LwM2M Client each time an observed resource from ObserveLinks meets its observation criteria, thereby resulting in a notification to a LwM2M Server that is observing Report resource. The type MUST be SenML JSON
        - id: 2
          name: ResourceFilter
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: 'Used by the LwM2M Server to indicate the LwM2M Client whether send all or changed resources.False: report all Resources,True: report only changed Resources.When it is absent, the LwM2M Client shall report all Resources as default.'
        - id: 3
          name: ReportLinks
          operations: RW
          multipleinstances: Multiple
          mandatory: Optional
          type: Corelnk
          rangeenumeration: ""
          units: ""
          description: Array of Core Links where each element includes the Resources ID to be included in the notification.If ReportLinks Resource is absent, the notification sent to the LwM2M Server will only include the Resources in ObserveLinks.If the ReportLinks Resource is present, the notification sent to the LwM2M Server will only include the Resources that are listed in ReportLinks and not include the value of the Resource ObserveLinks.To provide maximum flexibility to the server the Notifications will not comprise the union of resources in ObserveLinks and ReportLinks when both present.
        - id: 4
          name: ObserveRelation
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: 'Used by the server to indicate the AND/OR logic relationship combination between or among resources included in ObserveLinks Resource.0: OR1: AND2: reserved value.'
        - id: 5
          name: Virtual Observe Report Format
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: If present, it specifies the content format LwM2M Client will use to populate Virtual Observe Report Resource.Values will be either as per Tables 7.4.1 and 7.4.2 of LwM2M Core TS or another IANA registered Media Type. Default value of SenML JSON is assumed when this resource is not present.
        - id: 6
          name: Virtual Observe Report
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: If present this resource is populated by the LwM2M Client following exactly the same rules as those used to populate Resource 4, Report Resource.The only difference is that this resource is formatted as defined by Resource 5
- Name: LwM2M COSE
  Description1: This Object provides the keying material and related information for use with COSE.
  Description2: ""
  ObjectID: 23
  ObjectURN: urn:oma:lwm2m:oma:23
  LWM2MVersion: "1.2"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: KID
          operations: ""
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: This resource is used to indicate the key identifier.
        - id: 1
          name: AEAD Algorithm
          operations: ""
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: This resource is used to store the encoding of the AEAD Algorithm as defined in Table 10 of RFC 8152.
        - id: 2
          name: Key
          operations: ""
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: This resource is used to store the key for use with the indicated AEAD algorithm.
- Name: MQTT Server
  Description1: This object defines configuration parameters for an MQTT client to interact with a MQTT server.
  Description2: ""
  ObjectID: 24
  ObjectURN: urn:oma:lwm2m:oma:24
  LWM2MVersion: "1.2"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: Will Retain
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: The Will Retain value to declare in the MQTT CONNECT message.
        - id: 1
          name: Will Topic
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The Will Topic to include in the MQTT CONNECT message.
        - id: 2
          name: Will Message
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The Will Message to include in the MQTT CONNECT message.
        - id: 3
          name: Clean Session
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: The Clean Session value to declare in the MQTT CONNECT message.
        - id: 4
          name: Will QoS
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Unsigned Integer
          rangeenumeration: 0..3
          units: ""
          description: The Will QoS value to declare in the MQTT CONNECT message.
        - id: 5
          name: Keep Alive
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Unsigned Integer
          rangeenumeration: 0..65535
          units: ""
          description: The Keep Alive value to declare in the MQTT CONNECT message.
        - id: 6
          name: Client Identifier
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: The Client Identifier identifies the MQTT client to the MQTT server. MQTT server must support ClientIds which are between 1 and 23 UTF-8 encoded bytes in length, and that contain only the characters "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ". MQTT server may allow ClientId's that contain more than 23 encoded bytes and may support ClientId's that contain characters not included in the list.
        - id: 7
          name: User Name
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The User Name to declare in the MQTT CONNECT message. It must be a UTF-8 encoded string. It can be used by the MQTT server for authentication and authorization.
        - id: 8
          name: Password
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: The Password value to declare in the MQTT CONNECT message.
- Name: LwM2M Gateway
  Description1: This object is used by a LwM2M Gateway to maintain the devices connected to the gateway.
  Description2: ""
  ObjectID: 25
  ObjectURN: urn:oma:lwm2m:oma:25
  LWM2MVersion: "1.2"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: Device ID
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: This resource identifies the device connected to the gateway.
        - id: 1
          name: Prefix
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: This resource defines what prefix has to be used for access to objects of this device.
        - id: 2
          name: Routing Table Entry
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: This resource links to the Object Instance in the LwM2M Routing Object.
- Name: LwM2M Gateway
  Description1: This object is used by a LwM2M Gateway to maintain the IoT Devices connected to the LwM2M Gateway.
  Description2: ""
  ObjectID: 25
  ObjectURN: urn:oma:lwm2m:oma:25:2.0
  LWM2MVersion: "1.1"
  ObjectVersion: "2.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: Device ID
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: This resource identifies the IoT Device connected to the LwM2M Gateway.
        - id: 1
          name: Prefix
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: This resource defines what prefix MUST be used for access to LwM2M Objects of this IoT Device.
        - id: 3
          name: IoT Device Objects
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Corelnk
          rangeenumeration: ""
          units: ""
          description: This resource contains the Objects and Object Instances exposed by the LwM2M Gateway on behalf of the IoT Device. It uses the same CoreLnk format as Registration Interface.
- Name: LwM2M Gateway Routing
  Description1: This object is used by a LwM2M Gateway to maintain the routing table.
  Description2: ""
  ObjectID: 26
  ObjectURN: urn:oma:lwm2m:oma:26
  LWM2MVersion: "1.2"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: LwM2M Object ID
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: ""
          units: ""
          description: This resource identifies mapping the LwM2M Object ID that is mapped with the Mapping Info Resource. It defines the source of the mapping.
        - id: 1
          name: Mapping Info
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Corelnk
          rangeenumeration: ""
          units: ""
          description: This resource defines the target of the mapping. This Resource may be empty in which case the mapping is the identity function.
- Name: 5GNR Connectivity
  Description1: This is a device management object that should be used for 5G-NR capable devices.
  Description2: ""
  ObjectID: 27
  ObjectURN: urn:oma:lwm2m:oma:27
  LWM2MVersion: "1.2"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: Connectivity Option
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: 'Indicates the connectivity option.1 = Core Network: EPC; Master RAT: LTE; Secondary RAT: -3 = Core Network: EPC; Master RAT: LTE; Secondary RAT: NR2 = Core Network: 5GC; Master RAT: NR; Secondary RAT: -4 = Core Network: 5GC; Master RAT: NR; Secondary RAT: eLTE5 = Core Network: 5GC; Master RAT: eLTE; Secondary RAT: -7 = Core Network: 5GC; Master RAT: eLTE; Secondary RAT: NR'
        - id: 1
          name: NR Band Support available
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: 'Indicates the Operating NR Bands supported by UE in NSA mode. Value represents the integer value of band mentioned in 3GPPSpec 38.104 (Table: Table 5.2-1 and Table 5.2-2)'
        - id: 2
          name: NR Band attached
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: 'Indicates the Operating NR Bands on which UE is attached. Value represents the integer value of band mentioned in 3GPPSpec 38.104 (Table: Table 5.2-1 and Table 5.2-2)'
        - id: 3
          name: S-NSSAI
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Indicates the Single - Network Slice Selection Assistance Information for 5G Standalone mode0 = eMBB1 = URLLC2 = MIoT3 = Custom 4-7 = Reserved
        - id: 4
          name: DNN Name
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Data Network Name in case of Network Bearer Resource is a 5G SA (FDD/TDD) Cellular Network.
        - id: 5
          name: PDU Session Id
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 1...15
          units: ""
          description: Indicates the PDU Session ID over which LwM2M session is established for 5G SA (FDD/TDD) Cellular Network.
        - id: 6
          name: SSC Mode
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 1...3
          units: ""
          description: Indicates the Session and Service Continuity mode for 5G SA (FDD/TDD) Cellular Network.
        - id: 7
          name: PDU Session Type
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Indicates the type of PDU session over which LwM2M connection is established for 5G SA (FDD/TDD) Cellular Network.1 = IPv42 = IPv63 = IPv4v64 = Unstructured5 = Ethernet8 = Reserved (Spec Ref.)
        - id: 8
          name: 5QI
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Indicates the 5G QoS Identifier for 5G SA (FDD/TDD) Cellular Network.1-9,65,66,67,69,70,75,79,80,81,82,83,84,85 = Standard128 to 254 = Operator specific 0,255 = Reserved Remaining = Spare (Spec Ref.)
        - id: 9
          name: SDAP Enablement
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Indicates whether SDAP is enabled or not for 5G SA (FDD/TDD) Cellular Network.0 = in UL only1 = In DL Only2 = In UL and DL both
        - id: 10
          name: QFI
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 1...63
          units: ""
          description: Indicates the QoS Flow identifier for 5G SA (FDD/TDD) Cellular Network. (Spec Ref.)
        - id: 11
          name: Session AMBR
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 1...25
          units: ""
          description: Indicates the Session Aggregate Maximum Bit Rate as per the 5G 3GPP Spec for 5G SA (FDD/TDD) Cellular Network.(Spec Ref.)
        - id: 12
          name: APN-AMBR
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: dB
          description: The Aggregate Maximum Bitrate which is applicable to a given APN over which LwM2M session is established for 5G SA (FDD/TDD) Cellular Network.
        - id: 13
          name: NAS Reflective QOS
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Indicates the QoS at NAS layerfor 5G SA (FDD/TDD) Cellular Network.0 = Disabled1 = Enabled
        - id: 14
          name: Access Stratum Reflective QoS
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Indicates the QoS for Access Stratum (RRC) for 5G SA (FDD/TDD) Cellular Network..0 = Absent1 = Present
        - id: 15
          name: P-CSCF Address Index
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Index for the P-CSCF address for 5G SA (FDD/TDD) Cellular Network.
        - id: 16
          name: PDU session Authentication
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Indicates the Authentication type for PDU SessionPDU session Authentication0 = Primary1 = Secondary2 = Both
        - id: 17
          name: PLMN ID
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Indicates the PLMN ID over which UE is currently attached for 5G SA (FDD/TDD) Cellular Network.Allows server to see the currennt PLMN in string format (e.g. formatted as result of AT+COPS=? as per 3GPP-TS_27.007)
        - id: 18
          name: LADN Support
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Indicates whether LADN (Local Area Data Network) is supported or not for 5G SA (FDD/TDD) Cellular Network.0 = Not Supported1 = Supported
        - id: 19
          name: Integrity Protection on DRB
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Current state of the Integrity Protection on Data Radio Bearer for 5G SA (FDD/TDD) Cellular Network.0 = Disabled1 = Enabled with 64-Kbps2 = Enabled with Peak Rate
        - id: 20
          name: Access type Preference
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Indicates the Access Type preference for 5G SA (FDD/TDD) Cellular Network.0 = 3GPP1 = Non-3GPP
- Name: Device RF Capabilities
  Description1: This is a device management object that should be used for capturing the RF capabilities of the device.
  Description2: ""
  ObjectID: 28
  ObjectURN: urn:oma:lwm2m:oma:28
  LWM2MVersion: "1.1"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: Supported LTE Band Information
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Indicates the list of supported LTE bands
        - id: 1
          name: Supported EGPRS Band Information
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Indicates the list of supported EGPRS bands
        - id: 2
          name: Supported TD-SCDMA Band Information
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Indicates the list of supported TD-SCDMA bands
        - id: 3
          name: Supported WCDMA Band Information
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Indicates the list of supported WCDMA bands
        - id: 4
          name: Supported CDMA-2000 Band Information
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Indicates the list of supported CDMA-2000 bands
        - id: 5
          name: Supported WiMAX Band Information
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Indicates the list of supported WiMAX bands
        - id: 6
          name: Supported NB-IoT Band Information
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Indicates the list of supported NB-IoT bands
        - id: 7
          name: Supported 5G Band Information
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Indicates the list of supported 5G-NR bands
- Name: CoAP Config
  Description1: "\n            This object is used to configure the CoAP transmission parameters (RFC7252) and other parameters that affect CoAP transmission.\n        "
  Description2: ""
  ObjectID: 500
  ObjectURN: urn:oma:lwm2m:oma:500
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: Network Bearer
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..255
          units: ""
          description: 'Identify the network bearer for which these parameters are applicable. The value is from the network bearer list defined in the Connectivity Monitoring Object (ID: 4). Please, verify the list of currently reserved values.'
        - id: 1
          name: ACK_TIMEOUT
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: s
          description: The initial value of retransmission timeout in CoAP. Default is set to that of RFC7252, that is 2 seconds.
        - id: 2
          name: ACK_RANDOM_FACTOR
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: ""
          description: The initial value of retransmission timeout in CoAP. Default is set to that of RFC7252, that is a value of 1.5.
        - id: 3
          name: MAX_RETRANSMIT
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: The maximum number of retransmissions. Default is set to that of RFC7252, that is 4 retransmissions.
        - id: 4
          name: NSTART
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Number of simultaneous outstanding interactions that the LwM2M client can accept from a given LwM2M Server. An outstanding interaction is either a CON for which an ACK has not yet been received but is still expected (message layer) or a request for which neither a response nor an Acknowledgment message has yet been received but is still expected. Default is set to that of RFC7252, that is 1 interaction.
        - id: 5
          name: DEFAULT_LEISURE
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: s
          description: If a server does decide to respond to a multicast request, it should not respond immediately. Instead, it should pick based on RFC7252, Section 8.2. If the LwM2M Client does not have data to compute the Leisure time it should use that of Default Leisure as specified in RFC7252.
        - id: 6
          name: PROBING_RATE
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: B/s
          description: This resource represents the maximum probing rate accepted by this LwM2M Client in bytes per second.
        - id: 7
          name: DTLS Retransmission Timer
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: s
          description: The LwM2M Server may modify the initial DTLS retransmission timer value of 1 second into a different value. This will have effects on latency as well as on congestion, thus the timer value should be handled carefully.
        - id: 8
          name: Max Response Waiting Time
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: The maximum time in seconds the device will wait for a separate response to a request.
        - id: 9
          name: Apply
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Applies the parameters specifed in the resources to the CoAP connections on this interface.
- Name: LTE-MTC Band Config
  Description1: "\n            This object is used to configure the cellular band used by the device as well as to change the band. It is intended to be used on LTE bands, as in NB-IoT and LTE Cat M1 frequency bands.\n        "
  Description2: ""
  ObjectID: 501
  ObjectURN: urn:oma:lwm2m:oma:501
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 1
          name: EARFCN
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..65535
          units: ""
          description: E-UTRA Absolute Radio Frequency Channel Number (EARFCN), the carrier frequency of the device radio.
        - id: 2
          name: Current Frequency (Downlink)
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: MHz
          description: The current frequency used in the current band in MHz (Downlink).
        - id: 3
          name: Current Frequency (Uplink)
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: MHz
          description: The current frequency used in the current band in MHz (Uplink).
        - id: 4
          name: Prioritized Channels
          operations: RW
          multipleinstances: Multiple
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Indicates a list of currently supported EARFCNs in priority order. Each Resource Instance has a value from the band list.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
        - id: 5
          name: Reset Timeout
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: s
          description: Time that the device will wait until reset once the Reset Resource is triggered.
        - id: 6
          name: Reset
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: Execuring this resource resets the radio interface of the device.
        - id: 48
          name: Vendor specific extensions
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: This resource links to a vendor specific object.
- Name: CO Detector
  Description1: This is an alarm that should be raised if the sensor detects a higher than threshold CO level.
  Description2: ""
  ObjectID: 502
  ObjectURN: urn:oma:lwm2m:oma:502
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: CO Sensor Location Tag
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Verbose identification of the location of the CO sensor.
        - id: 1
          name: CO Detected
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: 0 = false (CO NOT detected), 1 = true (CO Detected)
        - id: 2
          name: Ambient CO Value
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0..12800
          units: ppm
          description: CO value (in ppm) received for the area.
        - id: 3
          name: CO Value
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: 0..12800
          units: ppm
          description: Last or Current Measured CO Value (in ppm) from the Sensor.
        - id: 4
          name: Min CO Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0..12800
          units: ppm
          description: The minimum value that can be measured by the sensor (in ppm).
        - id: 5
          name: Max CO Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0..12800
          units: ppm
          description: The maximum value that can be measured by the sensor.
        - id: 6
          name: CO Detection Accuracy
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0..12800
          units: ppm
          description: Indicate range of the accuracy for the temperature Sensor.
        - id: 7
          name: Minimum Measured CO Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0..12800
          units: ppm
          description: The minimum CO value (in ppm) measured by the sensor since power ON or reset.
        - id: 8
          name: Maximum Measured CO Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0..12800
          units: ppm
          description: The maximum CO value measured (in ppm) by the sensor since power ON or reset
        - id: 9
          name: Upper CO Threshold
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0..12800
          units: ppm
          description: Indicate the Upper threshold for the CO Value (in ppm).
        - id: 10
          name: Reset
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the "CO" object related parameters to default
        - id: 6048
          name: Alarm loudness
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: dB
          description: Indicate the loudness of the alarm.
        - id: 5514
          name: Latitude
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The decimal notation of latitude, e.g. -43.5723 (World Geodetic System 1984).
        - id: 5515
          name: Longitude
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The decimal notation of longitude, e.g. 153.21760 (World Geodetic System 1984).
        - id: 6039
          name: Altitude
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: m
          description: Altitude above sea level in meters.
        - id: 6044
          name: Battery Percentage
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0.00..100.00
          units: ""
          description: Current remaining battery level.
- Name: Fire Alarm
  Description1: This is an alarm that should be raised if the sensor(s) detect fire, based on the values reported from Temperature, Humidity, Smoke (CO2).
  Description2: ""
  ObjectID: 503
  ObjectURN: urn:oma:lwm2m:oma:503
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: Temperature Sensor Location Tag
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Verbose identification of the location of the Temperature sensor location
        - id: 1
          name: Temperature Unit
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: 'Temperature Units: 0 = Celsius, 1 = Fahrenheit, 2 = Kelvin. All temperature values are represented in this unit.'
        - id: 2
          name: Ambient Temperature
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Temperature for the area.
        - id: 3
          name: Temperature Value
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: ""
          description: Last or Current Measured Temperature Value from the Sensor. The value 65534 indicates that the Sensor data is not available.
        - id: 4
          name: Minimum Measured Temperature Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum Temperature value measured by the sensor since power ON or reset.
        - id: 5
          name: Maximum Measured Temperature Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum Temperature value measured by the sensor since power ON or reset.
        - id: 6
          name: Min Temperature Range Value
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum temperature value that can be measured by the sensor.
        - id: 7
          name: Max Temperature Range Value
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum temperature value that can be measured by the sensor.
        - id: 8
          name: Lower Temperature Accuracy
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Indicates the lower end of the accuracy range for the temperature sensor.
        - id: 9
          name: Upper Temperature Accuracy
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Indicates the upper end of the accuracy range for the temperature sensor.
        - id: 10
          name: Temperature Threshold
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Indicates the maximum threshold for the temperature.
        - id: 11
          name: Temperature Sensor Error
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: 'Temperature Sensor Error: 0 = false (Working correctly), 1 = true (Faulty).'
        - id: 12
          name: Reset Temperature
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the "Temperature" related parameters to default.
        - id: 13
          name: Temperature Alarm Loudness
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: dB
          description: Indicates the loudness of temperature alarm.
        - id: 14
          name: Humidity Sensor Location Tag
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Verbose identification of the location of the Humidity sensor.
        - id: 15
          name: Ambient Relative Humidity
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0.0..100.0
          units: '%RH'
          description: Relative humidity for the area.
        - id: 16
          name: Humidity Value
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: 0.0..100.0
          units: /100
          description: Last or Current Measured Humidity Value from the Sensor. The value 0 indicates that the Sensor data is not available.
        - id: 17
          name: Minimum Measured Humidity Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0.0..100.0
          units: /100
          description: The minimum Humidity value measured by the sensor since power ON or reset.
        - id: 18
          name: Maximum Measured Humidity Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0.0..100.0
          units: /100
          description: The maximum Humidity value measured by the sensor since power ON or reset.
        - id: 19
          name: Humidity Accuracy
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0.0..100.0
          units: /100
          description: Indicate the accuracy for the Humidity Sensor.
        - id: 20
          name: Humidity Threshold
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0.0..100.0
          units: /100
          description: Indicate the threshold for the Humidity.
        - id: 21
          name: Humidity Sensor Error
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: 'Humidity Sensor Error: 0 = false (Working correctly), 1 = true (Faulty)'
        - id: 22
          name: Reset Humidity
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the "Humidity" related parameters to default.
        - id: 23
          name: Humidity Alarm Loudness
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: dB
          description: Indicates the loudness of the Humidity alarm.
        - id: 24
          name: Smoke Sensor Location Tag
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Verbose identification of the location of the Smoke sensor.
        - id: 25
          name: CO2 Alarm State
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: 0 = False (CO2 alarm threshold not exceeded), 1 = True (CO2 alarm threshold exceeded).
        - id: 26
          name: Ambient CO2 Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ppm
          description: CO2 value for the area.
        - id: 27
          name: CO2 Value
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: ppm
          description: Last or Current Measured CO2 Value from the sensor. The value 0 indicates that the Sensor data is not available.
        - id: 28
          name: Minimum Measured CO2 Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ppm
          description: The minimum CO2 value measured by the sensor since power ON or reset.
        - id: 29
          name: Maximum Measured CO2 Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ppm
          description: The maximum CO2 value measured by the sensor since power ON or reset.
        - id: 30
          name: CO2 Threshold
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ppm
          description: Indicate the alarm threshold for the CO2.
        - id: 31
          name: Smoke Sensor Error
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: 'Smoke Sensor Error: 0 = false (Working correctly), 1 = true (Faulty)'
        - id: 32
          name: Reset Smoke Detection
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the "Smoke" related parameters to default.
        - id: 33
          name: Smoke Alarm Loudness
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: dB
          description: Indicates the loudness of smoke alarm
        - id: 6044
          name: Battery Percentage
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0.00..100.00
          units: ""
          description: Current remaining battery level.
        - id: 5514
          name: Latitude
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The decimal notation of latitude, e.g. -43.5723 (World Geodetic System 1984).
        - id: 5515
          name: Longitude
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The decimal notation of longitude, e.g. 153.21760 (World Geodetic System 1984).
        - id: 6039
          name: Altitude
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: m
          description: Altitude above sea level in meters.
- Name: Remote SIM Provisioning
  Description1: This is a device management object that should be used for Remote SIM Provisioning according to GSMA standards
  Description2: ""
  ObjectID: 504
  ObjectURN: urn:oma:lwm2m:oma:504
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: Current SIM Type
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..3
          units: ""
          description: 'Provides the information about the currently being used SIM Type:0: UICC (removable)1: eUICC (removable)2: eUICC (non-removable)3: iUICC4-24: Reserved for future use'
        - id: 1
          name: Supported SIM Type
          operations: R
          multipleinstances: Multiple
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..3
          units: ""
          description: 'Provides the information about the currently supported SIM Types: 0: UICC (removable)1: eUICC (removable)2: eUICC (non-removable)3: iUICC4-24: Reserved for future use'
        - id: 2
          name: Service Provider Name
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Provides the name of the Service Provider assocatiated with the downloaded profile or the profile currently being downloaded.
        - id: 3
          name: Download URI/Information
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: 0..255
          units: ""
          description: URI, or formatted data containing the URI (e.g. GSMA SGP.22 Activation Code), from where the device can download the profile package by an alternative mechanism. The URI format is defined in RFC 3986.
        - id: 4
          name: RSP Update
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: 'Executes one or more RSP actions. The actions are given as arguments and in case providing multiple actions comma separation is used, e.g. 0,1,2. The following values are possible:0: Download & install profile1: Enable profile - for profile identified by resource 142: Disable profile - for profile identified by resource 143: Delete profile - for profile identified by resource 144: Reset memory of current SIM5-24: Reserved for future use'
        - id: 5
          name: RSP Update State
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..10
          units: ""
          description: 'Indicates current state with respect to the executed RSP action(s) in the RSP update resource. This value is set by the LwM2M Client.0: Idle (before downloading a profile or after successful completetion of the action(s))1: Downloading (The data sequence is on the way)2: Downloaded profile ready for installation3: Installing5: Enabling6: Disabling7: Deleting8: Resetting memory9: Pending end-user consent10: Pending confirmation code11-24: Reserved for future use'
        - id: 6
          name: RSP Update Result
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..16
          units: ""
          description: 'Contains the result of the executed RSP action(s) in the RSP update resource.0: Initial value. Once the updating process is initiated (Download /Update), this Resource MUST be reset to Initial value. 1: RSP action completed successfully.2: Not enough SIM memory for the new Profile package. 3. Out of RAM during downloading process. 4: Connection lost during downloading process.5: Integrity check failure for new downloaded profile package. 6: Unsupported profile package type. 7: Invalid URI8: Unsupported protocol.9: Not authorized to download profile at the given URI.10: Failed to authenticate server given by the URI.11: Generic download and installation error.12: Error in profile package format13: Failed to enable profile.14: Failed to disable profile.15: Failed to delete profile.16: Failed to reset memory.17-24: Reserved for future use'
        - id: 7
          name: Profile Name
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: 0..255
          units: ""
          description: Name of the downloaded profile / profile package or the profile / profile package currently being downloaded.
        - id: 8
          name: Profile Package Version
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: 0..255
          units: ""
          description: Version of the downloaded profile / profile package or the profile / profile package currently being downloaded.
        - id: 9
          name: Free Memory on SIM
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: KiB
          description: Estimated current available amount of storage space on SIM which can store data and software in the LwM2M Device (expressed in kibibytes).
        - id: 10
          name: Total Memory on SIM
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: KiB
          description: Total amount of storage space which can store data and software in the LwM2M Device
        - id: 11
          name: Integrated Circuit Card Identifier (ICCID)
          operations: R
          multipleinstances: Multiple
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: This resource provides the unique identification number for each installed profile of the current SIM in case of RSP support orthe unique identification number of the current SIM in case of current SIM being a UICC with no RSP support. Please refer ETSI TS 102.22.1. In case of multiple installed profiles,the currently active profile is the first instance.
        - id: 12
          name: eUICC ID
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: eUICC-ID (a.k.a. EID), see GSMA SGP.02 and GSMA SGP.29 for definitions
        - id: 13
          name: RSP Type
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: 'Provides the information about the Remote SIM Provisioning (RSP) type of the current SIM:0: No RSP support1: GSMA eSIM for M2M devices2: GSMA eSIM for consumer devices3-24: Reserved for future use'
        - id: 14
          name: Selected ICCID for RSP operation
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Indicates ICCID of profile selected for profile specific RSP operations. This resource must be present if multiple installed profiles is supportedby the RSP implementation. In case of only support for a single profile at a time this resource is not required to be present for profile selection. After successful installation ofa profile the value of this resource (if present) is updated to the ICCID of the installed profile.
        - id: 15
          name: RSP Consent Reason
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Provides information on the requested user consent
        - id: 16
          name: RSP User Consent
          operations: W
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..1
          units: ""
          description: 'User consent decision. The following values are possible:0: Approved1: Rejected2-24: Reserved for future use'
        - id: 17
          name: RSP Confirmation Code
          operations: W
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Provides a confirmation code (see e.g. GSMA SGP.21/22)
        - id: 18
          name: RSP Data Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..17
          units: ""
          description: 'RSP data type for set and get RSP data:0: SM-DP+ default address (see GSMA SGP.22)1: eUICCInfo2 (see GSMA SGP.22)2: DeviceInfo (see GSMA SGP.22)3: eSIM Profile Metadata (GSMA SGP.22 ProfileInfo default data for all installed profiles)5: ISD-P AID (see GSMA SGP.22) - for profile identified by resource 146: Profile state (see GSMA SGP.22) - for profile identified by resource 147: Profile Nickname (see GSMA SGP.22) - for profile identified by resource 148: Service provider name (see GSMA SGP.22) - for profile identified by resource 149: Profile name (see GSMA SGP.22) - for profile identified by resource 1410: Icon type (see GSMA SGP.22) - for profile identified by resource 1411: Icon (see GSMA SGP.22) - for profile identified by resource 1412: Profile Class (see GSMA SGP.22) - for profile identified by resource 1413: Notification Configuration Info (see GSMA SGP.22) - for profile identified by resource 1414: Profile Owner (see GSMA SGP.22) - for profile identified by resource 1415: SM-DP+ proprietary data (see GSMA SGP.22) - for profile identified by resource 1416: Profile Policy Rules (see GSMA SGP.22) - for profile identified by resource 1417: RSP formatted data request/response (RSP type specific)18-24: Reserved for future use'
        - id: 19
          name: Set RSP Data
          operations: W
          multipleinstances: Single
          mandatory: Optional
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: This resource is used to update the (e/i)UICC data / profile specific data of type according to resource 30.It is up to the RSP type whether update of the data is possible or not.
        - id: 20
          name: Get RSP Data
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: This resource is used to retrieve the (e/i)UICC data / profile specific data of type according to resource 30.It is up to the RSP type whether retrieval of the data is possible or not.
- Name: LwM2M SIM Provisioning
  Description1: This is a device management object that should be used for Remote SIM Provisioning from a LwM2M server.
  Description2: ""
  ObjectID: 505
  ObjectURN: urn:oma:lwm2m:oma:505
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: Current SIM Type
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..3
          units: ""
          description: 'Provides the information about the currently being used SIM Type:0: UICC (removable)1: eUICC (removable)2: eUICC (non-removable)3: iUICC'
        - id: 1
          name: Supported SIM Type
          operations: R
          multipleinstances: Multiple
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..3
          units: ""
          description: 'Provides the information about the currently supported SIM Types: 0: UICC (removable)1: eUICC (removable)2: eUICC (non-removable)3: iUICC'
        - id: 2
          name: Service Provider Name
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: Provides the Service Provider Name using which LwM2M is currently communicating to the Server.
        - id: 3
          name: Profile Package
          operations: W
          multipleinstances: Single
          mandatory: Optional
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: Profile Package is a personalised Profile using an interoperable description format that is transmitted to an eUICC to load and install a Profile.
        - id: 4
          name: Profile URI
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: 0..255
          units: ""
          description: URI from where the device can download the profile package by an alternative mechanism. As soon the device has received the Profile package URI it performs the download at the next practical opportunity. The URI format is defined in RFC 3986. For example, coaps://example.org/profile is a syntactically valid URI. The URI scheme determines the protocol to be used. For CoAP this endpoint MAY be a LwM2M Server but does not necessarily need to be. A CoAP server implementing block-wise transfer is sufficient as a server hosting a firmware repository and the expectation is that this server merely serves as a separate file server making profile images available to LwM2M Clients. This server can be the future carrier server as well from which IoT devices would like to use the service.
        - id: 5
          name: Update Profile
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Updates profile by using the profile package stored in Package, or, by using the profile downloaded from the Package URI. This Resource is only executable when the value of the State Resource is Downloaded.
        - id: 6
          name: Update State
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..3
          units: ""
          description: 'Indicates current state with respect to this profile update. This value is set by the LwM2M Client. 0: Idle (before downloading or after successful updating) 1: Downloading (The data sequence is on the way) 2: Downloaded 3: Updating If writing the profile package to Package Resource is done, or, if the device has downloaded the profile package from the Package URI the state changes to Downloaded. Writing an empty string to Package URI Resource or setting the Package Resource to NULL (â€˜0â€™), resets the Profile Update State Machine: the State Resource value is set to Idle and the Update Result Resource value is set to 0. When in Downloaded state, and the executable Resource Update is triggered, the state changes to Updating. If the Update Resource failed, the state returns at Downloaded. If performing the Update Resource was successful, the state changes from Updating to Idle.'
        - id: 7
          name: Update Result
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..8
          units: ""
          description: 'Contains the result of downloading or updating the Profile 0: Initial value. Once the updating process is initiated (Download /Update), this Resource MUST be reset to Initial value. 1: Profile updated successfully, 2: Not enough SIM memory for the new Profile package. 3. Out of RAM during downloading process. 4: Connection lost during downloading process. 5: Integrity check failure for new downloaded package. 6: Unsupported package type. 7: Invalid URI8: Unsupported protocol. A LwM2M client indicates the failure to retrieve the Profile using the URI provided in the Package URI resource by writing the value 9 to the /x/0/7 (Update Result resource) when the URI contained a URI scheme unsupported by the client. Consequently, the LwM2M Client is unable to retrieve the Profile using the URI provided by the LwM2M Server in the Package URI when it refers to an unsupported protocol.'
        - id: 8
          name: Profile Name
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: 0..255
          units: ""
          description: Name of the Profile Package.
        - id: 9
          name: Profile Package Version
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: 0..255
          units: ""
          description: Version of the Profile package.
        - id: 10
          name: Profile Update Protocol Support
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..3
          units: ""
          description: 'This resource indicates what protocols the LwM2M Client implements to retrieve Profiles. The LwM2M server uses this information to decide what URI to include in the Package URI. A LwM2M Server MUST NOT include a URI in the Package URI object that uses a protocol that is unsupported by the LwM2M client. For example, if a LwM2M client indicates that it supports CoAP and CoAPS then a LwM2M Server must not provide an HTTP URI in the Packet URI. The following values are defined by this version of the specification: 0: CoAP (as defined in RFC 7252) with the additional support for block-wise transfer. CoAP is the default setting. 1: CoAPS (as defined in RFC 7252) with the additional support for block-wise transfer 2: HTTP 1.1 (as defined in RFC 7230) 3: HTTPS 1.1 (as defined in RFC 7230) Additional values MAY be defined in the future. Any value not understood by the LwM2M Server MUST be ignored.'
        - id: 11
          name: Profile Update Delivery Method
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..2
          units: ""
          description: 'The LwM2M Client uses this resource toindicate its support for transferring Profileimages to the client either via the PackageResource (=push) or via the Package URIResource (=pull) mechanism.0: Pull only1: Push only2: Both. In this case the LwM2M ServerMAY choose the preferred mechanism forconveying the profile image to theLwM2M Client.'
        - id: 12
          name: Free Memory on SIM
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: KiB
          description: Estimated current available amount of storage space on SIM which can store data and software in the LwM2M Device (expressed in kibibytes).
        - id: 13
          name: Total Memory on SIM
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: KiB
          description: Total amount of storage space which can store data and software in the LwM2M Device.
        - id: 14
          name: Integrated Circuit Card Identifier (ICCID)
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: This Elementary File (EF) provides a unique identification number for the UICC/Smart Cards. Please refer ETSI TS 102.22.1.
        - id: 15
          name: eUICC ID
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: eUICC-ID (a.k.a. EID), see GSMA SGP.02 and GSMA SGP.29 for definitions.
        - id: 16
          name: Profile Type
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Free optional text produced by the SM-DP+ server. This is equivalent to the "Profile Description ID" as described in Annex B of SGP.21.
- Name: nuSIM Profile
  Description1: This device management object contains the elements of a nuSIM profile package according to nuSIM Technical Specification NTS.01.
  Description2: ""
  ObjectID: 507
  ObjectURN: urn:oma:lwm2m:oma:507
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: encP
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: Encrypted nuSIM profile
        - id: 1
          name: mac
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: MAC value of encrypted nuSIM profile
        - id: 2
          name: eKpubDP
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: Ephemeral DP public key
        - id: 3
          name: SigEKpubDP
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: Signature of eKpubDP created with KpubDP
        - id: 4
          name: KpubDP
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: nuSIM DP public key
        - id: 5
          name: SigKpubDP
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: Signature of KpubDP created with KpubCI
        - id: 6
          name: KpubCl
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: nuSIM CI public key
- Name: nuSIM
  Description1: This device management object represents a nuSIM integrated SIM according to NTS.01 - nuSIM Integrated SIM Specification.
  Description2: ""
  ObjectID: 508
  ObjectURN: urn:oma:lwm2m:oma:508
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: EID
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: Contains the unique identifier of the nuSIM.
        - id: 1
          name: ICCID
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: Contains the ICCID of the currently loaded nuSIM profile.
        - id: 2
          name: nuSIM Capabilities
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: Contains the supported nuSIM specification version and optional capabilities of the nuSIM.
        - id: 3
          name: nuSIM Cert
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Contains the individual nuSIM certificate CERT.NUSIM.ECDSA, if available.
        - id: 4
          name: nuSIM Profile
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: Points to an instance of the nuSIM profile object which is to be loaded by executing Load Profile, see Resource 5.
        - id: 5
          name: Load Profile
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: Loads the profile instance referenced in Resource 4 to nuSIM.
        - id: 6
          name: Load Profile Result
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..255
          units: ""
          description: 'Contains the result of the last Load Profile operation: 0=successful, 1=not successful, other values are implementation-specific.'
- Name: CmdhPolicy
  Description1: This Object provides links to a set of rules associated with a specific CSE that governs the behavior of that CSE regarding rejecting, buffering and sending request or response messages via the Mcc reference point.
  Description2: ""
  ObjectID: 2048
  ObjectURN: urn:oma:lwm2m:ext:2048
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: Name
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: Contains the name of a CmdhPolicy Object Instance
        - id: 1
          name: DefaultRule
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: 1 reference to CmdhDefaults ObjectInstance
        - id: 2
          name: LimiRules
          operations: RW
          multipleinstances: Multiple
          mandatory: Mandatory
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: 1 or more references to CmdhLimits Object Instances
        - id: 3
          name: NetworkAccessECRules
          operations: RW
          multipleinstances: Multiple
          mandatory: Mandatory
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: 1 or more references to CmdhNetworkAccessRules Object Instances
        - id: 4
          name: BufferRules
          operations: RW
          multipleinstances: Multiple
          mandatory: Mandatory
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: 1 or more references to CmdhBuffer Object Instances
- Name: ActiveCmdhPolicy
  Description1: This Object provides a link to the currently active set of CMDH policies
  Description2: ""
  ObjectID: 2049
  ObjectURN: urn:oma:lwm2m:ext:2049
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: ActiveLink
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: Contains the reference to the CMDH policies (CmdhPolicy Object Instance) currently active for the associated CSE.
- Name: CmdhDefaults
  Description1: 'Defines which CMDH related parameters will be used by default. '
  Description2: ""
  ObjectID: 2050
  ObjectURN: urn:oma:lwm2m:ext:2050
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: DefaultEcRules
          operations: RW
          multipleinstances: Multiple
          mandatory: Mandatory
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: 1 or more references toCmdhDefEcValue Object Instances containing default values for the ec (event category) parameter of an incoming request or response when this parameter is not indicated in the message itself
        - id: 1
          name: DefaultEcParamRules
          operations: RW
          multipleinstances: Multiple
          mandatory: Mandatory
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: 1 or more references to CmdhEcDefParamValues Object Instances
- Name: CmdhDefEcValues
  Description1: This Object represents default set of values for the Event Category parameter of an incoming request or response message.
  Description2: ""
  ObjectID: 2051
  ObjectURN: urn:oma:lwm2m:ext:2051
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: Order
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Contains an index defining the order of processing this CmdhDefEcValue Object Instance will be handled
        - id: 1
          name: DefEcValue
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: Represents the default Event category value to be applied when the conditions given in this Object Instance are matched
        - id: 2
          name: RequestOrigin
          operations: RW
          multipleinstances: Multiple
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: List of zero or more Local AE-IDs, App-IDs, or the strings "localAE" or "thisCSE"
        - id: 3
          name: RequestContext
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Contains the requestContext information of this Object Instance which needs to be matched
        - id: 4
          name: RequestContextNotification
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Contains true/false flag indicating whether or not notification procedures apply.
        - id: 5
          name: RequestCharacteristics
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Represents conditions pertaining to the request itself, (e.g. the requested Response Type) than needs to be matched
- Name: CmdhEcDefParamValues
  Description1: This Object represents a specific set of default values for the CMDH related parameters Request Expiration Timestamp, Result Expiration Timestamp, Operational Execution Time, Result Persistence and Delivery Aggregation that are applicable for a given Event Category if these parameters are not specified in the message.
  Description2: ""
  ObjectID: 2052
  ObjectURN: urn:oma:lwm2m:ext:2052
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: 'ApplicableEventCategory '
          operations: RW
          multipleinstances: Multiple
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Containslist of Event Category values
        - id: 1
          name: DefaultRequestExpTime
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ms
          description: Contains the default value for the Request Expiration Timestamp parameter when such a parameter is not set in the request
        - id: 2
          name: 'DefaultResultExpTime '
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ms
          description: Contains the default value of the ResultExpiration Timestamp parameter when such a parameter is not set in the request
        - id: 3
          name: DefaultOpExecTime
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ms
          description: Contains the default value of the Operation Execution Time parameter when such a parameter is not set in the request
        - id: 4
          name: 'DefaultRespPersistence '
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ms
          description: Contains the default value of the ResultPersistence parameter when such a parameter is not set in the request
        - id: 5
          name: 'DefaultDelAggregation '
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ms
          description: Contains the default value of the Delivery Aggregationparameter when such a parameter is not set in the request
- Name: CmdhLimits
  Description1: 'This Object represents limits for CMDH related parameter values. '
  Description2: ""
  ObjectID: 2053
  ObjectURN: urn:oma:lwm2m:ext:2053
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: Order
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Contains index indicating in which order the concerned CmdhLimits Object Instance will be treated by the CSE to determine a value for the limit parameters.
        - id: 1
          name: RequestOrigin
          operations: RW
          multipleinstances: Multiple
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: List of zero or more Local AE-IDs, App-IDs, or the strings "localAE" or "thisCSE"
        - id: 2
          name: RequestContext
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Represents the Dynamic Context condition under which CMDH parameter limits defined inside the concerned CmdhLimits Object Instance is applicable.
        - id: 3
          name: RequestContextNotificatio
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Contains true/false flag indicating whether or not notification procedures apply.
        - id: 4
          name: RequestCharacteristics
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Represents conditions pertaining to the request itself, (e.g. the requested Response Type) than needs to be matched
        - id: 5
          name: LimitsEventCategory
          operations: RW
          multipleinstances: Multiple
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Allowed values for the Event Category parameter in a request of any of the Originators indicated in the requestOrigin attribute.
        - id: 6
          name: 'LimitsRequestExpTime '
          operations: RW
          multipleinstances: Multiple
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 2 Instances
          units: ms
          description: 'Defines a range of values for the Request Expiration Time parameter for a request of any Originator indicated in the requestOrigin ResourceInst 0 : minTimeInst 1:maxTime'
        - id: 7
          name: LimitsResultExpTime
          operations: RW
          multipleinstances: Multiple
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 2 Instances
          units: ms
          description: 'Defines a range of values for the Result Expiration Time parameter for a request of any Originator indicated in the requestOrigin ResourceInst 0 : minTimeInst 1:maxTime'
        - id: 8
          name: LimitsOptExpTime
          operations: RW
          multipleinstances: Multiple
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 2 Instances
          units: ms
          description: 'Defines a range of values for the Operation Expiration Time parameter for a request of any Originator indicated in the requestOrigin ResourceInst 0 : minTimeInst 1:maxTime'
        - id: 9
          name: LimitsRespPersistence
          operations: RW
          multipleinstances: Multiple
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 2 Instances
          units: ms
          description: 'Defines a range of values for the Result Persistence parameter for a request of any Originator indicated in the requestOrigin ResourceInst 0 : minTimeInst 1:maxTime'
        - id: 10
          name: LimitsDelAggregation
          operations: RW
          multipleinstances: Multiple
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: Contains the permitted settings of the DeliveryAggregation parameter of request primitives. '0' means 'False' '1' means 'True' '0 1' means 'False' or 'True'
- Name: CmdhNetworkAccessRules
  Description1: This Object defines the usage of underlying networks for forwarding information to other CSEs during processing of CMDH-related requests in a CSE.
  Description2: ""
  ObjectID: 2054
  ObjectURN: urn:oma:lwm2m:ext:2054
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: ApplicableEventCategories
          operations: RW
          multipleinstances: Multiple
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Containsa list of Event Category values
        - id: 1
          name: NetworkAccessRule
          operations: RW
          multipleinstances: Multiple
          mandatory: Optional
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: Contains 0 or more references to CmdhNwAccessRule Object Instances
- Name: CmdhNwAccessRule
  Description1: This Object defines limits in usage of specific underlying networks for forwarding information to other CSEs during processing of CMDH-related requests in a CSE.
  Description2: ""
  ObjectID: 2055
  ObjectURN: urn:oma:lwm2m:ext:2055
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: TargetNetwork
          operations: RW
          multipleinstances: Multiple
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: Contains identifiers of Underlying networks
        - id: 1
          name: SpreadingWaitTime
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ms
          description: Contains a value in ms such that before accessing the underlying network (typically to forward an incoming request), the CSE will wait for an additional amount of time randomly chosen between 0 and this value
        - id: 2
          name: MinReqVolume
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: B
          description: Minimum amount of data that needs to be aggregated before any of the Underlying Networks matching with the targetNetwork Resource of the current Instance of theCmdhNwAccessRule Object can be used for forwarding information to other CSEs.
        - id: 3
          name: BackOffParameters
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: Reference to an Instance of BackOffParameterSet Object defining parameters that define how usage of any of the Underlying Networks matching with the targetNetwork Resourceof that Object Instance, shall be handled when attempts to use such networks have failed.
        - id: 4
          name: OtherConditions
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: List of additional conditions that need to be fulfilled before any of the Underlying Networks matching with the TargetNetwork Resource of this CmdhNwAccessRule Object Instance can be used for forwarding information to other CSEs.
        - id: 5
          name: AllowedSchedule
          operations: RW
          multipleinstances: Multiple
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: Contains time schedules in form of extended crontab syntax defined in oneM2M Protocol TS-0004
- Name: CmdhBuffer
  Description1: This Object defines limits in usage of buffers for temporarily storing information that needs to be forwarded to other CSEs during processing of CMDH-related requests in a CSE.
  Description2: ""
  ObjectID: 2056
  ObjectURN: urn:oma:lwm2m:ext:2056
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: ApplicableEventCategory
          operations: RW
          multipleinstances: Multiple
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Contains a list of event category values
        - id: 1
          name: MaxBufferSize
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: B
          description: Contains the max Buffer size of the CmdhBuffer Object Instance
        - id: 2
          name: StoragePriority
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 1..10
          units: ""
          description: Storage priority for the buffered data associated to that CmdhBuffer Object Instance. t Buffered requests associated with a lower storage priority shall be purged before buffered requests with a higher storage priority.
- Name: CmdhBackOffParametersSet
  Description1: 'This Object defines set of parameters which can be referenced by a specific Instance of the CmdhNwAccessRule Object (ID: 2055)'
  Description2: ""
  ObjectID: 2057
  ObjectURN: urn:oma:lwm2m:ext:2057
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: NetworkAction
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 1..5
          units: ""
          description: Contains specific action actuallyattempted on the network (e.g. cellular-registration)
        - id: 1
          name: InitialBackoffTime
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ms
          description: Regarding the BackOffParameters of a certain CmdhNwAccessRuleObject Instance, this Resource contains the value for the Initial wait time.
        - id: 2
          name: AdditionalBackoffTime
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ms
          description: Regarding the BackOffParameters of a certain CmdhNwAccessRuleObject Instance, this Resource contains the value for an additional wait tme.
        - id: 3
          name: MaximumBackoffTime
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ms
          description: Regarding the BackOffParameters of a certain CmdhNwAccessRuleObject Instance, this Resource contains the value for the maximum wait time
        - id: 4
          name: OptionalRandomBackoffTime
          operations: RW
          multipleinstances: Multiple
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ms
          description: Regarding the BackOffParameters of a certain CmdhNwAccessRuleObject Instance, this Resource contains the value for an optional random wait time.
- Name: Digital Input
  Description1: Generic digital input for non-specific sensors
  Description2: ""
  ObjectID: 3200
  ObjectURN: urn:oma:lwm2m:ext:3200
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5500
          name: Digital Input State
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: The current state of a digital input.
        - id: 5501
          name: Digital Input Counter
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: The cumulative value of active state detected.
        - id: 5502
          name: Digital Input Polarity
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: The polarity of the digital input as a Boolean (False = Normal, True = Reversed).
        - id: 5503
          name: Digital Input Debounce
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ms
          description: The debounce period in ms.
        - id: 5504
          name: Digital Input Edge Selection
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 1..3
          units: ""
          description: The edge selection as an integer (1 = Falling edge, 2 = Rising edge, 3 = Both Rising and Falling edge).
        - id: 5505
          name: Digital Input Counter Reset
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the Counter value.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
        - id: 5751
          name: Sensor Type
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The type of the sensor (for instance PIR type).
- Name: Digital Input
  Description1: Generic digital input for non-specific sensors
  Description2: ""
  ObjectID: 3200
  ObjectURN: urn:oma:lwm2m:ext:3200:1.1
  LWM2MVersion: "1.0"
  ObjectVersion: "1.1"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5500
          name: Digital Input State
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: The current state of a digital input.
        - id: 5501
          name: Digital Input Counter
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: The cumulative value of active state detected.
        - id: 5502
          name: Digital Input Polarity
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: The polarity of the digital input as a Boolean (False = Normal, True = Reversed).
        - id: 5503
          name: Digital Input Debounce
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ms
          description: The debounce period in ms.
        - id: 5504
          name: Digital Input Edge Selection
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 1..3
          units: ""
          description: The edge selection as an integer (1 = Falling edge, 2 = Rising edge, 3 = Both Rising and Falling edge).
        - id: 5505
          name: Digital Input Counter Reset
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the Counter value.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
        - id: 5751
          name: Sensor Type
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The type of the sensor (for instance PIR type).
        - id: 5518
          name: Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: The timestamp of when the measurement was performed.
        - id: 6050
          name: Fractional Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0..1
          units: s
          description: Fractional part of the timestamp when sub-second precision is used (e.g., 0.23 for 230 ms).
- Name: Digital Output
  Description1: Generic digital output for non-specific actuators
  Description2: ""
  ObjectID: 3201
  ObjectURN: urn:oma:lwm2m:ext:3201
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5550
          name: Digital Output State
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: The current state of a digital output.
        - id: 5551
          name: Digital Output Polarity
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: The polarity of the digital output as a Boolean (False = Normal, True = Reversed).
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
- Name: Digital Output
  Description1: Generic digital output for non-specific actuators
  Description2: ""
  ObjectID: 3201
  ObjectURN: urn:oma:lwm2m:ext:3201:1.1
  LWM2MVersion: "1.0"
  ObjectVersion: "1.1"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5550
          name: Digital Output State
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: The current state of a digital output.
        - id: 5551
          name: Digital Output Polarity
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: The polarity of the digital output as a Boolean (False = Normal, True = Reversed).
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
        - id: 5518
          name: Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: The timestamp of when the measurement was performed.
        - id: 6050
          name: Fractional Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0..1
          units: s
          description: Fractional part of the timestamp when sub-second precision is used (e.g., 0.23 for 230 ms).
- Name: Analog Input
  Description1: Generic analog input for non-specific sensors
  Description2: ""
  ObjectID: 3202
  ObjectURN: urn:oma:lwm2m:ext:3202
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5600
          name: Analog Input Current Value
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: ""
          description: The current value of the analog input.
        - id: 5601
          name: Min Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value measured by the sensor since power ON or reset.
        - id: 5602
          name: Max Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value measured by the sensor since power ON or reset.
        - id: 5603
          name: Min Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value that can be measured by the sensor.
        - id: 5604
          name: Max Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value that can be measured by the sensor.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
        - id: 5751
          name: Sensor Type
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The type of the sensor (for instance PIR type).
        - id: 5605
          name: Reset Min and Max Measured Values
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the Min and Max Measured Values to Current Value.
- Name: Analog Input
  Description1: Generic analog input for non-specific sensors
  Description2: ""
  ObjectID: 3202
  ObjectURN: urn:oma:lwm2m:ext:3202:1.1
  LWM2MVersion: "1.0"
  ObjectVersion: "1.1"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5600
          name: Analog Input Current Value
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: ""
          description: The current value of the analog input.
        - id: 5601
          name: Min Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value measured by the sensor since power ON or reset.
        - id: 5602
          name: Max Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value measured by the sensor since power ON or reset.
        - id: 5603
          name: Min Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value that can be measured by the sensor.
        - id: 5604
          name: Max Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value that can be measured by the sensor.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
        - id: 5751
          name: Sensor Type
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The type of the sensor (for instance PIR type).
        - id: 5605
          name: Reset Min and Max Measured Values
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the Min and Max Measured Values to Current Value.
        - id: 5518
          name: Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: The timestamp of when the measurement was performed.
        - id: 6050
          name: Fractional Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0..1
          units: s
          description: Fractional part of the timestamp when sub-second precision is used (e.g., 0.23 for 230 ms).
        - id: 6042
          name: Measurement Quality Indicator
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..23
          units: ""
          description: 'Measurement quality indicator reported by a smart sensor. 0: UNCHECKED No quality checks were done because they do not exist or can not be applied. 1: REJECTED WITH CERTAINTY The measured value is invalid. 2: REJECTED WITH PROBABILITY The measured value is likely invalid. 3: ACCEPTED BUT SUSPICIOUS The measured value is likely OK. 4: ACCEPTED The measured value is OK. 5-15: Reserved for future extensions. 16-23: Vendor specific measurement quality.'
        - id: 6049
          name: Measurement Quality Level
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..100
          units: ""
          description: Measurement quality level reported by a smart sensor. Quality level 100 means that the measurement has fully passed quality check algorithms. Smaller quality levels mean that quality has decreased and the measurement has only partially passed quality check algorithms. The smaller the quality level, the more caution should be used by the application when using the measurement. When the quality level is 0 it means that the measurement should certainly be rejected.
- Name: Analog Output
  Description1: This IPSO object is a generic object that can be used with any kind of analog output interface.
  Description2: ""
  ObjectID: 3203
  ObjectURN: urn:oma:lwm2m:ext:3203
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5650
          name: Analog Output Current Value
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: 0..1
          units: ""
          description: The current value of the analog output.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
        - id: 5603
          name: Min Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value that can be measured by the sensor.
        - id: 5604
          name: Max Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value that can be measured by the sensor.
- Name: Analog Output
  Description1: This IPSO object is a generic object that can be used with any kind of analog output interface.
  Description2: ""
  ObjectID: 3203
  ObjectURN: urn:oma:lwm2m:ext:3203:1.1
  LWM2MVersion: "1.0"
  ObjectVersion: "1.1"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5650
          name: Analog Output Current Value
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: 0..1
          units: ""
          description: The current value of the analog output.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
        - id: 5603
          name: Min Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value that can be measured by the sensor.
        - id: 5604
          name: Max Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value that can be measured by the sensor.
        - id: 5518
          name: Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: The timestamp of when the measurement was performed.
        - id: 6050
          name: Fractional Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0..1
          units: s
          description: Fractional part of the timestamp when sub-second precision is used (e.g., 0.23 for 230 ms).
- Name: Generic Sensor
  Description1: This IPSO object allows the description of a generic sensor. It is based on the description of a value and a unit according to the SenML specification. Thus, any type of value defined within this specification can be reported using this object. This object may be used as a generic object if a dedicated one does not exist.
  Description2: ""
  ObjectID: 3300
  ObjectURN: urn:oma:lwm2m:ext:3300
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5700
          name: Sensor Value
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: ""
          description: Last or Current Measured Value from the Sensor.
        - id: 5701
          name: Sensor Units
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Measurement Units Definition.
        - id: 5601
          name: Min Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value measured by the sensor since power ON or reset.
        - id: 5602
          name: Max Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value measured by the sensor since power ON or reset.
        - id: 5603
          name: Min Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value that can be measured by the sensor.
        - id: 5604
          name: Max Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value that can be measured by the sensor.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
        - id: 5751
          name: Sensor Type
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The type of the sensor (for instance PIR type).
        - id: 5605
          name: Reset Min and Max Measured Values
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the Min and Max Measured Values to Current Value.
- Name: Generic Sensor
  Description1: This IPSO object allows the description of a generic sensor. It is based on the description of a value and a unit according to the SenML specification. Thus, any type of value defined within this specification can be reported using this object. This object may be used as a generic object if a dedicated one does not exist.
  Description2: ""
  ObjectID: 3300
  ObjectURN: urn:oma:lwm2m:ext:3300:1.1
  LWM2MVersion: "1.0"
  ObjectVersion: "1.1"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5700
          name: Sensor Value
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: ""
          description: Last or Current Measured Value from the Sensor.
        - id: 5701
          name: Sensor Units
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Measurement Units Definition.
        - id: 5601
          name: Min Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value measured by the sensor since power ON or reset.
        - id: 5602
          name: Max Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value measured by the sensor since power ON or reset.
        - id: 5603
          name: Min Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value that can be measured by the sensor.
        - id: 5604
          name: Max Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value that can be measured by the sensor.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
        - id: 5751
          name: Sensor Type
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The type of the sensor (for instance PIR type).
        - id: 5605
          name: Reset Min and Max Measured Values
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the Min and Max Measured Values to Current Value.
        - id: 5518
          name: Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: The timestamp of when the measurement was performed.
        - id: 6050
          name: Fractional Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0..1
          units: s
          description: Fractional part of the timestamp when sub-second precision is used (e.g., 0.23 for 230 ms).
        - id: 6042
          name: Measurement Quality Indicator
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..23
          units: ""
          description: 'Measurement quality indicator reported by a smart sensor. 0: UNCHECKED No quality checks were done because they do not exist or can not be applied. 1: REJECTED WITH CERTAINTY The measured value is invalid. 2: REJECTED WITH PROBABILITY The measured value is likely invalid. 3: ACCEPTED BUT SUSPICIOUS The measured value is likely OK. 4: ACCEPTED The measured value is OK. 5-15: Reserved for future extensions. 16-23: Vendor specific measurement quality.'
        - id: 6049
          name: Measurement Quality Level
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..100
          units: ""
          description: Measurement quality level reported by a smart sensor. Quality level 100 means that the measurement has fully passed quality check algorithms. Smaller quality levels mean that quality has decreased and the measurement has only partially passed quality check algorithms. The smaller the quality level, the more caution should be used by the application when using the measurement. When the quality level is 0 it means that the measurement should certainly be rejected.
- Name: Illuminance
  Description1: Illuminance sensor, example units = lx
  Description2: ""
  ObjectID: 3301
  ObjectURN: urn:oma:lwm2m:ext:3301
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5700
          name: Sensor Value
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: ""
          description: Last or Current Measured Value from the Sensor.
        - id: 5601
          name: Min Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value measured by the sensor since power ON or reset.
        - id: 5602
          name: Max Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value measured by the sensor since power ON or reset.
        - id: 5603
          name: Min Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value that can be measured by the sensor.
        - id: 5604
          name: Max Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value that can be measured by the sensor.
        - id: 5605
          name: Reset Min and Max Measured Values
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the Min and Max Measured Values to Current Value.
        - id: 5701
          name: Sensor Units
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Measurement Units Definition.
- Name: Illuminance
  Description1: Illuminance sensor, example units = lx
  Description2: ""
  ObjectID: 3301
  ObjectURN: urn:oma:lwm2m:ext:3301:1.1
  LWM2MVersion: "1.0"
  ObjectVersion: "1.1"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5700
          name: Sensor Value
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: ""
          description: Last or Current Measured Value from the Sensor.
        - id: 5601
          name: Min Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value measured by the sensor since power ON or reset.
        - id: 5602
          name: Max Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value measured by the sensor since power ON or reset.
        - id: 5603
          name: Min Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value that can be measured by the sensor.
        - id: 5604
          name: Max Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value that can be measured by the sensor.
        - id: 5605
          name: Reset Min and Max Measured Values
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the Min and Max Measured Values to Current Value.
        - id: 5701
          name: Sensor Units
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Measurement Units Definition.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
        - id: 5518
          name: Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: The timestamp of when the measurement was performed.
        - id: 6050
          name: Fractional Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0..1
          units: s
          description: Fractional part of the timestamp when sub-second precision is used (e.g., 0.23 for 230 ms).
        - id: 6042
          name: Measurement Quality Indicator
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..23
          units: ""
          description: 'Measurement quality indicator reported by a smart sensor. 0: UNCHECKED No quality checks were done because they do not exist or can not be applied. 1: REJECTED WITH CERTAINTY The measured value is invalid. 2: REJECTED WITH PROBABILITY The measured value is likely invalid. 3: ACCEPTED BUT SUSPICIOUS The measured value is likely OK. 4: ACCEPTED The measured value is OK. 5-15: Reserved for future extensions. 16-23: Vendor specific measurement quality.'
        - id: 6049
          name: Measurement Quality Level
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..100
          units: ""
          description: Measurement quality level reported by a smart sensor. Quality level 100 means that the measurement has fully passed quality check algorithms. Smaller quality levels mean that quality has decreased and the measurement has only partially passed quality check algorithms. The smaller the quality level, the more caution should be used by the application when using the measurement. When the quality level is 0 it means that the measurement should certainly be rejected.
- Name: Presence
  Description1: Presence sensor with digital sensing, optional delay parameters
  Description2: ""
  ObjectID: 3302
  ObjectURN: urn:oma:lwm2m:ext:3302
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5500
          name: Digital Input State
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: The current state of a digital input.
        - id: 5501
          name: Digital Input Counter
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: The cumulative value of active state detected.
        - id: 5505
          name: Digital Input Counter Reset
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the Counter value.
        - id: 5751
          name: Sensor Type
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The type of the sensor (for instance PIR type).
        - id: 5903
          name: Busy to Clear delay
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ms
          description: Delay from the detection state to the clear state in ms.
        - id: 5904
          name: Clear to Busy delay
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ms
          description: Delay from the clear state to the busy state in ms.
- Name: Presence
  Description1: Presence sensor with digital sensing, optional delay parameters
  Description2: ""
  ObjectID: 3302
  ObjectURN: urn:oma:lwm2m:ext:3302:1.1
  LWM2MVersion: "1.0"
  ObjectVersion: "1.1"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5500
          name: Digital Input State
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: The current state of a digital input.
        - id: 5501
          name: Digital Input Counter
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: The cumulative value of active state detected.
        - id: 5505
          name: Digital Input Counter Reset
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the Counter value.
        - id: 5751
          name: Sensor Type
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The type of the sensor (for instance PIR type).
        - id: 5903
          name: Busy to Clear delay
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ms
          description: Delay from the detection state to the clear state in ms.
        - id: 5904
          name: Clear to Busy delay
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ms
          description: Delay from the clear state to the busy state in ms.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
        - id: 5518
          name: Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: The timestamp of when the measurement was performed.
        - id: 6050
          name: Fractional Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0..1
          units: s
          description: Fractional part of the timestamp when sub-second precision is used (e.g., 0.23 for 230 ms).
        - id: 6042
          name: Measurement Quality Indicator
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..23
          units: ""
          description: 'Measurement quality indicator reported by a smart sensor. 0: UNCHECKED No quality checks were done because they do not exist or can not be applied. 1: REJECTED WITH CERTAINTY The measured value is invalid. 2: REJECTED WITH PROBABILITY The measured value is likely invalid. 3: ACCEPTED BUT SUSPICIOUS The measured value is likely OK. 4: ACCEPTED The measured value is OK. 5-15: Reserved for future extensions. 16-23: Vendor specific measurement quality.'
        - id: 6049
          name: Measurement Quality Level
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..100
          units: ""
          description: Measurement quality level reported by a smart sensor. Quality level 100 means that the measurement has fully passed quality check algorithms. Smaller quality levels mean that quality has decreased and the measurement has only partially passed quality check algorithms. The smaller the quality level, the more caution should be used by the application when using the measurement. When the quality level is 0 it means that the measurement should certainly be rejected.
- Name: Temperature
  Description1: This IPSO object should be used with a temperature sensor to report a temperature measurement.  It also provides resources for minimum/maximum measured values and the minimum/maximum range that can be measured by the temperature sensor. An example measurement unit is degrees Celsius.
  Description2: ""
  ObjectID: 3303
  ObjectURN: urn:oma:lwm2m:ext:3303
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5700
          name: Sensor Value
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: ""
          description: Last or Current Measured Value from the Sensor.
        - id: 5601
          name: Min Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value measured by the sensor since power ON or reset.
        - id: 5602
          name: Max Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value measured by the sensor since power ON or reset.
        - id: 5603
          name: Min Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value that can be measured by the sensor.
        - id: 5604
          name: Max Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value that can be measured by the sensor.
        - id: 5701
          name: Sensor Units
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Measurement Units Definition.
        - id: 5605
          name: Reset Min and Max Measured Values
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the Min and Max Measured Values to Current Value.
- Name: Temperature
  Description1: This IPSO object should be used with a temperature sensor to report a temperature measurement.  It also provides resources for minimum/maximum measured values and the minimum/maximum range that can be measured by the temperature sensor. An example measurement unit is degrees Celsius.
  Description2: ""
  ObjectID: 3303
  ObjectURN: urn:oma:lwm2m:ext:3303:1.1
  LWM2MVersion: "1.0"
  ObjectVersion: "1.1"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5700
          name: Sensor Value
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: ""
          description: Last or Current Measured Value from the Sensor.
        - id: 5601
          name: Min Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value measured by the sensor since power ON or reset.
        - id: 5602
          name: Max Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value measured by the sensor since power ON or reset.
        - id: 5603
          name: Min Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value that can be measured by the sensor.
        - id: 5604
          name: Max Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value that can be measured by the sensor.
        - id: 5701
          name: Sensor Units
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Measurement Units Definition.
        - id: 5605
          name: Reset Min and Max Measured Values
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the Min and Max Measured Values to Current Value.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
        - id: 5518
          name: Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: The timestamp of when the measurement was performed.
        - id: 6050
          name: Fractional Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0..1
          units: s
          description: Fractional part of the timestamp when sub-second precision is used (e.g., 0.23 for 230 ms).
        - id: 6042
          name: Measurement Quality Indicator
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..23
          units: ""
          description: 'Measurement quality indicator reported by a smart sensor. 0: UNCHECKED No quality checks were done because they do not exist or can not be applied. 1: REJECTED WITH CERTAINTY The measured value is invalid. 2: REJECTED WITH PROBABILITY The measured value is likely invalid. 3: ACCEPTED BUT SUSPICIOUS The measured value is likely OK. 4: ACCEPTED The measured value is OK. 5-15: Reserved for future extensions. 16-23: Vendor specific measurement quality.'
        - id: 6049
          name: Measurement Quality Level
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..100
          units: ""
          description: Measurement quality level reported by a smart sensor. Quality level 100 means that the measurement has fully passed quality check algorithms. Smaller quality levels mean that quality has decreased and the measurement has only partially passed quality check algorithms. The smaller the quality level, the more caution should be used by the application when using the measurement. When the quality level is 0 it means that the measurement should certainly be rejected.
- Name: Humidity
  Description1: This IPSO object should be used with a humidity sensor to report a humidity measurement.  It also provides resources for minimum/maximum measured values and the minimum/maximum range that can be measured by the humidity sensor. An example measurement unit is relative humidity as a percentage.
  Description2: ""
  ObjectID: 3304
  ObjectURN: urn:oma:lwm2m:ext:3304
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5700
          name: Sensor Value
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: ""
          description: Last or Current Measured Value from the Sensor.
        - id: 5601
          name: Min Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value measured by the sensor since power ON or reset.
        - id: 5602
          name: Max Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value measured by the sensor since power ON or reset.
        - id: 5603
          name: Min Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value that can be measured by the sensor.
        - id: 5604
          name: Max Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value that can be measured by the sensor.
        - id: 5701
          name: Sensor Units
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Measurement Units Definition.
        - id: 5605
          name: Reset Min and Max Measured Values
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the Min and Max Measured Values to Current Value.
- Name: Humidity
  Description1: This IPSO object should be used with a humidity sensor to report a humidity measurement.  It also provides resources for minimum/maximum measured values and the minimum/maximum range that can be measured by the humidity sensor. An example measurement unit is relative humidity as a percentage.
  Description2: ""
  ObjectID: 3304
  ObjectURN: urn:oma:lwm2m:ext:3304:1.1
  LWM2MVersion: "1.0"
  ObjectVersion: "1.1"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5700
          name: Sensor Value
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: ""
          description: Last or Current Measured Value from the Sensor.
        - id: 5601
          name: Min Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value measured by the sensor since power ON or reset.
        - id: 5602
          name: Max Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value measured by the sensor since power ON or reset.
        - id: 5603
          name: Min Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value that can be measured by the sensor.
        - id: 5604
          name: Max Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value that can be measured by the sensor.
        - id: 5701
          name: Sensor Units
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Measurement Units Definition.
        - id: 5605
          name: Reset Min and Max Measured Values
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the Min and Max Measured Values to Current Value.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
        - id: 5518
          name: Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: The timestamp of when the measurement was performed.
        - id: 6050
          name: Fractional Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0..1
          units: s
          description: Fractional part of the timestamp when sub-second precision is used (e.g., 0.23 for 230 ms).
        - id: 6042
          name: Measurement Quality Indicator
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..23
          units: ""
          description: 'Measurement quality indicator reported by a smart sensor. 0: UNCHECKED No quality checks were done because they do not exist or can not be applied. 1: REJECTED WITH CERTAINTY The measured value is invalid. 2: REJECTED WITH PROBABILITY The measured value is likely invalid. 3: ACCEPTED BUT SUSPICIOUS The measured value is likely OK. 4: ACCEPTED The measured value is OK. 5-15: Reserved for future extensions. 16-23: Vendor specific measurement quality.'
        - id: 6049
          name: Measurement Quality Level
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..100
          units: ""
          description: Measurement quality level reported by a smart sensor. Quality level 100 means that the measurement has fully passed quality check algorithms. Smaller quality levels mean that quality has decreased and the measurement has only partially passed quality check algorithms. The smaller the quality level, the more caution should be used by the application when using the measurement. When the quality level is 0 it means that the measurement should certainly be rejected.
- Name: Power Measurement
  Description1: This IPSO object should be used over a power measurement sensor to report a remote power measurement. It also provides resources for minimum/maximum measured values and the minimum/maximum range for both active and reactive power. It also provides resources for cumulative energy, calibration, and the power factor.
  Description2: ""
  ObjectID: 3305
  ObjectURN: urn:oma:lwm2m:ext:3305
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5800
          name: Instantaneous active power
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: W
          description: The current active power.
        - id: 5801
          name: Min Measured active power
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: W
          description: The minimum active power measured by the sensor since it is ON.
        - id: 5802
          name: Max Measured active power
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: W
          description: The maximum active power measured by the sensor since it is ON.
        - id: 5803
          name: Min Range active power
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: W
          description: The minimum active power that can be measured by the sensor.
        - id: 5804
          name: Max Range active power
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: W
          description: The maximum active power that can be measured by the sensor.
        - id: 5805
          name: Cumulative active power
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: Wh
          description: The cumulative active power since the last cumulative energy reset or device start.
        - id: 5806
          name: Active Power Calibration
          operations: W
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: W
          description: Request an active power calibration by writing the value of a calibrated load.
        - id: 5810
          name: Instantaneous reactive power
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: var
          description: The current reactive power.
        - id: 5811
          name: Min Measured reactive power
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: var
          description: The minimum reactive power measured by the sensor since it is ON.
        - id: 5812
          name: Max Measured reactive power
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: var
          description: The maximum reactive power measured by the sensor since it is ON.
        - id: 5813
          name: Min Range reactive power
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: var
          description: The minimum active power that can be measured by the sensor.
        - id: 5814
          name: Max Range reactive power
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: var
          description: The maximum reactive power that can be measured by the sensor.
        - id: 5815
          name: Cumulative reactive power
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: varh
          description: The cumulative reactive power since the last cumulative energy reset or device start.
        - id: 5816
          name: Reactive Power Calibration
          operations: W
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: var
          description: Request a reactive power calibration by writing the value of a calibrated load.
        - id: 5820
          name: Power factor
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: If applicable, the power factor of the current consumption.
        - id: 5821
          name: Current Calibration
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Read or Write the current calibration coefficient.
        - id: 5822
          name: Reset Cumulative energy
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset both cumulative active/reactive power.
        - id: 5605
          name: Reset Min and Max Measured Values
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the Min and Max Measured Values to Current Value.
- Name: Power Measurement
  Description1: This IPSO object should be used over a power measurement sensor to report a remote power measurement. It also provides resources for minimum/maximum measured values and the minimum/maximum range for both active and reactive power. It also provides resources for cumulative energy, calibration, and the power factor.
  Description2: ""
  ObjectID: 3305
  ObjectURN: urn:oma:lwm2m:ext:3305:1.1
  LWM2MVersion: "1.0"
  ObjectVersion: "1.1"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5800
          name: Instantaneous active power
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: W
          description: The current active power.
        - id: 5801
          name: Min Measured active power
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: W
          description: The minimum active power measured by the sensor since it is ON.
        - id: 5802
          name: Max Measured active power
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: W
          description: The maximum active power measured by the sensor since it is ON.
        - id: 5803
          name: Min Range active power
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: W
          description: The minimum active power that can be measured by the sensor.
        - id: 5804
          name: Max Range active power
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: W
          description: The maximum active power that can be measured by the sensor.
        - id: 5805
          name: Cumulative active power
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: Wh
          description: The cumulative active power since the last cumulative energy reset or device start.
        - id: 5806
          name: Active Power Calibration
          operations: W
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: W
          description: Request an active power calibration by writing the value of a calibrated load.
        - id: 5810
          name: Instantaneous reactive power
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: var
          description: The current reactive power.
        - id: 5811
          name: Min Measured reactive power
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: var
          description: The minimum reactive power measured by the sensor since it is ON.
        - id: 5812
          name: Max Measured reactive power
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: var
          description: The maximum reactive power measured by the sensor since it is ON.
        - id: 5813
          name: Min Range reactive power
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: var
          description: The minimum active power that can be measured by the sensor.
        - id: 5814
          name: Max Range reactive power
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: var
          description: The maximum reactive power that can be measured by the sensor.
        - id: 5815
          name: Cumulative reactive power
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: varh
          description: The cumulative reactive power since the last cumulative energy reset or device start.
        - id: 5816
          name: Reactive Power Calibration
          operations: W
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: var
          description: Request a reactive power calibration by writing the value of a calibrated load.
        - id: 5820
          name: Power factor
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: If applicable, the power factor of the current consumption.
        - id: 5821
          name: Current Calibration
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Read or Write the current calibration coefficient.
        - id: 5822
          name: Reset Cumulative energy
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset both cumulative active/reactive power.
        - id: 5605
          name: Reset Min and Max Measured Values
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the Min and Max Measured Values to Current Value.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
        - id: 5518
          name: Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: The timestamp of when the measurement was performed.
        - id: 6050
          name: Fractional Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0..1
          units: s
          description: Fractional part of the timestamp when sub-second precision is used (e.g., 0.23 for 230 ms).
        - id: 6042
          name: Measurement Quality Indicator
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..23
          units: ""
          description: 'Measurement quality indicator reported by a smart sensor. 0: UNCHECKED No quality checks were done because they do not exist or can not be applied. 1: REJECTED WITH CERTAINTY The measured value is invalid. 2: REJECTED WITH PROBABILITY The measured value is likely invalid. 3: ACCEPTED BUT SUSPICIOUS The measured value is likely OK. 4: ACCEPTED The measured value is OK. 5-15: Reserved for future extensions. 16-23: Vendor specific measurement quality.'
        - id: 6049
          name: Measurement Quality Level
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..100
          units: ""
          description: Measurement quality level reported by a smart sensor. Quality level 100 means that the measurement has fully passed quality check algorithms. Smaller quality levels mean that quality has decreased and the measurement has only partially passed quality check algorithms. The smaller the quality level, the more caution should be used by the application when using the measurement. When the quality level is 0 it means that the measurement should certainly be rejected.
- Name: Actuation
  Description1: This IPSO object is dedicated to remote actuation such as ON/OFF action or dimming. A multi-state output can also be described as a string. This is useful to send pilot wire orders for instance. It also provides a resource to reflect the time that the device has been switched on.
  Description2: ""
  ObjectID: 3306
  ObjectURN: urn:oma:lwm2m:ext:3306
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5850
          name: On/Off
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: On/off control. Boolean value where True is On and False is Off.
        - id: 5851
          name: Dimmer
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..100
          units: /100
          description: This resource represents a dimmer setting, which has an Integer value between 0 and 100 as a percentage.
        - id: 5852
          name: On time
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: s
          description: The time in seconds that the device has been on. Writing a value of 0 resets the counter.
        - id: 5853
          name: Multi-state Output
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: A string describing a state for multiple level output such as Pilot Wire.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
- Name: Actuation
  Description1: This IPSO object is dedicated to remote actuation such as ON/OFF action or dimming. A multi-state output can also be described as a string. This is useful to send pilot wire orders for instance. It also provides a resource to reflect the time that the device has been switched on.
  Description2: ""
  ObjectID: 3306
  ObjectURN: urn:oma:lwm2m:ext:3306:1.1
  LWM2MVersion: "1.0"
  ObjectVersion: "1.1"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5850
          name: On/Off
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: On/off control. Boolean value where True is On and False is Off.
        - id: 5851
          name: Dimmer
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..100
          units: /100
          description: This resource represents a dimmer setting, which has an Integer value between 0 and 100 as a percentage.
        - id: 5852
          name: On time
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: s
          description: The time in seconds that the device has been on. Writing a value of 0 resets the counter.
        - id: 5853
          name: Multi-state Output
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: A string describing a state for multiple level output such as Pilot Wire.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
        - id: 5518
          name: Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: The timestamp of when the measurement was performed.
        - id: 6050
          name: Fractional Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0..1
          units: s
          description: Fractional part of the timestamp when sub-second precision is used (e.g., 0.23 for 230 ms).
- Name: Set Point
  Description1: This IPSO object should be used to set a desired value to a controller, such as a thermostat. A special resource is added to set the colour of an object.
  Description2: ""
  ObjectID: 3308
  ObjectURN: urn:oma:lwm2m:ext:3308
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5900
          name: Set Point Value
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: ""
          description: The setpoint value.
        - id: 5701
          name: Sensor Units
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Measurement Units Definition.
        - id: 5706
          name: Colour
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: A string representing a value in some color space.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
- Name: Set Point
  Description1: This IPSO object should be used to set a desired value to a controller, such as a thermostat. A special resource is added to set the colour of an object.
  Description2: ""
  ObjectID: 3308
  ObjectURN: urn:oma:lwm2m:ext:3308:1.1
  LWM2MVersion: "1.0"
  ObjectVersion: "1.1"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5900
          name: Set Point Value
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: ""
          description: The setpoint value.
        - id: 5701
          name: Sensor Units
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Measurement Units Definition.
        - id: 5706
          name: Colour
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: A string representing a value in some color space.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
        - id: 5518
          name: Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: The timestamp of when the measurement was performed.
        - id: 6050
          name: Fractional Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0..1
          units: s
          description: Fractional part of the timestamp when sub-second precision is used (e.g., 0.23 for 230 ms).
- Name: Load Control
  Description1: This Object is used for demand-response load control and other load control in automation application (not limited to power).
  Description2: ""
  ObjectID: 3310
  ObjectURN: urn:oma:lwm2m:ext:3310
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5823
          name: Event Identifier
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: The event identifier as a string.
        - id: 5824
          name: Start Time
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Time
          rangeenumeration: ""
          units: ""
          description: Time when the event started.
        - id: 5825
          name: Duration In Min
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: min
          description: The duration of the event in minutes.
        - id: 5826
          name: Criticality Level
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..3
          units: ""
          description: The criticality of the event. The device receiving the event will react in an appropriate fashion for the device.
        - id: 5827
          name: Avg Load AdjPct
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..100
          units: /100
          description: Defines the maximum energy usage of the receiving device, as a percentage of the device's normal maximum energy usage.
        - id: 5828
          name: Duty Cycle
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..100
          units: /100
          description: Defines the duty cycle for the load control event, i.e, what percentage of time the receiving device is allowed to be on.
- Name: Load Control
  Description1: This Object is used for demand-response load control and other load control in automation application (not limited to power).
  Description2: ""
  ObjectID: 3310
  ObjectURN: urn:oma:lwm2m:ext:3310:1.1
  LWM2MVersion: "1.0"
  ObjectVersion: "1.1"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5823
          name: Event Identifier
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: The event identifier as a string.
        - id: 5824
          name: Start Time
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Time
          rangeenumeration: ""
          units: ""
          description: Time when the event started.
        - id: 5825
          name: Duration In Min
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: min
          description: The duration of the event in minutes.
        - id: 5826
          name: Criticality Level
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..3
          units: ""
          description: The criticality of the event. The device receiving the event will react in an appropriate fashion for the device.
        - id: 5827
          name: Avg Load AdjPct
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..100
          units: /100
          description: Defines the maximum energy usage of the receiving device, as a percentage of the device's normal maximum energy usage.
        - id: 5828
          name: Duty Cycle
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..100
          units: /100
          description: Defines the duty cycle for the load control event, i.e, what percentage of time the receiving device is allowed to be on.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
        - id: 5518
          name: Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: The timestamp of when the measurement was performed.
        - id: 6050
          name: Fractional Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0..1
          units: s
          description: Fractional part of the timestamp when sub-second precision is used (e.g., 0.23 for 230 ms).
- Name: Light Control
  Description1: This Object is used to control a light source, such as a LED or other light.  It allows a light to be turned on or off and its dimmer setting to be control as a % between 0 and 100. An optional colour setting enables a string to be used to indicate the desired colour.
  Description2: ""
  ObjectID: 3311
  ObjectURN: urn:oma:lwm2m:ext:3311
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5850
          name: On/Off
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: On/off control. Boolean value where True is On and False is Off.
        - id: 5851
          name: Dimmer
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..100
          units: /100
          description: This resource represents a dimmer setting, which has an Integer value between 0 and 100 as a percentage.
        - id: 5852
          name: On time
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: s
          description: The time in seconds that the device has been on. Writing a value of 0 resets the counter.
        - id: 5805
          name: Cumulative active power
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: Wh
          description: The cumulative active power since the last cumulative energy reset or device start.
        - id: 5820
          name: Power factor
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: If applicable, the power factor of the current consumption.
        - id: 5706
          name: Colour
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: A string representing a value in some color space.
        - id: 5701
          name: Sensor Units
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Measurement Units Definition.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
- Name: Power Control
  Description1: This Object is used to control a power source, such as a Smart Plug.  It allows a power relay to be turned on or off and its dimmer setting to be control as a % between 0 and 100.
  Description2: ""
  ObjectID: 3312
  ObjectURN: urn:oma:lwm2m:ext:3312
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5850
          name: On/Off
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: On/off control. Boolean value where True is On and False is Off.
        - id: 5851
          name: Dimmer
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..100
          units: /100
          description: This resource represents a dimmer setting, which has an Integer value between 0 and 100 as a percentage.
        - id: 5852
          name: On time
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: s
          description: The time in seconds that the device has been on. Writing a value of 0 resets the counter.
        - id: 5805
          name: Cumulative active power
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: Wh
          description: The cumulative active power since the last cumulative energy reset or device start.
        - id: 5820
          name: Power factor
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: If applicable, the power factor of the current consumption.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
- Name: Power Control
  Description1: This Object is used to control a power source, such as a Smart Plug.  It allows a power relay to be turned on or off and its dimmer setting to be control as a % between 0 and 100.
  Description2: ""
  ObjectID: 3312
  ObjectURN: urn:oma:lwm2m:ext:3312:1.1
  LWM2MVersion: "1.0"
  ObjectVersion: "1.1"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5850
          name: On/Off
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: On/off control. Boolean value where True is On and False is Off.
        - id: 5851
          name: Dimmer
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..100
          units: /100
          description: This resource represents a dimmer setting, which has an Integer value between 0 and 100 as a percentage.
        - id: 5852
          name: On time
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: s
          description: The time in seconds that the device has been on. Writing a value of 0 resets the counter.
        - id: 5805
          name: Cumulative active power
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: Wh
          description: The cumulative active power since the last cumulative energy reset or device start.
        - id: 5820
          name: Power factor
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: If applicable, the power factor of the current consumption.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
        - id: 5518
          name: Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: The timestamp of when the measurement was performed.
        - id: 6050
          name: Fractional Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0..1
          units: s
          description: Fractional part of the timestamp when sub-second precision is used (e.g., 0.23 for 230 ms).
- Name: Accelerometer
  Description1: This IPSO object can be used to represent a 1-3 axis accelerometer.
  Description2: ""
  ObjectID: 3313
  ObjectURN: urn:oma:lwm2m:ext:3313
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5702
          name: X Value
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: ""
          description: The measured value along the X axis.
        - id: 5703
          name: Y Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The measured value along the Y axis.
        - id: 5704
          name: Z Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The measured value along the Z axis.
        - id: 5701
          name: Sensor Units
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Measurement Units Definition.
        - id: 5603
          name: Min Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value that can be measured by the sensor.
        - id: 5604
          name: Max Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value that can be measured by the sensor.
- Name: Accelerometer
  Description1: This IPSO object can be used to represent a 1-3 axis accelerometer.
  Description2: ""
  ObjectID: 3313
  ObjectURN: urn:oma:lwm2m:ext:3313:1.1
  LWM2MVersion: "1.0"
  ObjectVersion: "1.1"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5702
          name: X Value
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: ""
          description: The measured value along the X axis.
        - id: 5703
          name: Y Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The measured value along the Y axis.
        - id: 5704
          name: Z Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The measured value along the Z axis.
        - id: 5701
          name: Sensor Units
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Measurement Units Definition.
        - id: 5603
          name: Min Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value that can be measured by the sensor.
        - id: 5604
          name: Max Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value that can be measured by the sensor.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
        - id: 5518
          name: Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: The timestamp of when the measurement was performed.
        - id: 6050
          name: Fractional Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0..1
          units: s
          description: Fractional part of the timestamp when sub-second precision is used (e.g., 0.23 for 230 ms).
        - id: 6042
          name: Measurement Quality Indicator
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..23
          units: ""
          description: 'Measurement quality indicator reported by a smart sensor. 0: UNCHECKED No quality checks were done because they do not exist or can not be applied. 1: REJECTED WITH CERTAINTY The measured value is invalid. 2: REJECTED WITH PROBABILITY The measured value is likely invalid. 3: ACCEPTED BUT SUSPICIOUS The measured value is likely OK. 4: ACCEPTED The measured value is OK. 5-15: Reserved for future extensions. 16-23: Vendor specific measurement quality.'
        - id: 6049
          name: Measurement Quality Level
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..100
          units: ""
          description: Measurement quality level reported by a smart sensor. Quality level 100 means that the measurement has fully passed quality check algorithms. Smaller quality levels mean that quality has decreased and the measurement has only partially passed quality check algorithms. The smaller the quality level, the more caution should be used by the application when using the measurement. When the quality level is 0 it means that the measurement should certainly be rejected.
- Name: Magnetometer
  Description1: This IPSO object can be used to represent a 1-3 axis magnetometer with optional compass direction.
  Description2: ""
  ObjectID: 3314
  ObjectURN: urn:oma:lwm2m:ext:3314
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5702
          name: X Value
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: ""
          description: The measured value along the X axis.
        - id: 5703
          name: Y Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The measured value along the Y axis.
        - id: 5704
          name: Z Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The measured value along the Z axis.
        - id: 5705
          name: Compass Direction
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0..360
          units: deg
          description: The measured compass direction.
        - id: 5701
          name: Sensor Units
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Measurement Units Definition.
- Name: Magnetometer
  Description1: This IPSO object can be used to represent a 1-3 axis magnetometer with optional compass direction.
  Description2: ""
  ObjectID: 3314
  ObjectURN: urn:oma:lwm2m:ext:3314:1.1
  LWM2MVersion: "1.0"
  ObjectVersion: "1.1"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5702
          name: X Value
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: ""
          description: The measured value along the X axis.
        - id: 5703
          name: Y Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The measured value along the Y axis.
        - id: 5704
          name: Z Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The measured value along the Z axis.
        - id: 5705
          name: Compass Direction
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0..360
          units: deg
          description: The measured compass direction.
        - id: 5701
          name: Sensor Units
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Measurement Units Definition.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
        - id: 5518
          name: Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: The timestamp of when the measurement was performed.
        - id: 6050
          name: Fractional Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0..1
          units: s
          description: Fractional part of the timestamp when sub-second precision is used (e.g., 0.23 for 230 ms).
        - id: 6042
          name: Measurement Quality Indicator
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..23
          units: ""
          description: 'Measurement quality indicator reported by a smart sensor. 0: UNCHECKED No quality checks were done because they do not exist or can not be applied. 1: REJECTED WITH CERTAINTY The measured value is invalid. 2: REJECTED WITH PROBABILITY The measured value is likely invalid. 3: ACCEPTED BUT SUSPICIOUS The measured value is likely OK. 4: ACCEPTED The measured value is OK. 5-15: Reserved for future extensions. 16-23: Vendor specific measurement quality.'
        - id: 6049
          name: Measurement Quality Level
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..100
          units: ""
          description: Measurement quality level reported by a smart sensor. Quality level 100 means that the measurement has fully passed quality check algorithms. Smaller quality levels mean that quality has decreased and the measurement has only partially passed quality check algorithms. The smaller the quality level, the more caution should be used by the application when using the measurement. When the quality level is 0 it means that the measurement should certainly be rejected.
- Name: Barometer
  Description1: This IPSO object should be used with an air pressure sensor to report a barometer measurement.  It also provides resources for minimum/maximum measured values and the minimum/maximum range that can be measured by the barometer sensor. An example measurement unit is pascals.
  Description2: ""
  ObjectID: 3315
  ObjectURN: urn:oma:lwm2m:ext:3315
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5700
          name: Sensor Value
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: ""
          description: Last or Current Measured Value from the Sensor.
        - id: 5601
          name: Min Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value measured by the sensor since power ON or reset.
        - id: 5602
          name: Max Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value measured by the sensor since power ON or reset.
        - id: 5603
          name: Min Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value that can be measured by the sensor.
        - id: 5604
          name: Max Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value that can be measured by the sensor.
        - id: 5701
          name: Sensor Units
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Measurement Units Definition.
        - id: 5605
          name: Reset Min and Max Measured Values
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the Min and Max Measured Values to Current Value.
- Name: Barometer
  Description1: This IPSO object should be used with an air pressure sensor to report a barometer measurement.  It also provides resources for minimum/maximum measured values and the minimum/maximum range that can be measured by the barometer sensor. An example measurement unit is pascals.
  Description2: ""
  ObjectID: 3315
  ObjectURN: urn:oma:lwm2m:ext:3315:1.1
  LWM2MVersion: "1.0"
  ObjectVersion: "1.1"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5700
          name: Sensor Value
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: ""
          description: Last or Current Measured Value from the Sensor.
        - id: 5601
          name: Min Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value measured by the sensor since power ON or reset.
        - id: 5602
          name: Max Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value measured by the sensor since power ON or reset.
        - id: 5603
          name: Min Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value that can be measured by the sensor.
        - id: 5604
          name: Max Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value that can be measured by the sensor.
        - id: 5701
          name: Sensor Units
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Measurement Units Definition.
        - id: 5605
          name: Reset Min and Max Measured Values
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the Min and Max Measured Values to Current Value.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
        - id: 5518
          name: Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: The timestamp of when the measurement was performed.
        - id: 6050
          name: Fractional Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0..1
          units: s
          description: Fractional part of the timestamp when sub-second precision is used (e.g., 0.23 for 230 ms).
        - id: 6042
          name: Measurement Quality Indicator
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..23
          units: ""
          description: 'Measurement quality indicator reported by a smart sensor. 0: UNCHECKED No quality checks were done because they do not exist or can not be applied. 1: REJECTED WITH CERTAINTY The measured value is invalid. 2: REJECTED WITH PROBABILITY The measured value is likely invalid. 3: ACCEPTED BUT SUSPICIOUS The measured value is likely OK. 4: ACCEPTED The measured value is OK. 5-15: Reserved for future extensions. 16-23: Vendor specific measurement quality.'
        - id: 6049
          name: Measurement Quality Level
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..100
          units: ""
          description: Measurement quality level reported by a smart sensor. Quality level 100 means that the measurement has fully passed quality check algorithms. Smaller quality levels mean that quality has decreased and the measurement has only partially passed quality check algorithms. The smaller the quality level, the more caution should be used by the application when using the measurement. When the quality level is 0 it means that the measurement should certainly be rejected.
- Name: Voltage
  Description1: "This IPSO object should be used with voltmeter sensor to report measured voltage between two points.  It also provides resources for minimum and maximum measured values, as well as the minimum and maximum range that can be measured by the sensor. An example measurement unit is volts.\n        "
  Description2: ""
  ObjectID: 3316
  ObjectURN: urn:oma:lwm2m:ext:3316
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5700
          name: Sensor Value
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: ""
          description: Last or Current Measured Value from the Sensor.
        - id: 5701
          name: Sensor Units
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Measurement Units Definition.
        - id: 5601
          name: Min Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value measured by the sensor since power ON or reset.
        - id: 5602
          name: Max Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value measured by the sensor since power ON or reset.
        - id: 5603
          name: Min Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value that can be measured by the sensor.
        - id: 5604
          name: Max Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value that can be measured by the sensor.
        - id: 5605
          name: Reset Min and Max Measured Values
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the Min and Max Measured Values to Current Value.
        - id: 5821
          name: Current Calibration
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Read or Write the current calibration coefficient.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
- Name: Voltage
  Description1: "This IPSO object should be used with voltmeter sensor to report measured voltage between two points.  It also provides resources for minimum and maximum measured values, as well as the minimum and maximum range that can be measured by the sensor. An example measurement unit is volts.\n        "
  Description2: ""
  ObjectID: 3316
  ObjectURN: urn:oma:lwm2m:ext:3316:1.1
  LWM2MVersion: "1.0"
  ObjectVersion: "1.1"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5700
          name: Sensor Value
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: ""
          description: Last or Current Measured Value from the Sensor.
        - id: 5701
          name: Sensor Units
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Measurement Units Definition.
        - id: 5601
          name: Min Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value measured by the sensor since power ON or reset.
        - id: 5602
          name: Max Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value measured by the sensor since power ON or reset.
        - id: 5603
          name: Min Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value that can be measured by the sensor.
        - id: 5604
          name: Max Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value that can be measured by the sensor.
        - id: 5605
          name: Reset Min and Max Measured Values
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the Min and Max Measured Values to Current Value.
        - id: 5821
          name: Current Calibration
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Read or Write the current calibration coefficient.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
        - id: 5518
          name: Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: The timestamp of when the measurement was performed.
        - id: 6050
          name: Fractional Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0..1
          units: s
          description: Fractional part of the timestamp when sub-second precision is used (e.g., 0.23 for 230 ms).
        - id: 6042
          name: Measurement Quality Indicator
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..23
          units: ""
          description: 'Measurement quality indicator reported by a smart sensor. 0: UNCHECKED No quality checks were done because they do not exist or can not be applied. 1: REJECTED WITH CERTAINTY The measured value is invalid. 2: REJECTED WITH PROBABILITY The measured value is likely invalid. 3: ACCEPTED BUT SUSPICIOUS The measured value is likely OK. 4: ACCEPTED The measured value is OK. 5-15: Reserved for future extensions. 16-23: Vendor specific measurement quality.'
        - id: 6049
          name: Measurement Quality Level
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..100
          units: ""
          description: Measurement quality level reported by a smart sensor. Quality level 100 means that the measurement has fully passed quality check algorithms. Smaller quality levels mean that quality has decreased and the measurement has only partially passed quality check algorithms. The smaller the quality level, the more caution should be used by the application when using the measurement. When the quality level is 0 it means that the measurement should certainly be rejected.
- Name: Current
  Description1: "This IPSO object should be used with an ammeter to report measured electric current in amperes. It also provides resources for minimum and maximum measured values, as well as the minimum and maximum range that can be measured by the sensor. An example measurement unit is ampere.\n        "
  Description2: ""
  ObjectID: 3317
  ObjectURN: urn:oma:lwm2m:ext:3317
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5700
          name: Sensor Value
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: ""
          description: Last or Current Measured Value from the Sensor.
        - id: 5701
          name: Sensor Units
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Measurement Units Definition.
        - id: 5601
          name: Min Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value measured by the sensor since power ON or reset.
        - id: 5602
          name: Max Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value measured by the sensor since power ON or reset.
        - id: 5603
          name: Min Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value that can be measured by the sensor.
        - id: 5604
          name: Max Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value that can be measured by the sensor.
        - id: 5605
          name: Reset Min and Max Measured Values
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the Min and Max Measured Values to Current Value.
        - id: 5821
          name: Current Calibration
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Read or Write the current calibration coefficient.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
- Name: Current
  Description1: "This IPSO object should be used with an ammeter to report measured electric current in amperes. It also provides resources for minimum and maximum measured values, as well as the minimum and maximum range that can be measured by the sensor. An example measurement unit is ampere.\n        "
  Description2: ""
  ObjectID: 3317
  ObjectURN: urn:oma:lwm2m:ext:3317:1.1
  LWM2MVersion: "1.0"
  ObjectVersion: "1.1"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5700
          name: Sensor Value
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: ""
          description: Last or Current Measured Value from the Sensor.
        - id: 5701
          name: Sensor Units
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Measurement Units Definition.
        - id: 5601
          name: Min Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value measured by the sensor since power ON or reset.
        - id: 5602
          name: Max Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value measured by the sensor since power ON or reset.
        - id: 5603
          name: Min Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value that can be measured by the sensor.
        - id: 5604
          name: Max Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value that can be measured by the sensor.
        - id: 5605
          name: Reset Min and Max Measured Values
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the Min and Max Measured Values to Current Value.
        - id: 5821
          name: Current Calibration
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Read or Write the current calibration coefficient.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
        - id: 5518
          name: Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: The timestamp of when the measurement was performed.
        - id: 6050
          name: Fractional Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0..1
          units: s
          description: Fractional part of the timestamp when sub-second precision is used (e.g., 0.23 for 230 ms).
        - id: 6042
          name: Measurement Quality Indicator
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..23
          units: ""
          description: 'Measurement quality indicator reported by a smart sensor. 0: UNCHECKED No quality checks were done because they do not exist or can not be applied. 1: REJECTED WITH CERTAINTY The measured value is invalid. 2: REJECTED WITH PROBABILITY The measured value is likely invalid. 3: ACCEPTED BUT SUSPICIOUS The measured value is likely OK. 4: ACCEPTED The measured value is OK. 5-15: Reserved for future extensions. 16-23: Vendor specific measurement quality.'
        - id: 6049
          name: Measurement Quality Level
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..100
          units: ""
          description: Measurement quality level reported by a smart sensor. Quality level 100 means that the measurement has fully passed quality check algorithms. Smaller quality levels mean that quality has decreased and the measurement has only partially passed quality check algorithms. The smaller the quality level, the more caution should be used by the application when using the measurement. When the quality level is 0 it means that the measurement should certainly be rejected.
- Name: Frequency
  Description1: "This IPSO object should be used to report frequency measurements. It also provides resources for minimum and maximum measured values, as well as the minimum and maximum range that can be measured by the sensor. An example measurement unit is hertz.\n        "
  Description2: ""
  ObjectID: 3318
  ObjectURN: urn:oma:lwm2m:ext:3318
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5700
          name: Sensor Value
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: ""
          description: Last or Current Measured Value from the Sensor.
        - id: 5701
          name: Sensor Units
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Measurement Units Definition.
        - id: 5601
          name: Min Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value measured by the sensor since power ON or reset.
        - id: 5602
          name: Max Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value measured by the sensor since power ON or reset.
        - id: 5603
          name: Min Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value that can be measured by the sensor.
        - id: 5604
          name: Max Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value that can be measured by the sensor.
        - id: 5605
          name: Reset Min and Max Measured Values
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the Min and Max Measured Values to Current Value.
        - id: 5821
          name: Current Calibration
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Read or Write the current calibration coefficient.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
- Name: Frequency
  Description1: "This IPSO object should be used to report frequency measurements. It also provides resources for minimum and maximum measured values, as well as the minimum and maximum range that can be measured by the sensor. An example measurement unit is hertz.\n        "
  Description2: ""
  ObjectID: 3318
  ObjectURN: urn:oma:lwm2m:ext:3318:1.1
  LWM2MVersion: "1.0"
  ObjectVersion: "1.1"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5700
          name: Sensor Value
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: ""
          description: Last or Current Measured Value from the Sensor.
        - id: 5701
          name: Sensor Units
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Measurement Units Definition.
        - id: 5601
          name: Min Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value measured by the sensor since power ON or reset.
        - id: 5602
          name: Max Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value measured by the sensor since power ON or reset.
        - id: 5603
          name: Min Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value that can be measured by the sensor.
        - id: 5604
          name: Max Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value that can be measured by the sensor.
        - id: 5605
          name: Reset Min and Max Measured Values
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the Min and Max Measured Values to Current Value.
        - id: 5821
          name: Current Calibration
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Read or Write the current calibration coefficient.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
        - id: 5518
          name: Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: The timestamp of when the measurement was performed.
        - id: 6050
          name: Fractional Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0..1
          units: s
          description: Fractional part of the timestamp when sub-second precision is used (e.g., 0.23 for 230 ms).
        - id: 6042
          name: Measurement Quality Indicator
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..23
          units: ""
          description: 'Measurement quality indicator reported by a smart sensor. 0: UNCHECKED No quality checks were done because they do not exist or can not be applied. 1: REJECTED WITH CERTAINTY The measured value is invalid. 2: REJECTED WITH PROBABILITY The measured value is likely invalid. 3: ACCEPTED BUT SUSPICIOUS The measured value is likely OK. 4: ACCEPTED The measured value is OK. 5-15: Reserved for future extensions. 16-23: Vendor specific measurement quality.'
        - id: 6049
          name: Measurement Quality Level
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..100
          units: ""
          description: Measurement quality level reported by a smart sensor. Quality level 100 means that the measurement has fully passed quality check algorithms. Smaller quality levels mean that quality has decreased and the measurement has only partially passed quality check algorithms. The smaller the quality level, the more caution should be used by the application when using the measurement. When the quality level is 0 it means that the measurement should certainly be rejected.
- Name: Depth
  Description1: "This IPSO object should be used to report depth measurements. It can, for example, be used to describe a generic rain gauge that measures the accumulated rainfall in millimetres (mm).\n        "
  Description2: ""
  ObjectID: 3319
  ObjectURN: urn:oma:lwm2m:ext:3319
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5700
          name: Sensor Value
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: ""
          description: Last or Current Measured Value from the Sensor.
        - id: 5701
          name: Sensor Units
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Measurement Units Definition.
        - id: 5601
          name: Min Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value measured by the sensor since power ON or reset.
        - id: 5602
          name: Max Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value measured by the sensor since power ON or reset.
        - id: 5603
          name: Min Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value that can be measured by the sensor.
        - id: 5604
          name: Max Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value that can be measured by the sensor.
        - id: 5605
          name: Reset Min and Max Measured Values
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the Min and Max Measured Values to Current Value.
        - id: 5821
          name: Current Calibration
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Read or Write the current calibration coefficient.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
- Name: Depth
  Description1: "This IPSO object should be used to report depth measurements. It can, for example, be used to describe a generic rain gauge that measures the accumulated rainfall in millimetres (mm).\n        "
  Description2: ""
  ObjectID: 3319
  ObjectURN: urn:oma:lwm2m:ext:3319:1.1
  LWM2MVersion: "1.0"
  ObjectVersion: "1.1"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5700
          name: Sensor Value
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: ""
          description: Last or Current Measured Value from the Sensor.
        - id: 5701
          name: Sensor Units
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Measurement Units Definition.
        - id: 5601
          name: Min Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value measured by the sensor since power ON or reset.
        - id: 5602
          name: Max Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value measured by the sensor since power ON or reset.
        - id: 5603
          name: Min Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value that can be measured by the sensor.
        - id: 5604
          name: Max Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value that can be measured by the sensor.
        - id: 5605
          name: Reset Min and Max Measured Values
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the Min and Max Measured Values to Current Value.
        - id: 5821
          name: Current Calibration
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Read or Write the current calibration coefficient.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
        - id: 5518
          name: Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: The timestamp of when the measurement was performed.
        - id: 6050
          name: Fractional Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0..1
          units: s
          description: Fractional part of the timestamp when sub-second precision is used (e.g., 0.23 for 230 ms).
        - id: 6042
          name: Measurement Quality Indicator
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..23
          units: ""
          description: 'Measurement quality indicator reported by a smart sensor. 0: UNCHECKED No quality checks were done because they do not exist or can not be applied. 1: REJECTED WITH CERTAINTY The measured value is invalid. 2: REJECTED WITH PROBABILITY The measured value is likely invalid. 3: ACCEPTED BUT SUSPICIOUS The measured value is likely OK. 4: ACCEPTED The measured value is OK. 5-15: Reserved for future extensions. 16-23: Vendor specific measurement quality.'
        - id: 6049
          name: Measurement Quality Level
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..100
          units: ""
          description: Measurement quality level reported by a smart sensor. Quality level 100 means that the measurement has fully passed quality check algorithms. Smaller quality levels mean that quality has decreased and the measurement has only partially passed quality check algorithms. The smaller the quality level, the more caution should be used by the application when using the measurement. When the quality level is 0 it means that the measurement should certainly be rejected.
- Name: Percentage
  Description1: "This IPSO object should can be used to report measurements relative to a 0-100% scale. For example it could be used to measure the level of a liquid in a vessel or container in units of %.\n        "
  Description2: ""
  ObjectID: 3320
  ObjectURN: urn:oma:lwm2m:ext:3320
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5700
          name: Sensor Value
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: ""
          description: Last or Current Measured Value from the Sensor.
        - id: 5701
          name: Sensor Units
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Measurement Units Definition.
        - id: 5601
          name: Min Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value measured by the sensor since power ON or reset.
        - id: 5602
          name: Max Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value measured by the sensor since power ON or reset.
        - id: 5603
          name: Min Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value that can be measured by the sensor.
        - id: 5604
          name: Max Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value that can be measured by the sensor.
        - id: 5605
          name: Reset Min and Max Measured Values
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the Min and Max Measured Values to Current Value.
        - id: 5821
          name: Current Calibration
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Read or Write the current calibration coefficient.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
- Name: Percentage
  Description1: "This IPSO object should can be used to report measurements relative to a 0-100% scale. For example it could be used to measure the level of a liquid in a vessel or container in units of %.\n        "
  Description2: ""
  ObjectID: 3320
  ObjectURN: urn:oma:lwm2m:ext:3320:1.1
  LWM2MVersion: "1.0"
  ObjectVersion: "1.1"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5700
          name: Sensor Value
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: ""
          description: Last or Current Measured Value from the Sensor.
        - id: 5701
          name: Sensor Units
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Measurement Units Definition.
        - id: 5601
          name: Min Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value measured by the sensor since power ON or reset.
        - id: 5602
          name: Max Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value measured by the sensor since power ON or reset.
        - id: 5603
          name: Min Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value that can be measured by the sensor.
        - id: 5604
          name: Max Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value that can be measured by the sensor.
        - id: 5605
          name: Reset Min and Max Measured Values
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the Min and Max Measured Values to Current Value.
        - id: 5821
          name: Current Calibration
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Read or Write the current calibration coefficient.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
        - id: 5518
          name: Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: The timestamp of when the measurement was performed.
        - id: 6050
          name: Fractional Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0..1
          units: s
          description: Fractional part of the timestamp when sub-second precision is used (e.g., 0.23 for 230 ms).
        - id: 6042
          name: Measurement Quality Indicator
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..23
          units: ""
          description: 'Measurement quality indicator reported by a smart sensor. 0: UNCHECKED No quality checks were done because they do not exist or can not be applied. 1: REJECTED WITH CERTAINTY The measured value is invalid. 2: REJECTED WITH PROBABILITY The measured value is likely invalid. 3: ACCEPTED BUT SUSPICIOUS The measured value is likely OK. 4: ACCEPTED The measured value is OK. 5-15: Reserved for future extensions. 16-23: Vendor specific measurement quality.'
        - id: 6049
          name: Measurement Quality Level
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..100
          units: ""
          description: Measurement quality level reported by a smart sensor. Quality level 100 means that the measurement has fully passed quality check algorithms. Smaller quality levels mean that quality has decreased and the measurement has only partially passed quality check algorithms. The smaller the quality level, the more caution should be used by the application when using the measurement. When the quality level is 0 it means that the measurement should certainly be rejected.
- Name: Altitude
  Description1: "This IPSO object should be used with an altitude sensor to report altitude above sea level in meters. Note that Altitude can be calculated from the measured pressure given the local sea level pressure.  It also provides resources for minimum and maximum measured values, as well as the minimum and maximum range that can be measured by the sensor. An example measurement unit is meters.\n        "
  Description2: ""
  ObjectID: 3321
  ObjectURN: urn:oma:lwm2m:ext:3321
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5700
          name: Sensor Value
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: ""
          description: Last or Current Measured Value from the Sensor.
        - id: 5701
          name: Sensor Units
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Measurement Units Definition.
        - id: 5601
          name: Min Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value measured by the sensor since power ON or reset.
        - id: 5602
          name: Max Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value measured by the sensor since power ON or reset.
        - id: 5603
          name: Min Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value that can be measured by the sensor.
        - id: 5604
          name: Max Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value that can be measured by the sensor.
        - id: 5605
          name: Reset Min and Max Measured Values
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the Min and Max Measured Values to Current Value.
        - id: 5821
          name: Current Calibration
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Read or Write the current calibration coefficient.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
- Name: Altitude
  Description1: "This IPSO object should be used with an altitude sensor to report altitude above sea level in meters. Note that Altitude can be calculated from the measured pressure given the local sea level pressure.  It also provides resources for minimum and maximum measured values, as well as the minimum and maximum range that can be measured by the sensor. An example measurement unit is meters.\n        "
  Description2: ""
  ObjectID: 3321
  ObjectURN: urn:oma:lwm2m:ext:3321:1.1
  LWM2MVersion: "1.0"
  ObjectVersion: "1.1"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5700
          name: Sensor Value
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: ""
          description: Last or Current Measured Value from the Sensor.
        - id: 5701
          name: Sensor Units
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Measurement Units Definition.
        - id: 5601
          name: Min Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value measured by the sensor since power ON or reset.
        - id: 5602
          name: Max Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value measured by the sensor since power ON or reset.
        - id: 5603
          name: Min Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value that can be measured by the sensor.
        - id: 5604
          name: Max Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value that can be measured by the sensor.
        - id: 5605
          name: Reset Min and Max Measured Values
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the Min and Max Measured Values to Current Value.
        - id: 5821
          name: Current Calibration
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Read or Write the current calibration coefficient.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
        - id: 5518
          name: Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: The timestamp of when the measurement was performed.
        - id: 6050
          name: Fractional Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0..1
          units: s
          description: Fractional part of the timestamp when sub-second precision is used (e.g., 0.23 for 230 ms).
        - id: 6042
          name: Measurement Quality Indicator
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..23
          units: ""
          description: 'Measurement quality indicator reported by a smart sensor. 0: UNCHECKED No quality checks were done because they do not exist or can not be applied. 1: REJECTED WITH CERTAINTY The measured value is invalid. 2: REJECTED WITH PROBABILITY The measured value is likely invalid. 3: ACCEPTED BUT SUSPICIOUS The measured value is likely OK. 4: ACCEPTED The measured value is OK. 5-15: Reserved for future extensions. 16-23: Vendor specific measurement quality.'
        - id: 6049
          name: Measurement Quality Level
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..100
          units: ""
          description: Measurement quality level reported by a smart sensor. Quality level 100 means that the measurement has fully passed quality check algorithms. Smaller quality levels mean that quality has decreased and the measurement has only partially passed quality check algorithms. The smaller the quality level, the more caution should be used by the application when using the measurement. When the quality level is 0 it means that the measurement should certainly be rejected.
- Name: Load
  Description1: "This IPSO object should be used with a load sensor (as in a scale) to report the applied weight or force. It also provides resources for minimum and maximum measured values, as well as the minimum and maximum range that can be measured by the sensor. An example measurement unit is kilograms.\n        "
  Description2: ""
  ObjectID: 3322
  ObjectURN: urn:oma:lwm2m:ext:3322
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5700
          name: Sensor Value
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: ""
          description: Last or Current Measured Value from the Sensor.
        - id: 5701
          name: Sensor Units
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Measurement Units Definition.
        - id: 5601
          name: Min Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value measured by the sensor since power ON or reset.
        - id: 5602
          name: Max Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value measured by the sensor since power ON or reset.
        - id: 5603
          name: Min Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value that can be measured by the sensor.
        - id: 5604
          name: Max Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value that can be measured by the sensor.
        - id: 5605
          name: Reset Min and Max Measured Values
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the Min and Max Measured Values to Current Value.
        - id: 5821
          name: Current Calibration
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Read or Write the current calibration coefficient.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
- Name: Load
  Description1: "This IPSO object should be used with a load sensor (as in a scale) to report the applied weight or force. It also provides resources for minimum and maximum measured values, as well as the minimum and maximum range that can be measured by the sensor. An example measurement unit is kilograms.\n        "
  Description2: ""
  ObjectID: 3322
  ObjectURN: urn:oma:lwm2m:ext:3322:1.1
  LWM2MVersion: "1.0"
  ObjectVersion: "1.1"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5700
          name: Sensor Value
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: ""
          description: Last or Current Measured Value from the Sensor.
        - id: 5701
          name: Sensor Units
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Measurement Units Definition.
        - id: 5601
          name: Min Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value measured by the sensor since power ON or reset.
        - id: 5602
          name: Max Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value measured by the sensor since power ON or reset.
        - id: 5603
          name: Min Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value that can be measured by the sensor.
        - id: 5604
          name: Max Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value that can be measured by the sensor.
        - id: 5605
          name: Reset Min and Max Measured Values
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the Min and Max Measured Values to Current Value.
        - id: 5821
          name: Current Calibration
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Read or Write the current calibration coefficient.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
        - id: 5518
          name: Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: The timestamp of when the measurement was performed.
        - id: 6050
          name: Fractional Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0..1
          units: s
          description: Fractional part of the timestamp when sub-second precision is used (e.g., 0.23 for 230 ms).
        - id: 6042
          name: Measurement Quality Indicator
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..23
          units: ""
          description: 'Measurement quality indicator reported by a smart sensor. 0: UNCHECKED No quality checks were done because they do not exist or can not be applied. 1: REJECTED WITH CERTAINTY The measured value is invalid. 2: REJECTED WITH PROBABILITY The measured value is likely invalid. 3: ACCEPTED BUT SUSPICIOUS The measured value is likely OK. 4: ACCEPTED The measured value is OK. 5-15: Reserved for future extensions. 16-23: Vendor specific measurement quality.'
        - id: 6049
          name: Measurement Quality Level
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..100
          units: ""
          description: Measurement quality level reported by a smart sensor. Quality level 100 means that the measurement has fully passed quality check algorithms. Smaller quality levels mean that quality has decreased and the measurement has only partially passed quality check algorithms. The smaller the quality level, the more caution should be used by the application when using the measurement. When the quality level is 0 it means that the measurement should certainly be rejected.
- Name: Pressure
  Description1: "This IPSO object should be used to report pressure measurements. It also provides resources for minimum and maximum measured values, as well as the minimum and maximum range that can be measured by the sensor. An example measurement unit is pascals.\n        "
  Description2: ""
  ObjectID: 3323
  ObjectURN: urn:oma:lwm2m:ext:3323
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5700
          name: Sensor Value
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: ""
          description: Last or Current Measured Value from the Sensor.
        - id: 5701
          name: Sensor Units
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Measurement Units Definition.
        - id: 5601
          name: Min Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value measured by the sensor since power ON or reset.
        - id: 5602
          name: Max Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value measured by the sensor since power ON or reset.
        - id: 5603
          name: Min Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value that can be measured by the sensor.
        - id: 5604
          name: Max Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value that can be measured by the sensor.
        - id: 5605
          name: Reset Min and Max Measured Values
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the Min and Max Measured Values to Current Value.
        - id: 5821
          name: Current Calibration
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Read or Write the current calibration coefficient.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
- Name: Pressure
  Description1: "This IPSO object should be used to report pressure measurements. It also provides resources for minimum and maximum measured values, as well as the minimum and maximum range that can be measured by the sensor. An example measurement unit is pascals.\n        "
  Description2: ""
  ObjectID: 3323
  ObjectURN: urn:oma:lwm2m:ext:3323:1.1
  LWM2MVersion: "1.0"
  ObjectVersion: "1.1"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5700
          name: Sensor Value
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: ""
          description: Last or Current Measured Value from the Sensor.
        - id: 5701
          name: Sensor Units
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Measurement Units Definition.
        - id: 5601
          name: Min Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value measured by the sensor since power ON or reset.
        - id: 5602
          name: Max Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value measured by the sensor since power ON or reset.
        - id: 5603
          name: Min Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value that can be measured by the sensor.
        - id: 5604
          name: Max Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value that can be measured by the sensor.
        - id: 5605
          name: Reset Min and Max Measured Values
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the Min and Max Measured Values to Current Value.
        - id: 5821
          name: Current Calibration
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Read or Write the current calibration coefficient.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
        - id: 5518
          name: Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: The timestamp of when the measurement was performed.
        - id: 6050
          name: Fractional Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0..1
          units: s
          description: Fractional part of the timestamp when sub-second precision is used (e.g., 0.23 for 230 ms).
        - id: 6042
          name: Measurement Quality Indicator
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..23
          units: ""
          description: 'Measurement quality indicator reported by a smart sensor. 0: UNCHECKED No quality checks were done because they do not exist or can not be applied. 1: REJECTED WITH CERTAINTY The measured value is invalid. 2: REJECTED WITH PROBABILITY The measured value is likely invalid. 3: ACCEPTED BUT SUSPICIOUS The measured value is likely OK. 4: ACCEPTED The measured value is OK. 5-15: Reserved for future extensions. 16-23: Vendor specific measurement quality.'
        - id: 6049
          name: Measurement Quality Level
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..100
          units: ""
          description: Measurement quality level reported by a smart sensor. Quality level 100 means that the measurement has fully passed quality check algorithms. Smaller quality levels mean that quality has decreased and the measurement has only partially passed quality check algorithms. The smaller the quality level, the more caution should be used by the application when using the measurement. When the quality level is 0 it means that the measurement should certainly be rejected.
- Name: Loudness
  Description1: "This IPSO object should be used to report loudness or noise level measurements. It also provides resources for minimum and maximum measured values, as well as the minimum and maximum range that can be measured by the sensor. An example measurement unit is decibels.\n        "
  Description2: ""
  ObjectID: 3324
  ObjectURN: urn:oma:lwm2m:ext:3324
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5700
          name: Sensor Value
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: ""
          description: Last or Current Measured Value from the Sensor.
        - id: 5701
          name: Sensor Units
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Measurement Units Definition.
        - id: 5601
          name: Min Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value measured by the sensor since power ON or reset.
        - id: 5602
          name: Max Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value measured by the sensor since power ON or reset.
        - id: 5603
          name: Min Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value that can be measured by the sensor.
        - id: 5604
          name: Max Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value that can be measured by the sensor.
        - id: 5605
          name: Reset Min and Max Measured Values
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the Min and Max Measured Values to Current Value.
        - id: 5821
          name: Current Calibration
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Read or Write the current calibration coefficient.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
- Name: Loudness
  Description1: "This IPSO object should be used to report loudness or noise level measurements. It also provides resources for minimum and maximum measured values, as well as the minimum and maximum range that can be measured by the sensor. An example measurement unit is decibels.\n        "
  Description2: ""
  ObjectID: 3324
  ObjectURN: urn:oma:lwm2m:ext:3324:1.1
  LWM2MVersion: "1.0"
  ObjectVersion: "1.1"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5700
          name: Sensor Value
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: ""
          description: Last or Current Measured Value from the Sensor.
        - id: 5701
          name: Sensor Units
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Measurement Units Definition.
        - id: 5601
          name: Min Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value measured by the sensor since power ON or reset.
        - id: 5602
          name: Max Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value measured by the sensor since power ON or reset.
        - id: 5603
          name: Min Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value that can be measured by the sensor.
        - id: 5604
          name: Max Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value that can be measured by the sensor.
        - id: 5605
          name: Reset Min and Max Measured Values
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the Min and Max Measured Values to Current Value.
        - id: 5821
          name: Current Calibration
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Read or Write the current calibration coefficient.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
        - id: 5518
          name: Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: The timestamp of when the measurement was performed.
        - id: 6050
          name: Fractional Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0..1
          units: s
          description: Fractional part of the timestamp when sub-second precision is used (e.g., 0.23 for 230 ms).
        - id: 6042
          name: Measurement Quality Indicator
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..23
          units: ""
          description: 'Measurement quality indicator reported by a smart sensor. 0: UNCHECKED No quality checks were done because they do not exist or can not be applied. 1: REJECTED WITH CERTAINTY The measured value is invalid. 2: REJECTED WITH PROBABILITY The measured value is likely invalid. 3: ACCEPTED BUT SUSPICIOUS The measured value is likely OK. 4: ACCEPTED The measured value is OK. 5-15: Reserved for future extensions. 16-23: Vendor specific measurement quality.'
        - id: 6049
          name: Measurement Quality Level
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..100
          units: ""
          description: Measurement quality level reported by a smart sensor. Quality level 100 means that the measurement has fully passed quality check algorithms. Smaller quality levels mean that quality has decreased and the measurement has only partially passed quality check algorithms. The smaller the quality level, the more caution should be used by the application when using the measurement. When the quality level is 0 it means that the measurement should certainly be rejected.
- Name: Concentration
  Description1: "This IPSO object should be used to the particle concentration measurement of a medium. It also provides resources for minimum and maximum measured values, as well as the minimum and maximum range that can be measured by the sensor. An example measurement unit is parts per million.\n        "
  Description2: ""
  ObjectID: 3325
  ObjectURN: urn:oma:lwm2m:ext:3325
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5700
          name: Sensor Value
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: ""
          description: Last or Current Measured Value from the Sensor.
        - id: 5701
          name: Sensor Units
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Measurement Units Definition.
        - id: 5601
          name: Min Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value measured by the sensor since power ON or reset.
        - id: 5602
          name: Max Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value measured by the sensor since power ON or reset.
        - id: 5603
          name: Min Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value that can be measured by the sensor.
        - id: 5604
          name: Max Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value that can be measured by the sensor.
        - id: 5605
          name: Reset Min and Max Measured Values
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the Min and Max Measured Values to Current Value.
        - id: 5821
          name: Current Calibration
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Read or Write the current calibration coefficient.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
- Name: Concentration
  Description1: "This IPSO object should be used to the particle concentration measurement of a medium. It also provides resources for minimum and maximum measured values, as well as the minimum and maximum range that can be measured by the sensor. An example measurement unit is parts per million.\n        "
  Description2: ""
  ObjectID: 3325
  ObjectURN: urn:oma:lwm2m:ext:3325:1.1
  LWM2MVersion: "1.0"
  ObjectVersion: "1.1"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5700
          name: Sensor Value
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: ""
          description: Last or Current Measured Value from the Sensor.
        - id: 5701
          name: Sensor Units
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Measurement Units Definition.
        - id: 5601
          name: Min Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value measured by the sensor since power ON or reset.
        - id: 5602
          name: Max Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value measured by the sensor since power ON or reset.
        - id: 5603
          name: Min Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value that can be measured by the sensor.
        - id: 5604
          name: Max Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value that can be measured by the sensor.
        - id: 5605
          name: Reset Min and Max Measured Values
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the Min and Max Measured Values to Current Value.
        - id: 5821
          name: Current Calibration
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Read or Write the current calibration coefficient.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
        - id: 5518
          name: Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: The timestamp of when the measurement was performed.
        - id: 6050
          name: Fractional Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0..1
          units: s
          description: Fractional part of the timestamp when sub-second precision is used (e.g., 0.23 for 230 ms).
        - id: 6042
          name: Measurement Quality Indicator
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..23
          units: ""
          description: 'Measurement quality indicator reported by a smart sensor. 0: UNCHECKED No quality checks were done because they do not exist or can not be applied. 1: REJECTED WITH CERTAINTY The measured value is invalid. 2: REJECTED WITH PROBABILITY The measured value is likely invalid. 3: ACCEPTED BUT SUSPICIOUS The measured value is likely OK. 4: ACCEPTED The measured value is OK. 5-15: Reserved for future extensions. 16-23: Vendor specific measurement quality.'
        - id: 6049
          name: Measurement Quality Level
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..100
          units: ""
          description: Measurement quality level reported by a smart sensor. Quality level 100 means that the measurement has fully passed quality check algorithms. Smaller quality levels mean that quality has decreased and the measurement has only partially passed quality check algorithms. The smaller the quality level, the more caution should be used by the application when using the measurement. When the quality level is 0 it means that the measurement should certainly be rejected.
- Name: Acidity
  Description1: "This IPSO object should be used to report an acidity measurement of a liquid. It also provides resources for minimum and maximum measured values, as well as the minimum and maximum range that can be measured by the sensor. An example measurement unit is pH.\n        "
  Description2: ""
  ObjectID: 3326
  ObjectURN: urn:oma:lwm2m:ext:3326
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5700
          name: Sensor Value
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: ""
          description: Last or Current Measured Value from the Sensor.
        - id: 5701
          name: Sensor Units
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Measurement Units Definition.
        - id: 5601
          name: Min Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value measured by the sensor since power ON or reset.
        - id: 5602
          name: Max Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value measured by the sensor since power ON or reset.
        - id: 5603
          name: Min Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value that can be measured by the sensor.
        - id: 5604
          name: Max Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value that can be measured by the sensor.
        - id: 5605
          name: Reset Min and Max Measured Values
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the Min and Max Measured Values to Current Value.
        - id: 5821
          name: Current Calibration
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Read or Write the current calibration coefficient.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
- Name: Acidity
  Description1: "This IPSO object should be used to report an acidity measurement of a liquid. It also provides resources for minimum and maximum measured values, as well as the minimum and maximum range that can be measured by the sensor. An example measurement unit is pH.\n        "
  Description2: ""
  ObjectID: 3326
  ObjectURN: urn:oma:lwm2m:ext:3326:1.1
  LWM2MVersion: "1.0"
  ObjectVersion: "1.1"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5700
          name: Sensor Value
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: ""
          description: Last or Current Measured Value from the Sensor.
        - id: 5701
          name: Sensor Units
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Measurement Units Definition.
        - id: 5601
          name: Min Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value measured by the sensor since power ON or reset.
        - id: 5602
          name: Max Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value measured by the sensor since power ON or reset.
        - id: 5603
          name: Min Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value that can be measured by the sensor.
        - id: 5604
          name: Max Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value that can be measured by the sensor.
        - id: 5605
          name: Reset Min and Max Measured Values
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the Min and Max Measured Values to Current Value.
        - id: 5821
          name: Current Calibration
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Read or Write the current calibration coefficient.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
        - id: 5518
          name: Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: The timestamp of when the measurement was performed.
        - id: 6050
          name: Fractional Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0..1
          units: s
          description: Fractional part of the timestamp when sub-second precision is used (e.g., 0.23 for 230 ms).
        - id: 6042
          name: Measurement Quality Indicator
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..23
          units: ""
          description: 'Measurement quality indicator reported by a smart sensor. 0: UNCHECKED No quality checks were done because they do not exist or can not be applied. 1: REJECTED WITH CERTAINTY The measured value is invalid. 2: REJECTED WITH PROBABILITY The measured value is likely invalid. 3: ACCEPTED BUT SUSPICIOUS The measured value is likely OK. 4: ACCEPTED The measured value is OK. 5-15: Reserved for future extensions. 16-23: Vendor specific measurement quality.'
        - id: 6049
          name: Measurement Quality Level
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..100
          units: ""
          description: Measurement quality level reported by a smart sensor. Quality level 100 means that the measurement has fully passed quality check algorithms. Smaller quality levels mean that quality has decreased and the measurement has only partially passed quality check algorithms. The smaller the quality level, the more caution should be used by the application when using the measurement. When the quality level is 0 it means that the measurement should certainly be rejected.
- Name: Conductivity
  Description1: "This IPSO object should be used to report a measurement of the electric conductivity of a medium or sample. It also provides resources for minimum and maximum measured values, as well as the minimum and maximum range that can be measured by the sensor. An example measurement unit is Siemens.\n        "
  Description2: ""
  ObjectID: 3327
  ObjectURN: urn:oma:lwm2m:ext:3327
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5700
          name: Sensor Value
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: ""
          description: Last or Current Measured Value from the Sensor.
        - id: 5701
          name: Sensor Units
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Measurement Units Definition.
        - id: 5601
          name: Min Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value measured by the sensor since power ON or reset.
        - id: 5602
          name: Max Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value measured by the sensor since power ON or reset.
        - id: 5603
          name: Min Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value that can be measured by the sensor.
        - id: 5604
          name: Max Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value that can be measured by the sensor.
        - id: 5605
          name: Reset Min and Max Measured Values
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the Min and Max Measured Values to Current Value.
        - id: 5821
          name: Current Calibration
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Read or Write the current calibration coefficient.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
- Name: Conductivity
  Description1: "This IPSO object should be used to report a measurement of the electric conductivity of a medium or sample. It also provides resources for minimum and maximum measured values, as well as the minimum and maximum range that can be measured by the sensor. An example measurement unit is Siemens.\n        "
  Description2: ""
  ObjectID: 3327
  ObjectURN: urn:oma:lwm2m:ext:3327:1.1
  LWM2MVersion: "1.0"
  ObjectVersion: "1.1"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5700
          name: Sensor Value
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: ""
          description: Last or Current Measured Value from the Sensor.
        - id: 5701
          name: Sensor Units
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Measurement Units Definition.
        - id: 5601
          name: Min Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value measured by the sensor since power ON or reset.
        - id: 5602
          name: Max Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value measured by the sensor since power ON or reset.
        - id: 5603
          name: Min Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value that can be measured by the sensor.
        - id: 5604
          name: Max Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value that can be measured by the sensor.
        - id: 5605
          name: Reset Min and Max Measured Values
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the Min and Max Measured Values to Current Value.
        - id: 5821
          name: Current Calibration
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Read or Write the current calibration coefficient.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
        - id: 5518
          name: Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: The timestamp of when the measurement was performed.
        - id: 6050
          name: Fractional Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0..1
          units: s
          description: Fractional part of the timestamp when sub-second precision is used (e.g., 0.23 for 230 ms).
        - id: 6042
          name: Measurement Quality Indicator
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..23
          units: ""
          description: 'Measurement quality indicator reported by a smart sensor. 0: UNCHECKED No quality checks were done because they do not exist or can not be applied. 1: REJECTED WITH CERTAINTY The measured value is invalid. 2: REJECTED WITH PROBABILITY The measured value is likely invalid. 3: ACCEPTED BUT SUSPICIOUS The measured value is likely OK. 4: ACCEPTED The measured value is OK. 5-15: Reserved for future extensions. 16-23: Vendor specific measurement quality.'
        - id: 6049
          name: Measurement Quality Level
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..100
          units: ""
          description: Measurement quality level reported by a smart sensor. Quality level 100 means that the measurement has fully passed quality check algorithms. Smaller quality levels mean that quality has decreased and the measurement has only partially passed quality check algorithms. The smaller the quality level, the more caution should be used by the application when using the measurement. When the quality level is 0 it means that the measurement should certainly be rejected.
- Name: Power
  Description1: "This IPSO object should be used to report power measurements. It also provides resources for minimum and maximum measured values, as well as the minimum and maximum range that can be measured by the sensor. An example measurement unit is Watts. This object may be used for either real power or apparent power measurements.\n        "
  Description2: ""
  ObjectID: 3328
  ObjectURN: urn:oma:lwm2m:ext:3328
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5700
          name: Sensor Value
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: ""
          description: Last or Current Measured Value from the Sensor.
        - id: 5701
          name: Sensor Units
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Measurement Units Definition.
        - id: 5601
          name: Min Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value measured by the sensor since power ON or reset.
        - id: 5602
          name: Max Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value measured by the sensor since power ON or reset.
        - id: 5603
          name: Min Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value that can be measured by the sensor.
        - id: 5604
          name: Max Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value that can be measured by the sensor.
        - id: 5605
          name: Reset Min and Max Measured Values
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the Min and Max Measured Values to Current Value.
        - id: 5821
          name: Current Calibration
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Read or Write the current calibration coefficient.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
- Name: Power
  Description1: "This IPSO object should be used to report power measurements. It also provides resources for minimum and maximum measured values, as well as the minimum and maximum range that can be measured by the sensor. An example measurement unit is Watts. This object may be used for either real power or apparent power measurements.\n        "
  Description2: ""
  ObjectID: 3328
  ObjectURN: urn:oma:lwm2m:ext:3328:1.1
  LWM2MVersion: "1.0"
  ObjectVersion: "1.1"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5700
          name: Sensor Value
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: ""
          description: Last or Current Measured Value from the Sensor.
        - id: 5701
          name: Sensor Units
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Measurement Units Definition.
        - id: 5601
          name: Min Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value measured by the sensor since power ON or reset.
        - id: 5602
          name: Max Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value measured by the sensor since power ON or reset.
        - id: 5603
          name: Min Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value that can be measured by the sensor.
        - id: 5604
          name: Max Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value that can be measured by the sensor.
        - id: 5605
          name: Reset Min and Max Measured Values
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the Min and Max Measured Values to Current Value.
        - id: 5821
          name: Current Calibration
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Read or Write the current calibration coefficient.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
        - id: 5518
          name: Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: The timestamp of when the measurement was performed.
        - id: 6050
          name: Fractional Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0..1
          units: s
          description: Fractional part of the timestamp when sub-second precision is used (e.g., 0.23 for 230 ms).
        - id: 6042
          name: Measurement Quality Indicator
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..23
          units: ""
          description: 'Measurement quality indicator reported by a smart sensor. 0: UNCHECKED No quality checks were done because they do not exist or can not be applied. 1: REJECTED WITH CERTAINTY The measured value is invalid. 2: REJECTED WITH PROBABILITY The measured value is likely invalid. 3: ACCEPTED BUT SUSPICIOUS The measured value is likely OK. 4: ACCEPTED The measured value is OK. 5-15: Reserved for future extensions. 16-23: Vendor specific measurement quality.'
        - id: 6049
          name: Measurement Quality Level
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..100
          units: ""
          description: Measurement quality level reported by a smart sensor. Quality level 100 means that the measurement has fully passed quality check algorithms. Smaller quality levels mean that quality has decreased and the measurement has only partially passed quality check algorithms. The smaller the quality level, the more caution should be used by the application when using the measurement. When the quality level is 0 it means that the measurement should certainly be rejected.
- Name: Power Factor
  Description1: "This IPSO object should be used to report a measurement or calculation of the power factor of a reactive electrical load. Power Factor is normally the ratio of non-reactive power to total power. This object also provides resources for minimum and maximum measured values, as well as the minimum and maximum range that can be measured by the sensor.\n        "
  Description2: ""
  ObjectID: 3329
  ObjectURN: urn:oma:lwm2m:ext:3329
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5700
          name: Sensor Value
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: ""
          description: Last or Current Measured Value from the Sensor.
        - id: 5701
          name: Sensor Units
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Measurement Units Definition.
        - id: 5601
          name: Min Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value measured by the sensor since power ON or reset.
        - id: 5602
          name: Max Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value measured by the sensor since power ON or reset.
        - id: 5603
          name: Min Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value that can be measured by the sensor.
        - id: 5604
          name: Max Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value that can be measured by the sensor.
        - id: 5605
          name: Reset Min and Max Measured Values
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the Min and Max Measured Values to Current Value.
        - id: 5821
          name: Current Calibration
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Read or Write the current calibration coefficient.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
- Name: Power Factor
  Description1: "This IPSO object should be used to report a measurement or calculation of the power factor of a reactive electrical load. Power Factor is normally the ratio of non-reactive power to total power. This object also provides resources for minimum and maximum measured values, as well as the minimum and maximum range that can be measured by the sensor.\n        "
  Description2: ""
  ObjectID: 3329
  ObjectURN: urn:oma:lwm2m:ext:3329:1.1
  LWM2MVersion: "1.0"
  ObjectVersion: "1.1"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5700
          name: Sensor Value
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: ""
          description: Last or Current Measured Value from the Sensor.
        - id: 5701
          name: Sensor Units
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Measurement Units Definition.
        - id: 5601
          name: Min Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value measured by the sensor since power ON or reset.
        - id: 5602
          name: Max Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value measured by the sensor since power ON or reset.
        - id: 5603
          name: Min Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value that can be measured by the sensor.
        - id: 5604
          name: Max Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value that can be measured by the sensor.
        - id: 5605
          name: Reset Min and Max Measured Values
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the Min and Max Measured Values to Current Value.
        - id: 5821
          name: Current Calibration
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Read or Write the current calibration coefficient.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
        - id: 5518
          name: Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: The timestamp of when the measurement was performed.
        - id: 6050
          name: Fractional Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0..1
          units: s
          description: Fractional part of the timestamp when sub-second precision is used (e.g., 0.23 for 230 ms).
        - id: 6042
          name: Measurement Quality Indicator
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..23
          units: ""
          description: 'Measurement quality indicator reported by a smart sensor. 0: UNCHECKED No quality checks were done because they do not exist or can not be applied. 1: REJECTED WITH CERTAINTY The measured value is invalid. 2: REJECTED WITH PROBABILITY The measured value is likely invalid. 3: ACCEPTED BUT SUSPICIOUS The measured value is likely OK. 4: ACCEPTED The measured value is OK. 5-15: Reserved for future extensions. 16-23: Vendor specific measurement quality.'
        - id: 6049
          name: Measurement Quality Level
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..100
          units: ""
          description: Measurement quality level reported by a smart sensor. Quality level 100 means that the measurement has fully passed quality check algorithms. Smaller quality levels mean that quality has decreased and the measurement has only partially passed quality check algorithms. The smaller the quality level, the more caution should be used by the application when using the measurement. When the quality level is 0 it means that the measurement should certainly be rejected.
- Name: Distance
  Description1: "This IPSO object should be used to report a distance measurement. It also provides resources for minimum and maximum measured values, as well as the minimum and maximum range that can be measured by the sensor. An example measurement unit is Meters.\n        "
  Description2: ""
  ObjectID: 3330
  ObjectURN: urn:oma:lwm2m:ext:3330
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5700
          name: Sensor Value
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: ""
          description: Last or Current Measured Value from the Sensor.
        - id: 5701
          name: Sensor Units
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Measurement Units Definition.
        - id: 5601
          name: Min Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value measured by the sensor since power ON or reset.
        - id: 5602
          name: Max Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value measured by the sensor since power ON or reset.
        - id: 5603
          name: Min Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value that can be measured by the sensor.
        - id: 5604
          name: Max Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value that can be measured by the sensor.
        - id: 5605
          name: Reset Min and Max Measured Values
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the Min and Max Measured Values to Current Value.
        - id: 5821
          name: Current Calibration
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Read or Write the current calibration coefficient.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
- Name: Distance
  Description1: "This IPSO object should be used to report a distance measurement. It also provides resources for minimum and maximum measured values, as well as the minimum and maximum range that can be measured by the sensor. An example measurement unit is Meters.\n        "
  Description2: ""
  ObjectID: 3330
  ObjectURN: urn:oma:lwm2m:ext:3330:1.1
  LWM2MVersion: "1.0"
  ObjectVersion: "1.1"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5700
          name: Sensor Value
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: ""
          description: Last or Current Measured Value from the Sensor.
        - id: 5701
          name: Sensor Units
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Measurement Units Definition.
        - id: 5601
          name: Min Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value measured by the sensor since power ON or reset.
        - id: 5602
          name: Max Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value measured by the sensor since power ON or reset.
        - id: 5603
          name: Min Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value that can be measured by the sensor.
        - id: 5604
          name: Max Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value that can be measured by the sensor.
        - id: 5605
          name: Reset Min and Max Measured Values
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the Min and Max Measured Values to Current Value.
        - id: 5821
          name: Current Calibration
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Read or Write the current calibration coefficient.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
        - id: 5518
          name: Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: The timestamp of when the measurement was performed.
        - id: 6050
          name: Fractional Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0..1
          units: s
          description: Fractional part of the timestamp when sub-second precision is used (e.g., 0.23 for 230 ms).
        - id: 6042
          name: Measurement Quality Indicator
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..23
          units: ""
          description: 'Measurement quality indicator reported by a smart sensor. 0: UNCHECKED No quality checks were done because they do not exist or can not be applied. 1: REJECTED WITH CERTAINTY The measured value is invalid. 2: REJECTED WITH PROBABILITY The measured value is likely invalid. 3: ACCEPTED BUT SUSPICIOUS The measured value is likely OK. 4: ACCEPTED The measured value is OK. 5-15: Reserved for future extensions. 16-23: Vendor specific measurement quality.'
        - id: 6049
          name: Measurement Quality Level
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..100
          units: ""
          description: Measurement quality level reported by a smart sensor. Quality level 100 means that the measurement has fully passed quality check algorithms. Smaller quality levels mean that quality has decreased and the measurement has only partially passed quality check algorithms. The smaller the quality level, the more caution should be used by the application when using the measurement. When the quality level is 0 it means that the measurement should certainly be rejected.
- Name: Energy
  Description1: "This IPSO object should be used to report energy consumption (Cumulative Power) of an electrical load. An example measurement unit is Watt Hours.\n        "
  Description2: ""
  ObjectID: 3331
  ObjectURN: urn:oma:lwm2m:ext:3331
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5700
          name: Sensor Value
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: ""
          description: Last or Current Measured Value from the Sensor.
        - id: 5701
          name: Sensor Units
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Measurement Units Definition.
        - id: 5822
          name: Reset Cumulative energy
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset both cumulative active/reactive power.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
- Name: Energy
  Description1: "This IPSO object should be used to report energy consumption (Cumulative Power) of an electrical load. An example measurement unit is Watt Hours.\n        "
  Description2: ""
  ObjectID: 3331
  ObjectURN: urn:oma:lwm2m:ext:3331:1.1
  LWM2MVersion: "1.0"
  ObjectVersion: "1.1"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5700
          name: Sensor Value
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: ""
          description: Last or Current Measured Value from the Sensor.
        - id: 5701
          name: Sensor Units
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Measurement Units Definition.
        - id: 5822
          name: Reset Cumulative energy
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset both cumulative active/reactive power.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
        - id: 5518
          name: Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: The timestamp of when the measurement was performed.
        - id: 6050
          name: Fractional Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0..1
          units: s
          description: Fractional part of the timestamp when sub-second precision is used (e.g., 0.23 for 230 ms).
        - id: 6042
          name: Measurement Quality Indicator
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..23
          units: ""
          description: 'Measurement quality indicator reported by a smart sensor. 0: UNCHECKED No quality checks were done because they do not exist or can not be applied. 1: REJECTED WITH CERTAINTY The measured value is invalid. 2: REJECTED WITH PROBABILITY The measured value is likely invalid. 3: ACCEPTED BUT SUSPICIOUS The measured value is likely OK. 4: ACCEPTED The measured value is OK. 5-15: Reserved for future extensions. 16-23: Vendor specific measurement quality.'
        - id: 6049
          name: Measurement Quality Level
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..100
          units: ""
          description: Measurement quality level reported by a smart sensor. Quality level 100 means that the measurement has fully passed quality check algorithms. Smaller quality levels mean that quality has decreased and the measurement has only partially passed quality check algorithms. The smaller the quality level, the more caution should be used by the application when using the measurement. When the quality level is 0 it means that the measurement should certainly be rejected.
- Name: Direction
  Description1: "This IPSO object is used to report the direction indicated by a compass, wind vane, or other directional indicator. The units of measure is plane angle degrees.\n        "
  Description2: ""
  ObjectID: 3332
  ObjectURN: urn:oma:lwm2m:ext:3332
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5705
          name: Compass Direction
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: 0..360
          units: deg
          description: The measured compass direction.
        - id: 5601
          name: Min Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value measured by the sensor since power ON or reset.
        - id: 5602
          name: Max Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value measured by the sensor since power ON or reset.
        - id: 5605
          name: Reset Min and Max Measured Values
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the Min and Max Measured Values to Current Value.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
- Name: Direction
  Description1: "This IPSO object is used to report the direction indicated by a compass, wind vane, or other directional indicator. The units of measure is plane angle degrees.\n        "
  Description2: ""
  ObjectID: 3332
  ObjectURN: urn:oma:lwm2m:ext:3332:1.1
  LWM2MVersion: "1.0"
  ObjectVersion: "1.1"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5705
          name: Compass Direction
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: 0..360
          units: deg
          description: The measured compass direction.
        - id: 5601
          name: Min Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value measured by the sensor since power ON or reset.
        - id: 5602
          name: Max Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value measured by the sensor since power ON or reset.
        - id: 5605
          name: Reset Min and Max Measured Values
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the Min and Max Measured Values to Current Value.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
        - id: 5518
          name: Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: The timestamp of when the measurement was performed.
        - id: 6050
          name: Fractional Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0..1
          units: s
          description: Fractional part of the timestamp when sub-second precision is used (e.g., 0.23 for 230 ms).
        - id: 6042
          name: Measurement Quality Indicator
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..23
          units: ""
          description: 'Measurement quality indicator reported by a smart sensor. 0: UNCHECKED No quality checks were done because they do not exist or can not be applied. 1: REJECTED WITH CERTAINTY The measured value is invalid. 2: REJECTED WITH PROBABILITY The measured value is likely invalid. 3: ACCEPTED BUT SUSPICIOUS The measured value is likely OK. 4: ACCEPTED The measured value is OK. 5-15: Reserved for future extensions. 16-23: Vendor specific measurement quality.'
        - id: 6049
          name: Measurement Quality Level
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..100
          units: ""
          description: Measurement quality level reported by a smart sensor. Quality level 100 means that the measurement has fully passed quality check algorithms. Smaller quality levels mean that quality has decreased and the measurement has only partially passed quality check algorithms. The smaller the quality level, the more caution should be used by the application when using the measurement. When the quality level is 0 it means that the measurement should certainly be rejected.
- Name: Time
  Description1: "This IPSO object is used to report the current time in seconds since January 1, 1970 UTC. There is also a fractional time counter that has a range of less than one second.\n        "
  Description2: ""
  ObjectID: 3333
  ObjectURN: urn:oma:lwm2m:ext:3333
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5506
          name: Current Time
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Time
          rangeenumeration: ""
          units: ""
          description: Unix Time. A signed integer representing the number of seconds since Jan 1st, 1970 in the UTC time zone.
        - id: 5507
          name: Fractional Time
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0..1
          units: s
          description: Fractional part of the time when sub-second precision is used (e.g., 0.23 for 230 ms).
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
- Name: Time
  Description1: "This IPSO object is used to report the current time in seconds since January 1, 1970 UTC. There is also a fractional time counter that has a range of less than one second.\n        "
  Description2: ""
  ObjectID: 3333
  ObjectURN: urn:oma:lwm2m:ext:3333:1.1
  LWM2MVersion: "1.0"
  ObjectVersion: "1.1"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5506
          name: Current Time
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Time
          rangeenumeration: ""
          units: ""
          description: Unix Time. A signed integer representing the number of seconds since Jan 1st, 1970 in the UTC time zone.
        - id: 5507
          name: Fractional Time
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0..1
          units: s
          description: Fractional part of the time when sub-second precision is used (e.g., 0.23 for 230 ms).
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
        - id: 6042
          name: Measurement Quality Indicator
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..23
          units: ""
          description: 'Measurement quality indicator reported by a smart sensor. 0: UNCHECKED No quality checks were done because they do not exist or can not be applied. 1: REJECTED WITH CERTAINTY The measured value is invalid. 2: REJECTED WITH PROBABILITY The measured value is likely invalid. 3: ACCEPTED BUT SUSPICIOUS The measured value is likely OK. 4: ACCEPTED The measured value is OK. 5-15: Reserved for future extensions. 16-23: Vendor specific measurement quality.'
        - id: 6049
          name: Measurement Quality Level
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..100
          units: ""
          description: Measurement quality level reported by a smart sensor. Quality level 100 means that the measurement has fully passed quality check algorithms. Smaller quality levels mean that quality has decreased and the measurement has only partially passed quality check algorithms. The smaller the quality level, the more caution should be used by the application when using the measurement. When the quality level is 0 it means that the measurement should certainly be rejected.
- Name: Gyrometer
  Description1: "This IPSO Object is used to report the current reading of a gyrometer sensor in 3 axes. It provides tracking of the minimum and maximum angular rate in all 3 axes. An example unit of measure is radians per second.\n        "
  Description2: ""
  ObjectID: 3334
  ObjectURN: urn:oma:lwm2m:ext:3334
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5702
          name: X Value
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: ""
          description: The measured value along the X axis.
        - id: 5703
          name: Y Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The measured value along the Y axis.
        - id: 5704
          name: Z Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The measured value along the Z axis.
        - id: 5701
          name: Sensor Units
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Measurement Units Definition.
        - id: 5508
          name: Min X Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum measured value along the X axis.
        - id: 5509
          name: Max X Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum measured value along the X axis.
        - id: 5510
          name: Min Y Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum measured value along the Y axis.
        - id: 5511
          name: Max Y Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum measured value along the Y axis.
        - id: 5512
          name: Min Z Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum measured value along the Z axis.
        - id: 5513
          name: Max Z Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum measured value along the Z axis.
        - id: 5605
          name: Reset Min and Max Measured Values
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the Min and Max Measured Values to Current Value.
        - id: 5603
          name: Min Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value that can be measured by the sensor.
        - id: 5604
          name: Max Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value that can be measured by the sensor.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
- Name: Gyrometer
  Description1: "This IPSO Object is used to report the current reading of a gyrometer sensor in 3 axes. It provides tracking of the minimum and maximum angular rate in all 3 axes. An example unit of measure is radians per second.\n        "
  Description2: ""
  ObjectID: 3334
  ObjectURN: urn:oma:lwm2m:ext:3334:1.1
  LWM2MVersion: "1.0"
  ObjectVersion: "1.1"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5702
          name: X Value
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: ""
          description: The measured value along the X axis.
        - id: 5703
          name: Y Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The measured value along the Y axis.
        - id: 5704
          name: Z Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The measured value along the Z axis.
        - id: 5701
          name: Sensor Units
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Measurement Units Definition.
        - id: 5508
          name: Min X Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum measured value along the X axis.
        - id: 5509
          name: Max X Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum measured value along the X axis.
        - id: 5510
          name: Min Y Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum measured value along the Y axis.
        - id: 5511
          name: Max Y Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum measured value along the Y axis.
        - id: 5512
          name: Min Z Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum measured value along the Z axis.
        - id: 5513
          name: Max Z Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum measured value along the Z axis.
        - id: 5605
          name: Reset Min and Max Measured Values
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the Min and Max Measured Values to Current Value.
        - id: 5603
          name: Min Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value that can be measured by the sensor.
        - id: 5604
          name: Max Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value that can be measured by the sensor.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
        - id: 5518
          name: Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: The timestamp of when the measurement was performed.
        - id: 6050
          name: Fractional Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0..1
          units: s
          description: Fractional part of the timestamp when sub-second precision is used (e.g., 0.23 for 230 ms).
        - id: 6042
          name: Measurement Quality Indicator
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..23
          units: ""
          description: 'Measurement quality indicator reported by a smart sensor. 0: UNCHECKED No quality checks were done because they do not exist or can not be applied. 1: REJECTED WITH CERTAINTY The measured value is invalid. 2: REJECTED WITH PROBABILITY The measured value is likely invalid. 3: ACCEPTED BUT SUSPICIOUS The measured value is likely OK. 4: ACCEPTED The measured value is OK. 5-15: Reserved for future extensions. 16-23: Vendor specific measurement quality.'
        - id: 6049
          name: Measurement Quality Level
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..100
          units: ""
          description: Measurement quality level reported by a smart sensor. Quality level 100 means that the measurement has fully passed quality check algorithms. Smaller quality levels mean that quality has decreased and the measurement has only partially passed quality check algorithms. The smaller the quality level, the more caution should be used by the application when using the measurement. When the quality level is 0 it means that the measurement should certainly be rejected.
- Name: Colour
  Description1: "This IPSO object should be used to report the measured value of a colour sensor in some colour space described by the units resource.\n        "
  Description2: ""
  ObjectID: 3335
  ObjectURN: urn:oma:lwm2m:ext:3335
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5706
          name: Colour
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: A string representing a value in some color space.
        - id: 5701
          name: Sensor Units
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Measurement Units Definition.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
- Name: Colour
  Description1: "This IPSO object should be used to report the measured value of a colour sensor in some colour space described by the units resource.\n        "
  Description2: ""
  ObjectID: 3335
  ObjectURN: urn:oma:lwm2m:ext:3335:1.1
  LWM2MVersion: "1.0"
  ObjectVersion: "1.1"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5706
          name: Colour
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: A string representing a value in some color space.
        - id: 5701
          name: Sensor Units
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Measurement Units Definition.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
        - id: 5518
          name: Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: The timestamp of when the measurement was performed.
        - id: 6050
          name: Fractional Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0..1
          units: s
          description: Fractional part of the timestamp when sub-second precision is used (e.g., 0.23 for 230 ms).
        - id: 6042
          name: Measurement Quality Indicator
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..23
          units: ""
          description: 'Measurement quality indicator reported by a smart sensor. 0: UNCHECKED No quality checks were done because they do not exist or can not be applied. 1: REJECTED WITH CERTAINTY The measured value is invalid. 2: REJECTED WITH PROBABILITY The measured value is likely invalid. 3: ACCEPTED BUT SUSPICIOUS The measured value is likely OK. 4: ACCEPTED The measured value is OK. 5-15: Reserved for future extensions. 16-23: Vendor specific measurement quality.'
        - id: 6049
          name: Measurement Quality Level
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..100
          units: ""
          description: Measurement quality level reported by a smart sensor. Quality level 100 means that the measurement has fully passed quality check algorithms. Smaller quality levels mean that quality has decreased and the measurement has only partially passed quality check algorithms. The smaller the quality level, the more caution should be used by the application when using the measurement. When the quality level is 0 it means that the measurement should certainly be rejected.
- Name: Location
  Description1: "This IPSO object represents GPS coordinates. This object is compatible with the LWM2M management object for location, but uses reusable resources.\n        "
  Description2: ""
  ObjectID: 3336
  ObjectURN: urn:oma:lwm2m:ext:3336
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5514
          name: Latitude
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: The decimal notation of latitude, e.g. -43.5723 (World Geodetic System 1984).
        - id: 5515
          name: Longitude
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: The decimal notation of longitude, e.g. 153.21760 (World Geodetic System 1984).
        - id: 5516
          name: Uncertainty
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The accuracy of the position in meters.
        - id: 5705
          name: Compass Direction
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0..360
          units: deg
          description: The measured compass direction.
        - id: 5517
          name: Velocity
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: The velocity of the device as defined in 3GPP 23.032 GAD specification. This set of values may not be available if the device is static.
        - id: 5518
          name: Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: The timestamp of when the measurement was performed.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
- Name: Location
  Description1: "This IPSO object represents GPS coordinates. This object is compatible with the LWM2M management object for location, but uses reusable resources.\n        "
  Description2: ""
  ObjectID: 3336
  ObjectURN: urn:oma:lwm2m:ext:3336:1.1
  LWM2MVersion: "1.0"
  ObjectVersion: "1.1"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5514
          name: Latitude
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: The decimal notation of latitude, e.g. -43.5723 (World Geodetic System 1984).
        - id: 5515
          name: Longitude
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: The decimal notation of longitude, e.g. 153.21760 (World Geodetic System 1984).
        - id: 5516
          name: Uncertainty
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The accuracy of the position in meters.
        - id: 5705
          name: Compass Direction
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0..360
          units: deg
          description: The measured compass direction.
        - id: 5517
          name: Velocity
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: The velocity of the device as defined in 3GPP 23.032 GAD specification. This set of values may not be available if the device is static.
        - id: 5518
          name: Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: The timestamp of when the measurement was performed.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
        - id: 6050
          name: Fractional Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0..1
          units: s
          description: Fractional part of the timestamp when sub-second precision is used (e.g., 0.23 for 230 ms).
        - id: 6042
          name: Measurement Quality Indicator
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..23
          units: ""
          description: 'Measurement quality indicator reported by a smart sensor. 0: UNCHECKED No quality checks were done because they do not exist or can not be applied. 1: REJECTED WITH CERTAINTY The measured value is invalid. 2: REJECTED WITH PROBABILITY The measured value is likely invalid. 3: ACCEPTED BUT SUSPICIOUS The measured value is likely OK. 4: ACCEPTED The measured value is OK. 5-15: Reserved for future extensions. 16-23: Vendor specific measurement quality.'
        - id: 6049
          name: Measurement Quality Level
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..100
          units: ""
          description: Measurement quality level reported by a smart sensor. Quality level 100 means that the measurement has fully passed quality check algorithms. Smaller quality levels mean that quality has decreased and the measurement has only partially passed quality check algorithms. The smaller the quality level, the more caution should be used by the application when using the measurement. When the quality level is 0 it means that the measurement should certainly be rejected.
- Name: Location
  Description1: "This IPSO object represents GPS coordinates. This object is compatible with the LwM2M management object for location, but uses reusable resources.\n        "
  Description2: ""
  ObjectID: 3336
  ObjectURN: urn:oma:lwm2m:ext:3336:2.0
  LWM2MVersion: "1.0"
  ObjectVersion: "2.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 6051
          name: Numeric Latitude
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: lat
          description: The decimal notation of latitude, e.g. -43.5723 (World Geodetic System 1984).
        - id: 6052
          name: Numeric Longitude
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: lon
          description: The decimal notation of longitude, e.g. 153.21760 (World Geodetic System 1984).
        - id: 6053
          name: Numeric Uncertainty
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: m
          description: The accuracy of the position in meters.
        - id: 5705
          name: Compass Direction
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0..360
          units: deg
          description: The measured compass direction.
        - id: 5517
          name: Velocity
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: The velocity of the device as defined in 3GPP 23.032 GAD specification. This set of values may not be available if the device is static.
        - id: 5518
          name: Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: The timestamp of when the measurement was performed.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
        - id: 6050
          name: Fractional Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0..1
          units: s
          description: Fractional part of the timestamp when sub-second precision is used (e.g., 0.23 for 230 ms).
        - id: 6042
          name: Measurement Quality Indicator
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..23
          units: ""
          description: 'Measurement quality indicator reported by a smart sensor. 0: UNCHECKED No quality checks were done because they do not exist or can not be applied. 1: REJECTED WITH CERTAINTY The measured value is invalid. 2: REJECTED WITH PROBABILITY The measured value is likely invalid. 3: ACCEPTED BUT SUSPICIOUS The measured value is likely OK. 4: ACCEPTED The measured value is OK. 5-15: Reserved for future extensions. 16-23: Vendor specific measurement quality.'
        - id: 6049
          name: Measurement Quality Level
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..100
          units: ""
          description: Measurement quality level reported by a smart sensor. Quality level 100 means that the measurement has fully passed quality check algorithms. Smaller quality levels mean that quality has decreased and the measurement has only partially passed quality check algorithms. The smaller the quality level, the more caution should be used by the application when using the measurement. When the quality level is 0 it means that the measurement should certainly be rejected.
- Name: Positioner
  Description1: "This IPSO object should be used with a generic position actuator with range from 0 to 100%. This object optionally allows setting the transition time for an operation that changes the position of the actuator, and for reading the remaining time of the currently active transition.\n        "
  Description2: ""
  ObjectID: 3337
  ObjectURN: urn:oma:lwm2m:ext:3337
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5536
          name: Current Position
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: 0..100
          units: /100
          description: Current position or desired position of a positioner actuator.
        - id: 5537
          name: Transition Time
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: s
          description: The time expected to move the actuator to the new position.
        - id: 5538
          name: Remaining Time
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: s
          description: The time remaining in an operation.
        - id: 5601
          name: Min Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value measured by the sensor since power ON or reset.
        - id: 5602
          name: Max Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value measured by the sensor since power ON or reset.
        - id: 5605
          name: Reset Min and Max Measured Values
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the Min and Max Measured Values to Current Value.
        - id: 5519
          name: Min Limit
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value that can be measured by the sensor.
        - id: 5520
          name: Max Limit
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value that can be measured by the sensor.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
- Name: Positioner
  Description1: "This IPSO object should be used with a generic position actuator with range from 0 to 100%. This object optionally allows setting the transition time for an operation that changes the position of the actuator, and for reading the remaining time of the currently active transition.\n        "
  Description2: ""
  ObjectID: 3337
  ObjectURN: urn:oma:lwm2m:ext:3337:1.1
  LWM2MVersion: "1.0"
  ObjectVersion: "1.1"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5536
          name: Current Position
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: 0..100
          units: /100
          description: Current position or desired position of a positioner actuator.
        - id: 5537
          name: Transition Time
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: s
          description: The time expected to move the actuator to the new position.
        - id: 5538
          name: Remaining Time
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: s
          description: The time remaining in an operation.
        - id: 5601
          name: Min Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value measured by the sensor since power ON or reset.
        - id: 5602
          name: Max Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value measured by the sensor since power ON or reset.
        - id: 5605
          name: Reset Min and Max Measured Values
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the Min and Max Measured Values to Current Value.
        - id: 5519
          name: Min Limit
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value that can be measured by the sensor.
        - id: 5520
          name: Max Limit
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value that can be measured by the sensor.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
        - id: 5518
          name: Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: The timestamp of when the measurement was performed.
        - id: 6050
          name: Fractional Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0..1
          units: s
          description: Fractional part of the timestamp when sub-second precision is used (e.g., 0.23 for 230 ms).
- Name: Buzzer
  Description1: "This IPSO object should be used to actuate an audible alarm such as a buzzer, beeper, or vibration alarm. There is a dimmer control for setting the relative loudness of the alarm, and an optional duration control to limit the length of time the alarm sounds when turned on. Each time \"true\" is written to the On/Off resource, the alarm will sound again for the configured duration. If no duration is programmed or the setting is \"false\", writing a \"true\" to the On/Off resource will result in the alarm sounding continuously until a \"false\" is written to the On/Off resource.\n        "
  Description2: ""
  ObjectID: 3338
  ObjectURN: urn:oma:lwm2m:ext:3338
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5850
          name: On/Off
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: On/off control. Boolean value where True is On and False is Off.
        - id: 5548
          name: Level
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0..100
          units: /100
          description: Used to represent a level control such as audio volume.
        - id: 5521
          name: Delay Duration
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: s
          description: The duration of the time delay.
        - id: 5525
          name: Minimum Off-time
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: s
          description: The duration of the rearm delay (i.e. the delay from the end of one cycle until the beginning of the next, the inhibit time).
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
- Name: Buzzer
  Description1: "This IPSO object should be used to actuate an audible alarm such as a buzzer, beeper, or vibration alarm. There is a dimmer control for setting the relative level of the alarm, and an optional duration control to limit the length of time the alarm sounds when turned on. Each time \"true\" is written to the On/Off resource, the alarm will sound again for the configured duration. If no duration is programmed or the setting is \"false\", writing a \"true\" to the On/Off resource will result in the alarm sounding continuously until a \"false\" is written to the On/Off resource.\n        "
  Description2: ""
  ObjectID: 3338
  ObjectURN: urn:oma:lwm2m:ext:3338:1.1
  LWM2MVersion: "1.0"
  ObjectVersion: "1.1"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5850
          name: On/Off
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: On/off control. Boolean value where True is On and False is Off.
        - id: 5548
          name: Level
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0..100
          units: /100
          description: Used to represent a level control such as audio volume.
        - id: 5521
          name: Delay Duration
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: s
          description: The duration of the time delay.
        - id: 5525
          name: Minimum Off-time
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: s
          description: The duration of the rearm delay (i.e. the delay from the end of one cycle until the beginning of the next, the inhibit time).
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
        - id: 5518
          name: Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: The timestamp of when the measurement was performed.
        - id: 6050
          name: Fractional Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0..1
          units: s
          description: Fractional part of the timestamp when sub-second precision is used (e.g., 0.23 for 230 ms).
- Name: Audio Clip
  Description1: This IPSO object should be used for a speaker that plays a pre-recorded audio clip or an audio output that is sent elsewhere. For example, an elevator which announces the floor of the building. A resource is provided to store the clip, a dimmer resource controls the relative sound level of the playback, and a duration resource limits the maximum playback time. After the duration time is reached, any remaining samples in the clip are ignored, and the clip player will be ready to play another clip.
  Description2: ""
  ObjectID: 3339
  ObjectURN: urn:oma:lwm2m:ext:3339
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5522
          name: Clip
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: Audio clip that is playable (e.g., a short audio recording indicating the floor in an elevator).
        - id: 5523
          name: Trigger
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Trigger initiating actuation.
        - id: 5548
          name: Level
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0..100
          units: /100
          description: Used to represent a level control such as audio volume.
        - id: 5524
          name: Duration
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: s
          description: The duration of the sound once trigger.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
- Name: Timer
  Description1: "This IPSO object is used to time events and actions, using patterns common to industrial timers. A write to the trigger resource or On/Off input state change starts the timing operation, and the timer remaining time shows zero when the operation is complete. The patterns supported are One-Shot (mode 1), On-Time or Interval (mode 2), Time delay on pick-up or TDPU (mode 3), and Time Delay on Drop-Out or TDDO (mode 4). Mode 0 disables the timer, so the output follows the input with no delay. A counter is provided to count occurrences of the timer output changing from 0 to 1. Writing a value of zero resets the counter. The Digital Input State resource reports the state of the timer output.\n        "
  Description2: ""
  ObjectID: 3340
  ObjectURN: urn:oma:lwm2m:ext:3340
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5521
          name: Delay Duration
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: s
          description: The duration of the time delay.
        - id: 5538
          name: Remaining Time
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: s
          description: The time remaining in an operation.
        - id: 5525
          name: Minimum Off-time
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: s
          description: The duration of the rearm delay (i.e. the delay from the end of one cycle until the beginning of the next, the inhibit time).
        - id: 5523
          name: Trigger
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Trigger initiating actuation.
        - id: 5850
          name: On/Off
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: On/off control. Boolean value where True is On and False is Off.
        - id: 5501
          name: Digital Input Counter
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: The cumulative value of active state detected.
        - id: 5544
          name: Cumulative Time
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: s
          description: The total time in seconds that the timer input is true. Writing a 0 resets the time.
        - id: 5543
          name: Digital State
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: The current state of the timer output.
        - id: 5534
          name: Counter
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Counts the number of times the timer output transitions from 0 to 1.
        - id: 5526
          name: Timer Mode
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..4
          units: ""
          description: 'Type of timer pattern used by the timer. 1: One-shot, 2: On-Time or Interval, 3: Time delay on pick-up, 4: Time Delay on Drop-Out, 0: disables the timer.'
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
- Name: Addressable Text Display
  Description1: "This IPSO object is used to send text to a text-only or text mode graphics display. Writing a string of text to the text resource causes it to be displayed at the selected X and Y locations on the display. If X or Y are set to a value greater than the size of the display, the position \"wraps around\" to the modulus of the setting and the display size. Likewise, if the text string overflows the display size, the text \"wraps around\" and displays on the next line down or, if the last line has been written, wraps around to the top of the display. Brightness and Contrast controls are provided to allow control of various display types including STN and DSTN type LCD character displays. Writing an empty payload to the Clear Display resource causes the display to be erased.\n        "
  Description2: ""
  ObjectID: 3341
  ObjectURN: urn:oma:lwm2m:ext:3341
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5527
          name: Text
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: A string of text.
        - id: 5528
          name: X Coordinate
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: X Coordinate.
        - id: 5529
          name: Y Coordinate
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Y Coordinate.
        - id: 5545
          name: Max X Coordinate
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: The highest X coordinate the display supports before wrapping to the next line.
        - id: 5546
          name: Max Y Coordinate
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: The highest Y coordinate the display supports before wrapping to the next line.
        - id: 5530
          name: Clear Display
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Command to clear the display.
        - id: 5548
          name: Level
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0..100
          units: /100
          description: Used to represent a level control such as audio volume.
        - id: 5531
          name: Contrast
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0..100
          units: /100
          description: Proportional control, integer value between 0 and 100 as a percentage.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
- Name: On/Off switch
  Description1: This IPSO object should be used with an On/Off switch to report the state of the switch.
  Description2: ""
  ObjectID: 3342
  ObjectURN: urn:oma:lwm2m:ext:3342
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5500
          name: Digital Input State
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: The current state of a digital input.
        - id: 5501
          name: Digital Input Counter
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: The cumulative value of active state detected.
        - id: 5852
          name: On time
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: s
          description: The time in seconds that the device has been on. Writing a value of 0 resets the counter.
        - id: 5854
          name: Off Time
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: s
          description: The time in seconds in the off state. Writing a value of 0 resets the counter.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
- Name: On/Off switch
  Description1: This IPSO object should be used with an On/Off switch to report the state of the switch.
  Description2: ""
  ObjectID: 3342
  ObjectURN: urn:oma:lwm2m:ext:3342:1.1
  LWM2MVersion: "1.0"
  ObjectVersion: "1.1"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5500
          name: Digital Input State
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: The current state of a digital input.
        - id: 5501
          name: Digital Input Counter
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: The cumulative value of active state detected.
        - id: 5852
          name: On time
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: s
          description: The time in seconds that the device has been on. Writing a value of 0 resets the counter.
        - id: 5854
          name: Off Time
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: s
          description: The time in seconds in the off state. Writing a value of 0 resets the counter.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
        - id: 5518
          name: Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: The timestamp of when the measurement was performed.
        - id: 6050
          name: Fractional Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0..1
          units: s
          description: Fractional part of the timestamp when sub-second precision is used (e.g., 0.23 for 230 ms).
- Name: Dimmer
  Description1: "This IPSO object should be used with a dimmer or level control to report the state of the control.\n        "
  Description2: ""
  ObjectID: 3343
  ObjectURN: urn:oma:lwm2m:ext:3343
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5548
          name: Level
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: 0..100
          units: /100
          description: Used to represent a level control such as audio volume.
        - id: 5852
          name: On time
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: s
          description: The time in seconds that the device has been on. Writing a value of 0 resets the counter.
        - id: 5854
          name: Off Time
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: s
          description: The time in seconds in the off state. Writing a value of 0 resets the counter.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
- Name: Up/Down Control
  Description1: "This IPSO object is used to report the state of an up/down control element like a pair of push buttons or a rotary encoder. Counters for increase and decrease operations are provided for counting pulses from a quadrature encoder.\n        "
  Description2: ""
  ObjectID: 3344
  ObjectURN: urn:oma:lwm2m:ext:3344
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5532
          name: Increase Input State
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Indicates an increase control action.
        - id: 5533
          name: Decrease Input State
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Indicates a decrease control action.
        - id: 5541
          name: Up Counter
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Counts the number of times the increase control has been operated. Writing a 0 resets the counter.
        - id: 5542
          name: Down Counter
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Counts the times the decrease control has been operated. Writing a 0 resets the counter.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
- Name: Multiple Axis Joystick
  Description1: "This IPSO object can be used to report the position of a shuttle or joystick control. A digital input is provided to report the state of an associated push button.\n        "
  Description2: ""
  ObjectID: 3345
  ObjectURN: urn:oma:lwm2m:ext:3345
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5500
          name: Digital Input State
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: The current state of a digital input.
        - id: 5501
          name: Digital Input Counter
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: The cumulative value of active state detected.
        - id: 5702
          name: X Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The measured value along the X axis.
        - id: 5703
          name: Y Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The measured value along the Y axis.
        - id: 5704
          name: Z Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The measured value along the Z axis.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
- Name: Rate
  Description1: "This object type should be used to report a rate measurement, for example the speed of a vehicle, or the rotational speed of a drive shaft. It also provides resources for minimum and maximum measured values, as well as the minimum and maximum range that can be measured by the sensor. An example measurement unit is meters per second (m/s).\n        "
  Description2: ""
  ObjectID: 3346
  ObjectURN: urn:oma:lwm2m:ext:3346
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5700
          name: Sensor Value
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: ""
          description: Last or Current Measured Value from the Sensor.
        - id: 5701
          name: Sensor Units
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Measurement Units Definition.
        - id: 5601
          name: Min Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value measured by the sensor since power ON or reset.
        - id: 5602
          name: Max Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value measured by the sensor since power ON or reset.
        - id: 5603
          name: Min Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value that can be measured by the sensor.
        - id: 5604
          name: Max Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value that can be measured by the sensor.
        - id: 5605
          name: Reset Min and Max Measured Values
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the Min and Max Measured Values to Current Value.
        - id: 5821
          name: Current Calibration
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Read or Write the current calibration coefficient.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
- Name: Rate
  Description1: "This object type should be used to report a rate measurement, for example the speed of a vehicle, or the rotational speed of a drive shaft. It also provides resources for minimum and maximum measured values, as well as the minimum and maximum range that can be measured by the sensor. An example measurement unit is meters per second (m/s).\n        "
  Description2: ""
  ObjectID: 3346
  ObjectURN: urn:oma:lwm2m:ext:3346:1.1
  LWM2MVersion: "1.0"
  ObjectVersion: "1.1"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5700
          name: Sensor Value
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: ""
          description: Last or Current Measured Value from the Sensor.
        - id: 5701
          name: Sensor Units
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Measurement Units Definition.
        - id: 5601
          name: Min Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value measured by the sensor since power ON or reset.
        - id: 5602
          name: Max Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value measured by the sensor since power ON or reset.
        - id: 5603
          name: Min Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value that can be measured by the sensor.
        - id: 5604
          name: Max Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value that can be measured by the sensor.
        - id: 5605
          name: Reset Min and Max Measured Values
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the Min and Max Measured Values to Current Value.
        - id: 5821
          name: Current Calibration
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Read or Write the current calibration coefficient.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
        - id: 5518
          name: Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: The timestamp of when the measurement was performed.
        - id: 6050
          name: Fractional Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0..1
          units: s
          description: Fractional part of the timestamp when sub-second precision is used (e.g., 0.23 for 230 ms).
        - id: 6042
          name: Measurement Quality Indicator
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..23
          units: ""
          description: 'Measurement quality indicator reported by a smart sensor. 0: UNCHECKED No quality checks were done because they do not exist or can not be applied. 1: REJECTED WITH CERTAINTY The measured value is invalid. 2: REJECTED WITH PROBABILITY The measured value is likely invalid. 3: ACCEPTED BUT SUSPICIOUS The measured value is likely OK. 4: ACCEPTED The measured value is OK. 5-15: Reserved for future extensions. 16-23: Vendor specific measurement quality.'
        - id: 6049
          name: Measurement Quality Level
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..100
          units: ""
          description: Measurement quality level reported by a smart sensor. Quality level 100 means that the measurement has fully passed quality check algorithms. Smaller quality levels mean that quality has decreased and the measurement has only partially passed quality check algorithms. The smaller the quality level, the more caution should be used by the application when using the measurement. When the quality level is 0 it means that the measurement should certainly be rejected.
- Name: Push button
  Description1: "This IPSO object is used to report the state of a momentary action push button control and to count the number of times the control has been operated since the last observation.\n        "
  Description2: ""
  ObjectID: 3347
  ObjectURN: urn:oma:lwm2m:ext:3347
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5500
          name: Digital Input State
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: The current state of a digital input.
        - id: 5501
          name: Digital Input Counter
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: The cumulative value of active state detected.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
- Name: Push button
  Description1: "This IPSO object is used to report the state of a momentary action push button control and to count the number of times the control has been operated since the last observation.\n        "
  Description2: ""
  ObjectID: 3347
  ObjectURN: urn:oma:lwm2m:ext:3347:1.1
  LWM2MVersion: "1.0"
  ObjectVersion: "1.1"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5500
          name: Digital Input State
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: The current state of a digital input.
        - id: 5501
          name: Digital Input Counter
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: The cumulative value of active state detected.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
        - id: 5518
          name: Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: The timestamp of when the measurement was performed.
        - id: 6050
          name: Fractional Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0..1
          units: s
          description: Fractional part of the timestamp when sub-second precision is used (e.g., 0.23 for 230 ms).
- Name: Multi-state Selector
  Description1: "This IPSO object is used to represent the state of a Multi-state selector switch with a number of fixed positions.\n        "
  Description2: ""
  ObjectID: 3348
  ObjectURN: urn:oma:lwm2m:ext:3348
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5547
          name: Multi-state Input
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: The current state of a Multi-state input or selector.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
- Name: Multi-state Selector
  Description1: "This IPSO object is used to represent the state of a Multi-state selector switch with a number of fixed positions.\n        "
  Description2: ""
  ObjectID: 3348
  ObjectURN: urn:oma:lwm2m:ext:3348:1.1
  LWM2MVersion: "1.0"
  ObjectVersion: "1.1"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5547
          name: Multi-state Input
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: The current state of a Multi-state input or selector.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
        - id: 5518
          name: Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: The timestamp of when the measurement was performed.
        - id: 6050
          name: Fractional Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0..1
          units: s
          description: Fractional part of the timestamp when sub-second precision is used (e.g., 0.23 for 230 ms).
- Name: Bitmap
  Description1: Summarize several digital inputs to one value by mapping each bit to a digital input.
  Description2: ""
  ObjectID: 3349
  ObjectURN: urn:oma:lwm2m:ext:3349
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5910
          name: Bitmap Input
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Integer in which each of the bits are associated with specific digital input value. Represented as a binary signed integer in network byte order, and in two's complement representation. Using values in range 0-127 is recommended to avoid ambiguities with byte order and negative values.
        - id: 5911
          name: Bitmap Input Reset
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the Bitmap Input value.
        - id: 5912
          name: Element Description
          operations: RW
          multipleinstances: Multiple
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The description of each bit as a string. First instance describes the least significant bit, second instance the second least significant bit.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
- Name: Bitmap
  Description1: Summarize several digital inputs to one value by mapping each bit to a digital input.
  Description2: ""
  ObjectID: 3349
  ObjectURN: urn:oma:lwm2m:ext:3349:1.1
  LWM2MVersion: "1.0"
  ObjectVersion: "1.1"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5910
          name: Bitmap Input
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Integer in which each of the bits are associated with specific digital input value. Represented as a binary signed integer in network byte order, and in two's complement representation. Using values in range 0-127 is recommended to avoid ambiguities with byte order and negative values.
        - id: 5911
          name: Bitmap Input Reset
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the Bitmap Input value.
        - id: 5912
          name: Element Description
          operations: RW
          multipleinstances: Multiple
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The description of each bit as a string. First instance describes the least significant bit, second instance the second least significant bit.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
        - id: 5518
          name: Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: The timestamp of when the measurement was performed.
        - id: 6050
          name: Fractional Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0..1
          units: s
          description: Fractional part of the timestamp when sub-second precision is used (e.g., 0.23 for 230 ms).
- Name: Stopwatch
  Description1: An ascending timer that counts how long time has passed since the timer was started after reset.
  Description2: ""
  ObjectID: 3350
  ObjectURN: urn:oma:lwm2m:ext:3350
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5544
          name: Cumulative Time
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: s
          description: The total time in seconds that the timer input is true. Writing a 0 resets the time.
        - id: 5850
          name: On/Off
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: On/off control. Boolean value where True is On and False is Off.
        - id: 5501
          name: Digital Input Counter
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: The cumulative value of active state detected.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
- Name: Stopwatch
  Description1: An ascending timer that counts how long time has passed since the timer was started after reset.
  Description2: ""
  ObjectID: 3350
  ObjectURN: urn:oma:lwm2m:ext:3350:1.1
  LWM2MVersion: "1.0"
  ObjectVersion: "1.1"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5544
          name: Cumulative Time
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: s
          description: The total time in seconds that the timer input is true. Writing a 0 resets the time.
        - id: 5850
          name: On/Off
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: On/off control. Boolean value where True is On and False is Off.
        - id: 5501
          name: Digital Input Counter
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: The cumulative value of active state detected.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
        - id: 5518
          name: Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: The timestamp of when the measurement was performed.
        - id: 6050
          name: Fractional Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0..1
          units: s
          description: Fractional part of the timestamp when sub-second precision is used (e.g., 0.23 for 230 ms).
        - id: 6042
          name: Measurement Quality Indicator
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..23
          units: ""
          description: 'Measurement quality indicator reported by a smart sensor. 0: UNCHECKED No quality checks were done because they do not exist or can not be applied. 1: REJECTED WITH CERTAINTY The measured value is invalid. 2: REJECTED WITH PROBABILITY The measured value is likely invalid. 3: ACCEPTED BUT SUSPICIOUS The measured value is likely OK. 4: ACCEPTED The measured value is OK. 5-15: Reserved for future extensions. 16-23: Vendor specific measurement quality.'
        - id: 6049
          name: Measurement Quality Level
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..100
          units: ""
          description: Measurement quality level reported by a smart sensor. Quality level 100 means that the measurement has fully passed quality check algorithms. Smaller quality levels mean that quality has decreased and the measurement has only partially passed quality check algorithms. The smaller the quality level, the more caution should be used by the application when using the measurement. When the quality level is 0 it means that the measurement should certainly be rejected.
- Name: powerupLog
  Description1: One time event sent by the device at power up.
  Description2: ""
  ObjectID: 3351
  ObjectURN: urn:oma:lwm2m:ext:3351
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: deviceName
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: Human-readable name of the device
        - id: 1
          name: toolVersion
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: The tool version that the device supports - used to determine the logging object/resource version to be used for parsing
        - id: 2
          name: IMEI
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: IMEI of device
        - id: 3
          name: IMSI
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: IMSI of device
        - id: 4
          name: MSISDN
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: MSISDN of device
- Name: plmnSearchEvent
  Description1: List of all PLMNs found during the initial search/scan
  Description2: ""
  ObjectID: 3352
  ObjectURN: urn:oma:lwm2m:ext:3352
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: timeScanStart
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Modem time when PLMN search is initiated
        - id: 6030
          name: plmnID
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: PLMN - mcc/mnc
        - id: 6031
          name: BandIndicator
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Band Indicator
        - id: 6032
          name: dlEarfcn
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: EARFCN - frequency
- Name: scellID
  Description1: serving cell information that the RRC decides to camp on
  Description2: ""
  ObjectID: 3353
  ObjectURN: urn:oma:lwm2m:ext:3353
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 6030
          name: plmnID
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: PLMN - mcc/mnc
        - id: 6031
          name: BandIndicator
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Band Indicator
        - id: 2
          name: TrackingAreaCode
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Tracking Area Code
        - id: 6033
          name: CellID
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Cell ID.
- Name: cellReselectionEvent
  Description1: cell reselection event information
  Description2: ""
  ObjectID: 3354
  ObjectURN: urn:oma:lwm2m:ext:3354
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: timeReselectionStart
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Modem time when reselection is initiated
        - id: 6032
          name: dlEarfcn
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: EARFCN - frequency
        - id: 6033
          name: CellID
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Cell ID.
        - id: 3
          name: failureType
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: 0 = Pass1= S-Failure2 =Sib-Read-Failure3 = Weak-Downlink-Indicator4 = Cell-Barred5 = Non-Valid-Plmn6 = Forbidden-Tracking-Area7 = Aborted8 = Forbidden-CSG-Id9 = IRAT-Reselection-Failure10 = Frequency-Barred
- Name: handoverEvent
  Description1: handover event information
  Description2: ""
  ObjectID: 3355
  ObjectURN: urn:oma:lwm2m:ext:3355
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: timeHandoverStart
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Modem time when handover is initiated
        - id: 6032
          name: dlEarfcn
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: EARFCN - frequency
        - id: 6033
          name: CellID
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Cell ID.
        - id: 3
          name: handoverResult
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: 0 = Pass1 = InvalidCfg (Validation failure)2 = PhysicalFailure (Physical layer failure on the target cell)3 = Rach (T304 expiry due to RACH failure on target cell)4 = RachMeasConfigIncluded (T304 expiry due to RACH failure on target cell when MeasConfig IE was included)5 = Other (other failure reason than ones above)
        - id: 4
          name: TargetEarfcn
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Target EARFCN
        - id: 5
          name: TargetPhysicalCellID
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Target Physical Cell ID
        - id: 6
          name: targetCellRsrp
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Target Cell RSRP in dBm
- Name: radioLinkFailureEvent
  Description1: Radio Link Failure Event
  Description2: ""
  ObjectID: 3356
  ObjectURN: urn:oma:lwm2m:ext:3356
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: timeRLF
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Modem time when RLF is occurred
        - id: 1
          name: rlfCause
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Radio Link Failure cause0 = configurationFailue1 = handoverFailure2 = rachFailure,3 = maxRetransmission,4 = ipCheckFailue5 = sibReadingFailure6 = mibChange7 = other
- Name: rrcStateChangeEvent
  Description1: Current RRC state change information, including the event that triggered the state change
  Description2: ""
  ObjectID: 3357
  ObjectURN: urn:oma:lwm2m:ext:3357
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: rrcState
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: RRC state 0 =null1 = idleCampedOnAnyCell2 = idleCampedNormally 3 =idlConnecting4 = connectedNormally5 = releasing(when going from connected to idle)
        - id: 1
          name: rrcStateChangeCause
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Trigger for RRC state change 0 = toNull (Generic cause for all state transitions to null state. From any stable state other than null to null state)1 = IdleFromUpperLayer (Camped due to connection aborted from upper layers. From any stable state to idlecampednormally)2 = idleT300Expiry (Camped due to T300expiry. From any stable state other than connectednormally to idlecampednormally)3= idleConnectionReject (Camped due to connection rejected from eNB. From any stable state other than connectednormally to idlecampednormally)4 = idleCellReselectionFailure (Camped due to cell reselection. From idlecampednormally to idlecampednormally)5 = idleBarred (Camped due to access barring. From any stable state to idlecampednormally)6 = idleOtherRrcFailue (Camped due to other reasons. From any stable state to idlecampednormally)7 = idleEnteringLte (From null to idlecampednormally)8 = connectingEmergencyCall (Enter connecting due to emergency call. Any stable state other than connectednormally to connectednormally)9 = connectingHighPriAccess (Enter connecting due to high priority access. From idlecampednormally to connectednormally)10 = connectingReceiveCall (Enter connecting due to receiving call. From idlecampednormally to connectednormally)11 = connectingMakingCall (Enter connecting due to making call. From idlecampednormally to connectednormally)12 = connectingMoData (Enter connecting due to originating a data session. From idlecampednormally to connectednormally)13 = connectedHoFailure (Camped on a cell in connected state due to handover failure. From connectednormally to idlecampednormally or idlecampedonanycell)14 = connectedOther (Camped on a cell in connected state due to other reasons. From connectednormally to idlecampednormally or idlecampedonanycell.15 = releasingT311Expriry (Enter releasing due to T311 expiry. From connected normally to idlecampednormally)16 = releasingT301Expriry (Enter releasing due to T301 expiry. From connected normally to idlecampednormally)17 = releasingReject (Enter releasing due to RRC connection reestablishment reject. From connected normally to idlecampednormally)18 = connectingOther (From idlecampednormally to connectednormally for other procedures like Extended service request, TAU, or RRC reestablishment
- Name: rrcTimerExpiryEvent
  Description1: RRC timer expiry event information
  Description2: ""
  ObjectID: 3358
  ObjectURN: urn:oma:lwm2m:ext:3358
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: RrcTimerExpiryEvent
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: 1 = t3002 = t3013 = t3024 = t3035 = t3046 = t3057 = t3118 = t3209 = t32110 = other
- Name: cellBlacklistEvent
  Description1: Cell blacklist information
  Description2: ""
  ObjectID: 3359
  ObjectURN: urn:oma:lwm2m:ext:3359
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 6032
          name: dlEarfcn
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: EARFCN - frequency
        - id: 6033
          name: CellID
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Cell ID.
- Name: esmContextInfo
  Description1: ESM context information
  Description2: ""
  ObjectID: 3360
  ObjectURN: urn:oma:lwm2m:ext:3360
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: contextType
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: 0=default1=dedicated
        - id: 1
          name: bearerState
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Bearer State0 = null1 = activeWaiting2 = active3 = modifying
        - id: 2
          name: radioBearerId
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Radio bearer ID corresponding to EPS Bearer ID of the context
        - id: 3
          name: qci
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: QoS Class Identifier (TS 23.203)
- Name: emmStateValue
  Description1: EMM context information
  Description2: ""
  ObjectID: 3361
  ObjectURN: urn:oma:lwm2m:ext:3361
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: EmmState
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: 1 = EmmNull2 = EmmDeregistered3 = EmmRegisteredInitiated4 = EmmRegistered5 = EmmTrackingAreaUpdatingInitiated6 = EmmServiceRequestInitiated7 = EmmDeregisteredInitiated
        - id: 1
          name: emmSubstate
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: -- If EMM state is EmmDeregistered(2), EMM sub-state-- EmmDeregisteredNoImsi(1)-- EmmDeregisteredPlmnSearch(2)-- EmmDeregisteredAttachNeeded(3)-- EmmDeregisteredNoCellAvailable(4)-- EmmDeregisteredAttemptingToAttach(5)-- EmmDeregisteredNormalService(6)-- EmmDeregisteredLimitedService(7)-- If EMM state is EmmRegistered(4), EMM sub-state-- EmmRegisteredNormalService(1)-- EmmRegisteredUpdateNeeded(2)-- EmmRegisteredAttemptingToUpdate(3)-- EmmRegisteredNoCellAvailable(4)-- EmmRegisteredPlmnSearch(5)-- EmmRegisteredLimitedService(6)-- EmmRegisteredImsiDetachInitiated(7)-- EmmRegisteredAttemptingToUpdateMm(8)-- Others use invalid EMM Substate value (0)
- Name: nasEmmTimerExpiryEvent
  Description1: NAS EMM timer expiry information
  Description2: ""
  ObjectID: 3362
  ObjectURN: urn:oma:lwm2m:ext:3362
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: NasEmmTimerExpiryEvent
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: 1 = t3410
- Name: nasEsmExpiryEvent
  Description1: NAS ESM timer expiry information
  Description2: ""
  ObjectID: 3363
  ObjectURN: urn:oma:lwm2m:ext:3363
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: NasEsmExpiryEvent
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: 1 = t34802 = t34823 = t34814 = t3492
- Name: emmFailureCauseEvent
  Description1: Triggered at EMM failure - failure cause is logged
  Description2: ""
  ObjectID: 3364
  ObjectURN: urn:oma:lwm2m:ext:3364
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: EMMCause
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: EMM Failure Causes - 3GPP 24.301
- Name: rachLatency_delay
  Description1: RACH Latency & delay information
  Description2: ""
  ObjectID: 3365
  ObjectURN: urn:oma:lwm2m:ext:3365
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 6037
          name: sysFrameNumber
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: System Frame Number.
        - id: 6038
          name: subFrameNumber
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Sub Frame Number.
        - id: 2
          name: rachLatencyVal
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: time in ms between 1st preamble and response from NW in DL
        - id: 3
          name: delay
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: time in ms
- Name: macRachAttemptEvent
  Description1: RACH information. Logged at RACH TX
  Description2: ""
  ObjectID: 3366
  ObjectURN: urn:oma:lwm2m:ext:3366
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: rachAttemptCounter
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: RACH Attempt Counter
        - id: 1
          name: MacRachAttemptEventType
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: 0 = Success1 = Failure-At-Msg-22 = Failure-At-Msg-4-CT-Timer-Expired3 = Failure-At-Msg-4-CT-Resolution-Not-Passed4 = Aborted
        - id: 2
          name: contentionBased
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: 1 = Contention based0 = otherwise
        - id: 3
          name: rachMessage
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: 1 = MSG 12 = MSG 23 = MSG 3
        - id: 4
          name: preambleIndex
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: preambleIndex=There are 64 preambles available in each cell. Range is from 0-63. (3GPP 36.211)
        - id: 5
          name: preamblePowerOffset
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: preamblePowerOffset= stepsize*preamble transmission number
        - id: 6
          name: backoffTime
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Backoff Time
        - id: 7
          name: msg2Result
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: 1 = pass0 = fail
        - id: 8
          name: timingAdjustmentValue
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Timing Adjustment Value
- Name: macRachAttemptReasonEvent
  Description1: RACH Information - reason for initiating RACH
  Description2: ""
  ObjectID: 3367
  ObjectURN: urn:oma:lwm2m:ext:3367
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: MacRachAttemptReasonType
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: 1 = Connection-Request2 = Radio-Link-Failure3 = UL-Data-Arrival4 = DL-Data-Arrival5 = Handover
        - id: 1
          name: ueID
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: UE ID
        - id: 2
          name: contentionBased
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: 1 = Contention based0 = otherwise
        - id: 3
          name: preamble
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: preamble= The random access preambles are generated from Zadoff-Chu sequences with zero correlation zone (3GPP TS 36.211)
        - id: 4
          name: preambleGroupChosen
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: '0: Group A, 1: Group B'
- Name: macTimerStatusEvent
  Description1: MAC timer expiry information
  Description2: ""
  ObjectID: 3368
  ObjectURN: urn:oma:lwm2m:ext:3368
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: macTimerName
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: 0 = TA1 = RA2 = Contention3 = RACH_Back_Off
- Name: macTimingAdvanceEvent
  Description1: Timing advance information
  Description2: ""
  ObjectID: 3369
  ObjectURN: urn:oma:lwm2m:ext:3369
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: timerValue
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Timer Value
        - id: 1
          name: timingAdvance
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Timing Advance
- Name: ServingCellMeasurement
  Description1: Serving Cell Measurement
  Description2: ""
  ObjectID: 3370
  ObjectURN: urn:oma:lwm2m:ext:3370
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 6037
          name: sysFrameNumber
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: System Frame Number.
        - id: 6038
          name: subFrameNumber
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Sub Frame Number.
        - id: 6034
          name: pci
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: PCI.
        - id: 6035
          name: rsrp
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: RSRP Value in dBm (-180..-30)
        - id: 6036
          name: rsrq
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: RSRQ Value in dB (-30..10)
        - id: 6032
          name: dlEarfcn
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: EARFCN - frequency
- Name: NeighborCellMeasurements
  Description1: Neighbor Cell Measurements
  Description2: ""
  ObjectID: 3371
  ObjectURN: urn:oma:lwm2m:ext:3371
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 6037
          name: sysFrameNumber
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: System Frame Number.
        - id: 6038
          name: subFrameNumber
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Sub Frame Number.
        - id: 6034
          name: pci
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: PCI.
        - id: 6035
          name: rsrp
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: RSRP Value in dBm (-180..-30)
        - id: 6036
          name: rsrq
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: RSRQ Value in dB (-30..10)
        - id: 6032
          name: dlEarfcn
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: EARFCN - frequency
- Name: TimingAdvance
  Description1: Timing Advance Information
  Description2: ""
  ObjectID: 3372
  ObjectURN: urn:oma:lwm2m:ext:3372
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 6037
          name: sysFrameNumber
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: System Frame Number.
        - id: 6038
          name: subFrameNumber
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Sub Frame Number.
        - id: 2
          name: timingAdvance
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: in TA units microseconds
- Name: txPowerHeadroomEvent
  Description1: TX power headroom information
  Description2: ""
  ObjectID: 3373
  ObjectURN: urn:oma:lwm2m:ext:3373
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 6037
          name: sysFrameNumber
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: System Frame Number.
        - id: 6038
          name: subFrameNumber
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Sub Frame Number.
        - id: 2
          name: headroom-value
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: headroom value in dB (-23..40)
- Name: radioLinkMonitoring
  Description1: Radio Link monitoring information maintained by RRC
  Description2: ""
  ObjectID: 3374
  ObjectURN: urn:oma:lwm2m:ext:3374
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 6037
          name: sysFrameNumber
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: System Frame Number.
        - id: 6038
          name: subFrameNumber
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Sub Frame Number.
        - id: 2
          name: outOfSyncCount
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: out of sync count
        - id: 3
          name: inSyncCount
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: in Sync Count
        - id: 4
          name: t310Timer
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: 0=stopped, 1=running
- Name: PagingDRX
  Description1: Paging DRX information
  Description2: ""
  ObjectID: 3375
  ObjectURN: urn:oma:lwm2m:ext:3375
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 6032
          name: dlEarfcn
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: EARFCN - frequency
        - id: 6034
          name: pci
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: PCI.
        - id: 2
          name: pagingCycle
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Paging Cycle
        - id: 3
          name: DrxNb
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: DRX NB
        - id: 4
          name: ueID
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: IMSI mod 1024
        - id: 5
          name: drxSysFrameNumOffset
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: drxSysFrameNumOffset is used to obtain the starting system frame number for DRX cycle
        - id: 6
          name: drxSubFrameNumOffset
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: drxSubFrameNumOffset is used to obtain the starting sub frame number for DRX cycle
- Name: txPowerBackOffEvent
  Description1: TX Power backoff information
  Description2: ""
  ObjectID: 3376
  ObjectURN: urn:oma:lwm2m:ext:3376
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: TxPowerBackoff
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: TX Power Backoff
- Name: Message3Report
  Description1: RACH message 3 report information
  Description2: ""
  ObjectID: 3377
  ObjectURN: urn:oma:lwm2m:ext:3377
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: tpc
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: TPC
        - id: 1
          name: resourceIndicatorValue
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Resource Indicator Value
        - id: 2
          name: cqi
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: CQI
        - id: 3
          name: uplinkDelay
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: 0=no delay, 1=delay
        - id: 4
          name: hoppingEnabled
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: 0=Disabled, 1=Enabled
        - id: 5
          name: numRb
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: num RB
        - id: 6
          name: transportBlockSizeIndex
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Transport Block Size Index
        - id: 7
          name: ModulationType
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Modulation Type
        - id: 8
          name: redundancyVersionIndex
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Redundancy Version Index
- Name: PbchDecodingResults
  Description1: Serving cell PBCH decoding information
  Description2: ""
  ObjectID: 3378
  ObjectURN: urn:oma:lwm2m:ext:3378
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: servingCellID
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Serving Cell ID
        - id: 1
          name: crcResult
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: fail=0pass=1
        - id: 6037
          name: sysFrameNumber
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: System Frame Number.
- Name: pucchPowerControl
  Description1: PUCCH TX power control information
  Description2: ""
  ObjectID: 3379
  ObjectURN: urn:oma:lwm2m:ext:3379
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 6037
          name: sysFrameNumber
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: System Frame Number.
        - id: 6038
          name: subFrameNumber
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Sub Frame Number.
        - id: 2
          name: pucchTxPowerValue
          operations: ""
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: PUCCH Tx power measurement in dB (-112..23)
        - id: 3
          name: dlPathLoss
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Downlink path loss calculated in UE (0..255)
- Name: PrachReport
  Description1: PRACH report information
  Description2: ""
  ObjectID: 3380
  ObjectURN: urn:oma:lwm2m:ext:3380
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 6037
          name: sysFrameNumber
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: System Frame Number.
        - id: 6038
          name: subFrameNumber
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Sub Frame Number.
        - id: 2
          name: rachTxPower
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: PRACH tx power in dB (-112..23)
        - id: 3
          name: zadOffSeqNum
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: ZadOFF Sequence Number (0..837)
        - id: 4
          name: prachConfig
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Random access preamble timing for a range of preamble formats (0..64)
        - id: 5
          name: preambleFormat
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Preamble Format (0..4)
        - id: 6
          name: maxTransmissionMsg3
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Max number of HARQ re-transmissions from UE for RACH message 3 (1..8)
        - id: 7
          name: raResponseWindowSize
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Window size for reception of RACH message 2 (2..10)
        - id: 8
          name: RachRequestResult
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: RACH Request success/failure - 0=fail, 1=pass
        - id: 9
          name: ce_mode
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: CE_mode
        - id: 10
          name: ce_level
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: CE level
        - id: 11
          name: num_prach_repetition
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Number of PRACH Repetitions
        - id: 12
          name: prach_repetition_seq
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: PRACH Repetition seq
- Name: PrachReport
  Description1: PRACH report information
  Description2: ""
  ObjectID: 3380
  ObjectURN: urn:oma:lwm2m:ext:3380:2.0
  LWM2MVersion: "1.0"
  ObjectVersion: "2.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 6037
          name: sysFrameNumber
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: System Frame Number.
        - id: 6038
          name: subFrameNumber
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Sub Frame Number.
        - id: 2
          name: rachTxPower
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: PRACH tx power in dB (-112..23)
        - id: 3
          name: zadOffSeqNum
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: ZadOFF Sequence Number (0..837)
        - id: 4
          name: prachConfig
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Random access preamble timing for a range of preamble formats (0..64)
        - id: 5
          name: preambleFormat
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Preamble Format (0..4)
        - id: 6
          name: maxTransmissionMsg3
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Max number of HARQ re-transmissions from UE for RACH message 3 (1..8)
        - id: 7
          name: raResponseWindowSize
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Window size for reception of RACH message 2 (2..10)
        - id: 8
          name: RachRequestResult
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: RACH Request success/failure - 0=fail, 1=pass
        - id: 9
          name: ce_mode
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: CE_mode
        - id: 10
          name: ce_level
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: CE level
        - id: 11
          name: num_prach_repetition
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Number of PRACH Repetitions
        - id: 12
          name: prach_repetition_seq
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: PRACH Repetition seq
- Name: VolteCallEvent
  Description1: VoLTE call status
  Description2: ""
  ObjectID: 3381
  ObjectURN: urn:oma:lwm2m:ext:3381
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: callStatus
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: 0 = Inactive call1 = Active call2 = Attempting3 = Hold
        - id: 1
          name: callType
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: 0 = Emergency1 = Voice call
- Name: SipRegistrationEvent
  Description1: SIP Registration status
  Description2: ""
  ObjectID: 3382
  ObjectURN: urn:oma:lwm2m:ext:3382
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: registrationType
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: 1 = Normal2 = Emergency
        - id: 1
          name: registrationResult
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: 0 = Success (when 200 OK is received)1 = Failure (when any error other than 401 is received, else when 408 timeout occurs)
- Name: sipPublishEvent
  Description1: SIP Publish status
  Description2: ""
  ObjectID: 3383
  ObjectURN: urn:oma:lwm2m:ext:3383
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: publishResult
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: -1 = Publish message not available0 = Success (when 200 OK is received)1 = Failure (when any error other than 401 is received; else when 408 timeout occurs)
- Name: sipSubscriptionEvent
  Description1: SIP Subscription status
  Description2: ""
  ObjectID: 3384
  ObjectURN: urn:oma:lwm2m:ext:3384
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: eventType
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: -obtained header of the SUBSCRIBE1 = Registration2 = Presence3 = Conference4 = Dialog5 = Call-info
        - id: 1
          name: subscriptionResult
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: -1 = Event subscription message not available0 = Success (when 200 OK received is followed by NOTIFY, and applies to all Event Types)1 = Failure (when any error other than 401 is received; else when 408 timeout occurs)
- Name: volteCallStateChangeEvent
  Description1: VoLTE call status change
  Description2: ""
  ObjectID: 3385
  ObjectURN: urn:oma:lwm2m:ext:3385
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: callStatus
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: 0 = Inactive call1 = Active call2 = Attempting3 = Hold
        - id: 1
          name: VolteCallStateChangeCause
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: 0 = Not available1 = Normal Call Clearing2 = Call Drop
- Name: VoLTErtpPacketLoss
  Description1: Log is generated at the receiving end of RTP flow when newReceivedSequenceNumber - lastReceivedSequenceNumber > 1
  Description2: ""
  ObjectID: 3386
  ObjectURN: urn:oma:lwm2m:ext:3386
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: ssrc
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: id of RTP stream
        - id: 1
          name: packetsLost
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Number of RTP packets lost
- Name: oA Basic Control
  Description1: The 'oA Basic Control' represents a common basic interface for a Control Function. This allows to have vendor specific (executing) control functions using diverse object numbers to be interfaced for the basic functionality in a common way. The object provides the basic functionality required for an OpenAIS control object.
  Description2: ""
  ObjectID: 3387
  ObjectURN: urn:oma:lwm2m:ext:3387
  LWM2MVersion: "1.1"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 4001
          name: ObjectVersion
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: LWM2M Object versioning label.
        - id: 901
          name: Documentary Description
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: 0..256 bytes
          units: ""
          description: Resource to hold a documentary text description of the object.
        - id: 800
          name: Control Function Status
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: '0: disabled1: normal2: remote3: local255: non_responsive'
          units: ""
          description: 'Current behaviour status of the control function:n* **0: disabled** (The control function is disabled (see Object_Enabled). The control logic is still enabled and processes incoming events and updates the current state, but doesn''t create outgoing events. No sensor or actuator mimicking actions are performed when in disabled mode.)n* **1: normal** (The local control is fully operational, a superior control object can override the actual control using the northbound interface, but has no guarantee that a sensor or User Interface event overrides this without any warning.)n* **2: remote** (No actuator actions related to sensor signals received via the eastbound interface are performed. The Remote state is e.g. used to allow the superior control to handle the actuators individually through the westbound interface, using its own algorithms.)n* **3: local** (Set to local, a control object will no longer execute requests coming through the northbound interface. The sensor mimicking and the control status setting remains operational. This operating mode isolates the control object from superior control objects, and may be used e.g. to support troubleshooting and error triage handling.)n* **255: non responsive** (internal failure)'
        - id: 812
          name: Ghost Status
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Indicates if the control function is in ghost mode. In ghost mode, no actuator commands are sent out, all operation is kept internal. The northbound interface with the mimicked sensor and status values are provided. This ghost status may be used e.g. as a backup control object that can jump in when the operational control object fails and stops setting the superseded status.
        - id: 801
          name: Control Object Mode
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: '1: normal2: remote3: local'
          units: ""
          description: Configures the mode of this control function instance, see Control_Function_Status.
        - id: 802
          name: Ghost Configuration
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: 0..65535
          units: ""
          description: Configures if this control function instance is in ghost mode (see Ghost_Status).
        - id: 813
          name: Supersede Heartbeat Time
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: s
          description: The default time another active controller is assumed to take over (see Supersede_Heartbeat).
        - id: 803
          name: Controlled Application Group ID
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..65535
          units: ""
          description: Application Group ID of the controlled actuators.
        - id: 806
          name: Push-Button Event Configuration
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 0..255
          units: ""
          description: 'Configures the reaction on button events: Bitwise: 0 (LSB): switch-on, 1: switch-off, 2: darker, 3: brighter, 4: save n**Reaction on CLICK event:**n* If the switch-on and switch-off bits are not set, the CLICK event is ignored.n* If only the switch-on bit is set, the CLICK event always switches to On-State.n* If only the switch-off bit is set, the CLICK event always switches to Off-State.n* If the switch-on and switch-off bits are set, the CLICK event toggles between Off-State and On-State.nn**Reaction on HOLD event:**n* If the darker and brighter bits are not set, the HOLD event is ignored.n* If only the darker bit is set, the HOLD event always starts a dim darker process.n* If only the brighter bit is set, the HOLD event always starts a dim brighter process.n* If the darker and brighter bits are set, the HOLD event is allowed to toggle the dimming direction for each new dimming process.nn**Reaction on DOUBLE-CLICK event:**n* If the save bit is not set, the DOUBLE-CLICK event is ignored.n* If the save bit is set, the DOUBLE-CLICK event saves the current situation.'
        - id: 807
          name: Presence Sensor Event Configuration
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 0..255
          units: ""
          description: 'Configures the reaction on presence sensor events: Bitwise: 0 (LSB): presence, 1: absence n* The presence bit enables or disables activities based on the presence event.n *Note: This setting may allow to set the ''only off'' behavior.*n* The absence bit enables or disables activities based on the absence event.'
        - id: 909
          name: Executing Object
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Corelnk
          rangeenumeration: ""
          units: ""
          description: Link to the Object Instance in CoRE Link Format [RFC6690](https://tools.ietf.org/html/rfc6690)
        - id: 805
          name: Supersede Heartbeat
          operations: W
          multipleinstances: Single
          mandatory: Optional
          type: Unsigned Integer
          rangeenumeration: 0..65535
          units: s
          description: 'This resource is used by active control functions (in the same application group) to take over the control functionality. By writing this resource, the IP address of the origin CoAP client is added to the Active-Controller-List.nIf no heartbeat is received after the specified time the not sending controller is taken out of the active controller list again, if there are no more active controllers this controller takes over: This is a fall-back to normal or local operation, if superseding control fails/gets lost.nnIf the Ghost Configuration is TRUE, the Control Function Status changes to ''ghost'' if a controller is active.nnIf operation mode is set to remote, it will be reset to normal if the active controller list gets empty.'
        - id: 905
          name: Debug Mode Enabled
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Enables the object test mode. The physical representation of the object will be disabled. Stimuli can be injected to test the object remotely using inject test event.
        - id: 906
          name: Inject Test Event
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Unsigned Integer
          rangeenumeration: 0..65535
          units: ""
          description: Defines the test event to be injected into the system when debug mode is enabled. Event definition is vendor specific.
        - id: 934
          name: Execute Inject
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: When executed, the test event defined in resource 906 will be injected
        - id: 924
          name: Object Enabled
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: This resource allows to disable an object instance. nIf an object instance is disabled it does process incoming events but does not create outgoing events.
        - id: 811
          name: Active-Controller-List
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: IP Address of the Controller that has taken over control. The list also contains the time the other control function is considered to be active. This time can be refreshed by periodic execution of the Ghost_Heartbeat.nnThis list only has entries if the control function is in ghost mode (see Control_Function_Status). When the Remaining_Active_Time of one entry expires, the entry is removed. If this results in an empty list, the Control_Function_Status changes the state to the mode configured in Control_Object_Mode if the state is not 'disabled'.
- Name: oA Device
  Description1: The 'oA Device' represents the OpenAIS specific parameters of a Device that are necessary in addition to the LWM2M Device.
  Description2: ""
  ObjectID: 3388
  ObjectURN: urn:oma:lwm2m:ext:3388
  LWM2MVersion: "1.1"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 4001
          name: ObjectVersion
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: LWM2M Object versioning label.
        - id: 901
          name: Documentary Description
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: 0..256 bytes
          units: ""
          description: Resource to hold a documentary text description of the object.
        - id: 907
          name: Error Status
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 0..65535
          units: ""
          description: 'Error status is a bit coded value that shows all current errors on the object. The error status changes as soon as a new error occurs or an old one is resolved. Bitwise: 0 (LSB): Communication_Error, 1: Power_Supply_Error, 2: Firmware_Error, 3: Over_Temperature, 4: Vendor_Specific_Error_1, 5: Vendor_Specific_Error_2, 6: Vendor_Specific_Error_3, 7: Vendor_Specific_Error_4, 8: Vendor_Specific_Error_5, 9: Vendor_Specific_Error_6, 10: Vendor_Specific_Error_7, 11: Vendor_Specific_Error_8, 12: Vendor_Specific_Error_9, 13: Vendor_Specific_Error_10, 14: Vendor_Specific_Error_11, 15: Vendor_Specific_Error_12'
        - id: 500
          name: OEM ID
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: 0..64 bytes
          units: ""
          description: 'OEM ID: Identifies the OEM product (using its GTIN) that has this (electronic) device built in'
        - id: 501
          name: OEM String
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: 0..64 bytes
          units: ""
          description: Human readable OEM ID, e.g. the OEM company and product name that has this (electronic) device built in
        - id: 929
          name: BMS ID
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Unsigned Integer
          rangeenumeration: 0..65535
          units: ""
          description: 'ID to be used in BMS: identifies the devices role in the (BMS) system'
        - id: 503
          name: CPU Temperature
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: -128..127
          units: C
          description: Current temperature of the CPU
        - id: 504
          name: Executing Objects
          operations: R
          multipleinstances: Multiple
          mandatory: Mandatory
          type: Corelnk
          rangeenumeration: ""
          units: ""
          description: Link to Physical Object Instances that are part of this device in CoRE Link Format [RFC6690](https://tools.ietf.org/html/rfc6690)
        - id: 910
          name: Total Energy Usage
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 0..18446744073709551615
          units: Ws
          description: The total energy usage of the device (accumulated value)
        - id: 911
          name: Actual Power Usage
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 0..4294967295
          units: W
          description: The actual power usage of the device. Scaling is 0.1W / unit
        - id: 912
          name: Accuracy Class
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: 0..64 bytes
          units: ""
          description: The accuracy class of the energy sensor on the device (using either % accuracy or a letter that defines the accuracy class)
        - id: 908
          name: Mounting Location
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: 1..64 bytes
          units: ""
          description: Describes the location of the device within the building. The content of the string is site specific.
        - id: 505
          name: System Failure Time
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Unsigned Integer
          rangeenumeration: 0..65535
          units: ms
          description: When the Object is not able to communicate with a control function in the network, in this case for a period of 10s, the connection is considered lost and the light point automatically sets to the value indicated in 'System Failure Intensity'.
- Name: oA Group
  Description1: The 'oA Group' represents a group. It contains an application group ID, a security group ID and a list of multicast and unicast IP addresses that are used in the group. \nAdditionally it contains a list of all members of the group.
  Description2: ""
  ObjectID: 3389
  ObjectURN: urn:oma:lwm2m:ext:3389
  LWM2MVersion: "1.1"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 4001
          name: ObjectVersion
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: LWM2M Object versioning label.
        - id: 901
          name: Documentary Description
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: 0..256 bytes
          units: ""
          description: Resource to hold a documentary text description of the object.
        - id: 600
          name: Application Group ID
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 0..65535
          units: ""
          description: Identifier of the application group
        - id: 601
          name: Security Group ID
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 0..65535
          units: ""
          description: Identifier of the security group
        - id: 602
          name: IP Addresses
          operations: RW
          multipleinstances: Multiple
          mandatory: Mandatory
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: List of multicast and unicast IPv6 addresses to be used for outgoing group messages
        - id: 603
          name: Members
          operations: RW
          multipleinstances: Multiple
          mandatory: Mandatory
          type: Corelnk
          rangeenumeration: ""
          units: ""
          description: 'Link to the local object instances (and/or single resources) that are members of that group in CoRE Link Format [RFC6690](https://tools.ietf.org/html/rfc6690)nNote: instances and resources not listed here will not be addressable on this node through group messages of this group'
- Name: oA Logical Colour Light-Point Actuator
  Description1: The 'oA Logical Colour Light Point Actuator' represents the logical part of an actuator model for a colour light point. The corresponding physical device is a light channel and associated gear (e.g. LED driver).\nThe Object (module) supports several interactions that include absolute and relative colour setting. Several device configuration parameters are mapped, which relate to behaviour or describe device limitations.
  Description2: ""
  ObjectID: 3390
  ObjectURN: urn:oma:lwm2m:ext:3390
  LWM2MVersion: "1.1"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 4001
          name: ObjectVersion
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: LWM2M Object versioning label.
        - id: 901
          name: Documentary Description
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: 0..256 bytes
          units: ""
          description: Resource to hold a documentary text description of the object.
        - id: 125
          name: Target Colour X
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 0..65535
          units: ""
          description: 'This Resource represents the target colour X value requested to the Light Point. Scale is: 0.001'
        - id: 126
          name: Target Colour Y
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 0..65535
          units: ""
          description: This Resource represents the target colour Y value requested to the Light Point. Scaling is 0.001 per Unit, Value conforms to CIE color definition
        - id: 909
          name: Executing Object
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Corelnk
          rangeenumeration: ""
          units: ""
          description: Link to the Object Instance in CoRE Link Format [RFC6690](https://tools.ietf.org/html/rfc6690)
        - id: 921
          name: Priority
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 0..5
          units: ""
          description: The priority of this Logical Object. If a Logical Object with a higher priority controlles the same physical object, this instance will hold its settings until its priority is sufficient again. nIf the priorities are the same the last one is served.
        - id: 127
          name: Colour Changing Time
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 0..65535
          units: ms
          description: Defines the time needed to change the light point output from minimum hue/saturation to maximum hue/saturation. The resulting change rate is used for the relative changes of the colour request. Scaling is 100ms per Unit
        - id: 128
          name: Colour Transition Time
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 0..65535
          units: ms
          description: Defines the default transition time to be used for 'Set_Colour' and 'Step' requests, if that request has no value specified. A value of 0 means the transaction is immediate. Scaling is 100ms per unit
        - id: 129
          name: Hue Step Size
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 0..65535
          units: ""
          description: Defines the default step size to be used for 'Hue Step' requests, if that request has no value specified. The Hue is in relative units (0..1), scaling is 0.001 per unit, so the integers given are at factor 1000.
        - id: 130
          name: Saturation Step Size
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 0..65535
          units: ""
          description: Defines the default step size to be used for 'Saturation Step' requests, if that request has no value specified. The Saturation is in relative units (0..1), scaling is 0.001 per unit, so the integers given are at factor 1000.
        - id: 903
          name: Application Group ID
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 0..65535
          units: ""
          description: The application group ID that the logical object is part of. This ID will define the application group the status reports are sent to. It is internally used as a pointer to the Group Object instance that hosts all the Group configurations.
        - id: 904
          name: Status Resend Time
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 1..600
          units: s
          description: 'The time specified as status resend time is used to resend the actual status to the application group the object is a member of, even if nothing changed.nThe status resend time is restarted after every event. The actual interval is a random time with the maximum duration given by this resource. Randomization helps to avoid massive ongoing message collisions after system power up.nFor example: Status resend time is set to 10 seconds;n* 00:00 status is sentn* 00:05 status changes and is sent immediatlyn* 00:15 (or before, depending on the randomization) status is sent even though it did not change'
        - id: 919
          name: Status Report Structure ID
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 0..255
          units: ""
          description: The ID of the status resource structure that is used to code the cyclic status report. See object 4012 'oA Status Report Structure' for more information
        - id: 922
          name: Scene Cache
          operations: RW
          multipleinstances: Multiple
          mandatory: Optional
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: A cache for the scene values. These values should be called when a scene is recalled. It is buildt from a Scene_ID (UInt 16, a target resource (Corelnk) defineition, and a payload that operates on this resource), a transition time in ms (UInt16), and an action (Put/Post) defintion
        - id: 131
          name: Set Colour
          operations: W
          multipleinstances: Single
          mandatory: Mandatory
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: 'This Resource allows to set the colour of a light point using the following arguments:n- *arg0: Colour x* - final colour x valuen- *arg1: Colour y* - final colour y valuen- *arg2: Time* - transition time with 100ms resolutionnn**Note:** When the optional argument time is not given, or if its value is empty the default configuration value is used.nA request on this Resource will immediately update ''Remaining Transition Time'' and ''Current Colour'' until the Set Colour operation is cloncluded.'
        - id: 134
          name: Relative Change Saturation
          operations: W
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: This Resource allows to change the saturation relatively:n- *Direction* [mandatory] direction of changen**Note:** During this process, the 'Current Colour' and 'Remaining Transition Time' are continuously updated.If this Resource is executed while another colour variation process is running, the ongoing process is stopped and the new process begins using the actual colour as starting point.nnSome examples:n- `POST coap://<target_IP_address>/<dir>/<Obj_ID>/<obj_instance>/118 0`ndecreases saturation.n- `POST coap://<target_IP_address>/<dir>/<Obj_ID>/<obj_instance>/118 1`nincreases saturation.
        - id: 132
          name: Relative Change Hue
          operations: W
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: This Resource allows to change the hue relatively:n- *Direction* [mandatory] direction of changen**Note:** During this process, the 'Current Colour' and 'Remaining Transition Time' are continuously updated. If this Resource is executed while another colour variation process is running, the ongoing process is stopped and the new process begins using the colour values at that specific moment as starting point.nnSome examples:n- `POST coap://<target_IP_address>/<dir>/<Obj_ID>/<obj_instance>/118 0`nincreases hue.n- `POST coap://<target_IP_address>/<dir>/<Obj_ID>/<obj_instance>/118 1`ndecreases hue.
        - id: 136
          name: Stop Transition
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: When written, it immediately stops all ongoing transition processes (absolute or relative). 'Current Colour' maintains the value it has at that moment and 'Remaining Transition Time' is set to '0'. Payload is not required, however, a success/failure message is recommended.
        - id: 135
          name: Step Saturation
          operations: W
          multipleinstances: Single
          mandatory: Mandatory
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: 'This resource allows to increase and decrease the saturation of the colour light point by a given step size. nThe following paramters are used:n- *arg0: Direction* - step direction (true=increase saturation, false=decrease saturation)n- *arg1: Step Size* - the size of the stepn- *arg2: Transition Time* - transition time with 100ms resolutionnn**Note:** During this process, the ''Remaining Transition Time'' and ''Current Colour'' are continuously updated.nIf this Resource is executed while another colour variation process is running, the ongoing is stopped and this new process is started, using the current colour value as a starting point.'
        - id: 133
          name: Step Hue
          operations: W
          multipleinstances: Single
          mandatory: Mandatory
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: 'This resource allows to increase and decrease the hue of the colour light point by a given step size. nThe following paramters are used:n- *arg0: Direction* - step direction (true=increase hue, false=decrease hue)n- *arg1: Step Size* - the size of the stepn- *arg2: Transition Time* - transition time with 100ms resolutionnn**Note:** During this process, the ''Remaining Transition Time'' and ''Current Colour'' are continuously updated.nIf this Resource is executed while another colour variation process is running, the ongoing is stopped and this new process is started, using the current colour value as a starting point.'
        - id: 902
          name: Recall Scene
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 0..65535
          units: ""
          description: When written, the scene with the given ID is recalled immediately.
        - id: 905
          name: Debug Mode Enabled
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Enables the object test mode. The physical representation of the object will be disabled. Stimuli can be injected to test the object remotely using inject test event.
        - id: 906
          name: Inject Test Event
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Unsigned Integer
          rangeenumeration: 0..65535
          units: ""
          description: Defines a test event for injection into the system when debug mode is enabled. Event definition is vendor specific.
        - id: 934
          name: Execute Inject
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Executes the injection of a test event as specified in 906
        - id: 924
          name: Object Enabled
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: This resource allows to disable an object instance. nIf an object instance is disabled it does process incoming events but does not create outgoing events.
- Name: oA Logical Colour Temperature Light-Point Actuator
  Description1: The 'oA Logical Colour_Temperature Light Point Actuator' represents the logical part of an actuator model for a tunable white light point. The corresponding physical device is a light channel and associated gear (e.g. LED driver).\nThe Object (module) supports several interactions that include absolute and relative colour temperature setting. Several device configuration parameters are mapped, which relate to behaviour or describe device limitations. Note that the overall intensity is not controlled by this object, it remains controlled by a logical light point object to ease dimming action across tuneable, coloured and non coloured lights. Please note also, that the corresponding executing object does not need to be restricted to tuneable white operation.
  Description2: ""
  ObjectID: 3391
  ObjectURN: urn:oma:lwm2m:ext:3391
  LWM2MVersion: "1.1"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 4001
          name: ObjectVersion
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: LWM2M Object versioning label.
        - id: 901
          name: Documentary Description
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: 0..256 bytes
          units: ""
          description: Resource to hold a documentary text description of the object.
        - id: 146
          name: Target Colour Temperature
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 0..65535
          units: K
          description: This Resource represents the target colour temperature requested to the Light Point. On reset this value should be set to 5000. On a Power cycle, the Target colour temperature is set according to 'On Behaviour'.
        - id: 909
          name: Executing Object
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Corelnk
          rangeenumeration: ""
          units: ""
          description: Link to the Object Instance in CoRE Link Format [RFC6690](https://tools.ietf.org/html/rfc6690)
        - id: 921
          name: Priority
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 0..5
          units: ""
          description: The priority of this Logical Object. If a Logical Object with a higher priority controlles the same physical object, this instance will hold its settings until its priority is sufficient again. nIf the priorities are the same the last one is served.
        - id: 139
          name: Colour Temperature Changing Time
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 0..65535
          units: ms
          description: Defines the time needed to change the light point from minimum colour temperature to maximum colour temperature. The resulting change rate is used for every colour temperature shift request. Scaling is 100ms per unit
        - id: 140
          name: Colour Temperature Transition Time
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 0..65535
          units: ms
          description: Defines the default transition time to be used for 'Set_Colour_Temperature' and 'Step' requests, if that request has no value specified. A value of 0 means the transaction is immediate. Scaling is 100ms per unit
        - id: 141
          name: Colour Temperature Step Size
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 0..65535
          units: K
          description: Defines the default step size to be used for 'Step' requests, if that request has no value specified.
        - id: 903
          name: Application Group ID
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 0..65535
          units: ""
          description: The application group ID that the logical object is part of. This ID will define the application group the status reports are sent to. It is internally used as a pointer to the Group Object instance that hosts all the Group configurations.
        - id: 904
          name: Status Resend Time
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 1..600
          units: s
          description: 'The time specified as status resend time is used to resend the actual status to the application group the object is a member of, even if nothing changed.nThe status resend time is restarted after every event. The actual interval is a random time with the maximum duration given by this resource. Randomization helps to avoid massive ongoing message collisions after system power up.nFor example: Status resend time is set to 10 seconds;n* 00:00 status is sentn* 00:05 status changes and is sent immediatlyn* 00:15 (or before, depending on the randomization) status is sent even though it did not change'
        - id: 919
          name: Status Report Structure ID
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 0..255
          units: ""
          description: The ID of the status resource structure that is used to code the cyclic status report. See object 4012 'oA Status Report Structure' for more information
        - id: 922
          name: Scene Cache
          operations: RW
          multipleinstances: Multiple
          mandatory: Optional
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: A cache for the scene values. These values should be called when a scene is recalled. It is buildt from a Scene_ID (UInt 16, a target resource (Corelnk) defineition, and a payload that operates on this resource), a transition time in ms (UInt16), and an action (Put/Post) defintion
        - id: 142
          name: Set Colour Temperature
          operations: W
          multipleinstances: Single
          mandatory: Mandatory
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: 'This Resource allows to set the colour temperature to an absolute value. Possible arguments are:n- *arg0: Colour Temperature* - final colour temperature valuen- *arg1: Transition Time* - transition time with 100ms resolutionnn**Note:** When the optional argument time is not given, or if its value is empty the default configuration value is used.nA request on this Resource will immediately update ''Remaining Transition Time'' and ''Current Colour Temperature'' until the Set Colour Temperature operation is cloncluded.'
        - id: 143
          name: Relative Change Colour Temperature
          operations: W
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: This Resource allows to change the colour temperature relatively:n- *Direction* [mandatory] direction of colour temperature changen**Note:** During this process, the 'Current Colour Temperature' and 'Remaining Transition Time' are continuously updated. If this Resource is executed while another colour temperature variation process is running, the ongoing process is stopped and the relative change process begins using as starting point the colour temperature value at that specific moment.nnSome examples:n- `POST coap://<target_IP_address>/<dir>/<Obj_ID>/<obj_instance>/118 0`nreduces the colour temperature.n- `POST coap://<target_IP_address>/<dir>/<Obj_ID>/<obj_instance>/118 1`nincreases the colour temperature.
        - id: 144
          name: Stop Transition
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: When executed, it immediately stops all ongoing transition processes. 'Current Colour Temperature' maintains the value it has at that moment and 'Remaining Transition Time' is set to '0'.
        - id: 145
          name: Step Colour Temperature
          operations: W
          multipleinstances: Single
          mandatory: Mandatory
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: 'This resource allows to increase and decrease the colour temperature of the light point by a given step size. nThe following paramters are used:n- *arg0: Direction* - step direction (true=increase, false=decrease)n- *arg1: Step Size* - the size of the stepn- *arg2: Transition Time* - transition time with 100ms resolutionnn**Note:** During this process, the ''Remaining Transition Time'' and ''Current Colour Temperature'' are continuously updated.nIf this Resource is executed while another colour temperature variation process is running, the ongoing is stopped and this new process is started, using the current colour temperature value as a starting point.'
        - id: 902
          name: Recall Scene
          operations: W
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 0..65535
          units: ""
          description: When written, the scene with the given ID is recalled.
        - id: 905
          name: Debug Mode Enabled
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Enables the object test mode. The physical representation of the object will be disabled. Stimuli can be injected to test the object remotely using inject test event.
        - id: 906
          name: Inject Test Event
          operations: W
          multipleinstances: Single
          mandatory: Optional
          type: Unsigned Integer
          rangeenumeration: 0..65535
          units: ""
          description: Defines the test events to be injected into the system when debug mode is enabled. Event definition is vendor specific.
        - id: 934
          name: Execute Test Injection
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: When executed, the test event specified in resource 906 is injected.
        - id: 924
          name: Object Enabled
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: This resource allows to disable an object instance. nIf an object instance is disabled it does process incoming events but does not create outgoing events.
- Name: oA Logical Illuminance Sensor
  Description1: The 'oA Logical Illuminance Sensor' represents the logical part of an illuminance sensor. The corresponding physical device is a sensor that detects illuminance in its detection area.
  Description2: ""
  ObjectID: 3392
  ObjectURN: urn:oma:lwm2m:ext:3392
  LWM2MVersion: "1.1"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 4001
          name: ObjectVersion
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: LWM2M Object versioning label.
        - id: 901
          name: Documentary Description
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: 0..256 bytes
          units: ""
          description: Resource to hold a documentary text description of the object.
        - id: 404
          name: Sensor Value
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 0..65535
          units: lx
          description: The illuminance reading of the sensor
        - id: 909
          name: Executing Object
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Corelnk
          rangeenumeration: ""
          units: ""
          description: Link to the Object Instance in CoRE Link Format [RFC6690](https://tools.ietf.org/html/rfc6690)
        - id: 400
          name: Less Than
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Unsigned Integer
          rangeenumeration: 0..65535
          units: lx
          description: Only report if the sensor value is less than the given value.
        - id: 401
          name: Greater Than
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Unsigned Integer
          rangeenumeration: 0..65535
          units: lx
          description: Only report if the sensor value is greater than the given value.
        - id: 402
          name: Step
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Unsigned Integer
          rangeenumeration: 0..65535
          units: lx
          description: Only report if the step of the sensor value change is greater than the given step.
        - id: 403
          name: Minimum Update Interval
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 0..65535
          units: s
          description: The sensor waits at least for that interval before the sensor value resource is updated.
        - id: 903
          name: Application Group ID
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 0..65535
          units: ""
          description: The application group ID that the logical object is part of. This ID will define the application group the status reports are sent to. It is internally used as a pointer to the Group Object instance that hosts all the Group configurations.
        - id: 904
          name: Status Resend Time
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 1..600
          units: s
          description: 'The time specified as status resend time is used to resend the actual status to the application group the object is a member of, even if nothing changed.nThe status resend time is restarted after every event. The actual interval is a random time with the maximum duration given by this resource. Randomization helps to avoid massive ongoing message collisions after system power up.nFor example: Status resend time is set to 10 seconds;n* 00:00 status is sentn* 00:05 status changes and is sent immediatlyn* 00:15 (or before, depending on the randomization) status is sent even though it did not change'
        - id: 919
          name: Status Report Structure ID
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 0..255
          units: ""
          description: The ID of the status resource structure that is used to code the cyclic status report. See object 4012 'oA Status Report Structure' for more information
        - id: 905
          name: Debug Mode Enabled
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Enables the object test mode. The physical representation of the object will be disabled. Stimuli can be injected to test the object remotely using inject test event.
        - id: 906
          name: Inject Test Event
          operations: W
          multipleinstances: Single
          mandatory: Optional
          type: Unsigned Integer
          rangeenumeration: 0..65535
          units: ""
          description: Inject test events into the system when debug mode is enabled. Event definition is vendor specific.
        - id: 924
          name: Object Enabled
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: This resource allows to disable an object instance. nIf an object instance is disabled it does process incoming events but does not create outgoing events.
        - id: 934
          name: Object Enabled
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: When executed, a test event s specified in 906 will be injected nIf an object instance is disabled it does process incoming events but does not create outgoing events.
- Name: oA Logical Light-Point Actuator
  Description1: The 'oA Logical Light Point Actuator' represents the logical part of an actuator model for a dimmable light point. The corresponding physical device is a light channel and associated gear (e.g. LED driver).\nThe Object (module) supports several interactions that include basic On/Off as well as Up/Down dimming. Several device configuration parameters are mapped, which relate to behaviour or describe device limitations. For multi-channel luminaires where the configuration per channel may vary significantly (e.g. different max/min values), multiple instances of this Object should be used.
  Description2: ""
  ObjectID: 3393
  ObjectURN: urn:oma:lwm2m:ext:3393
  LWM2MVersion: "1.1"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 4001
          name: ObjectVersion
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: LWM2M Object versioning label.
        - id: 901
          name: Documentary Description
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: 0..256 bytes
          units: ""
          description: Resource to hold a documentary text description of the object.
        - id: 100
          name: Target OnOff
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: This Resource represents the target on/off status requested to the Light Point. On reset this value should be set to ON. On a Power cycle, the Target intensity is set according to 'On Behaviour'.
        - id: 101
          name: Target Intensity
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: 0.0..1.0
          units: ""
          description: This Resource represents the target intensity requested to the Light Point. On reset this value should be set to 1. On a Power cycle, the Target intensity is set according to 'On Behaviour'.
        - id: 909
          name: Executing Object
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Corelnk
          rangeenumeration: ""
          units: ""
          description: Link to the Object Instance in CoRE Link Format [RFC6690](https://tools.ietf.org/html/rfc6690)
        - id: 921
          name: Priority
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 0..5
          units: ""
          description: The priority of this Logical Object. If a Logical Object with a higher priority controlles the same physical object, this instance will hold its settings until its priority is sufficient again. nIf the priorities are the same the last one is served.
        - id: 106
          name: Dimming Time
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 0..65535
          units: ms
          description: Defines the time needed to dim the light point from minimum intensity to maximum intensity. The resulting dimming rate is used for every 'Dim' request. Scaling is 100ms per unit
        - id: 108
          name: Transition Time
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 0..65535
          units: ms
          description: Defines the default transition time to be used for 'Set_Intensity' and 'Step' requests, if that request has no value specified. A value of 0 means the transaction is immediate. Scaling is 100ms per unit
        - id: 109
          name: Step Size
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: 0.000001..1.0
          units: ""
          description: Defines the default step size to be used for 'Step' requests, if that request has no value specified. The value is a factor to the intensity, a value of 0.2 defines a 20% change to the output intensity.
        - id: 903
          name: Application Group ID
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 0..65535
          units: ""
          description: The application group ID that the logical object is part of. This ID will define the application group the status reports are sent to. It is internally used as a pointer to the Group Object instance that hosts all the Group configurations.
        - id: 904
          name: Status Resend Time
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 1..600
          units: s
          description: 'The time specified as status resend time is used to resend the actual status to the application group the object is a member of, even if nothing changed.nThe status resend time is restarted after every event. The actual interval is a random time with the maximum duration given by this resource. Randomization helps to avoid massive ongoing message collisions after system power up.nFor example: Status resend time is set to 10 seconds;n* 00:00 status is sentn* 00:05 status changes and is sent immediatlyn* 00:15 (or before, depending on the randomization) status is sent even though it did not change'
        - id: 919
          name: Status Report Structure ID
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 0..255
          units: ""
          description: The ID of the status resource structure that is used to code the cyclic status report. See object 4012 'oA Status Report Structure' for more information
        - id: 922
          name: Scene Cache
          operations: RW
          multipleinstances: Multiple
          mandatory: Optional
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: A cache for the scene values. These values should be called when a scene is recalled. It is buildt from a Scene_ID (UInt 16, a target resource (Corelnk) defineition, and a payload that operates on this resource), a transition time in ms (UInt16), and an action (Put/Post) defintion
        - id: 117
          name: Switch
          operations: W
          multipleinstances: Single
          mandatory: Mandatory
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: 'This Resource allows to perform On/Off Switch operations with additional input arguments on a light point:n- *arg0: Action* - the action that is to be performed On or Offn- *arg1: Intensity* - final intensity valuen- *arg2: Time* - transition time with 100ms resolutionnnEither arg0: Action or arg1: Intensity need to be present.nSome examples:n- `POST coap://<target_IP_address>/<dir>/<Obj_ID>/<object-instance>/117 {0:false,2:2}`norn`POST coap://<target_IP_address>/<dir>/<Obj_ID>/<object-instance>/117 {1:0,2:2}` nsets the light point to Off and takes 200ms to set the intensity to ''0''n- `POST coap://<target_IP_address>/<dir>/<Obj_ID>/<object-instance>/117 {0:true,2:2}`nsets the light point to On and takes 200ms to set the intensity to the intensity that was active before the lightpoint was switched off.n- `POST coap://<target_IP_address>/<dir>/<Obj_ID>/<object-instance>/117 {1:1,2:2}` nsets the light point to On and takes 200ms to set the intensity to ''1''nn**Note:** When the optional argument time is not given, or if its value is empty the default configuration value is used.nA request on this Resource will immediately impact the value of ''On/Off Status'' and a continuous update of ''Remaining Transition Time'' and ''Current Intensity'' until the Switch operation is cloncluded.'
        - id: 118
          name: Dim
          operations: W
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: This Resource allows to perform 'Dim' operations on a light point:n- *Direction* [mandatory] dim direction (UP=brighter, DOWN=darker)n**Note:** During this process, the 'Current Intensity' and 'Remaining Transition Time' are continuously updated.If this Resource is written while another intensity variation process is running, the ongoing process is stopped and the dimming process begins using as starting point the intensity value at that specific moment.nnSome examples:n- `POST coap://<target_IP_address>/<dir>/<Obj_ID>/<obj_instance>/118 0`ndims the light points down.n- `POST coap://<target_IP_address>/<dir>/<Obj_ID>/<obj_instance>/118 1`ndims the light point up.nnDimming is also possible during off. This effects the intensity that 'On' requests without requested intensity will execute.
        - id: 119
          name: Stop Transition
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: When executed, it immediately stops all ongoing transition process (Set Intensity or Dim). 'Current Intensity' maintains the value it has at that moment and 'Remaining Transition Time' is set to '0'. Payload is not required, however, a success/failure message is recommended.
        - id: 120
          name: Step
          operations: W
          multipleinstances: Single
          mandatory: Mandatory
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: 'This resource allows to increase and decrease the intensity of the light point by a given step size relative to the current intensity. nE.g. a decrease by 0.2 of a current intensity of 0.5 results in an intensity of 0.4.nThe following paramters are used:n- *arg0: Direction* - step direction (true=brighter, false=darker)n- *arg1: Step Size* - the size of the step, relative to the current intensityn- *arg2: Transition Time* - transition time with 100ms resolutionnn**Note:** During this process, the ''Remaining Transition Time'' and ''Current Intensity'' are continuously updated.nIf this Resource is executed while another intensity variation process is running, the ongoing is stopped and this new process is started, using the current intensity value as a starting point.'
        - id: 902
          name: Recall Scene
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 0..65535
          units: ""
          description: When written, the scene with the given ID is recalled.
        - id: 905
          name: Debug Mode Enabled
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Enables the object test mode. The physical representation of the object will be disabled. Stimuli can be injected to test the object remotely using inject test event.
        - id: 906
          name: Inject Test Event
          operations: W
          multipleinstances: Single
          mandatory: Optional
          type: Unsigned Integer
          rangeenumeration: 0..65535
          units: ""
          description: Define a test events to be injected into the system when debug mode is enabled. Event definition is vendor specific.
        - id: 934
          name: Object Enabled
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: When executed, a test event s specified in 906 will be injected nIf an object instance is disabled it does process incoming events but does not create outgoing events.
        - id: 924
          name: Object Enabled
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: This resource allows to disable an object instance. nIf an object instance is disabled it does process incoming events but does not create outgoing events.
- Name: oA Logical Presence Sensor
  Description1: The 'oA Logical Presence Sensor' represents the logical part of a presence sensor. The corresponding physical device is a sensor that detects presence in its detection area. \nThe Object supports two states 'presence' and 'absence'.
  Description2: ""
  ObjectID: 3394
  ObjectURN: urn:oma:lwm2m:ext:3394
  LWM2MVersion: "1.1"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 4001
          name: ObjectVersion
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: LWM2M Object versioning label.
        - id: 901
          name: Documentary Description
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: 0..256 bytes
          units: ""
          description: Resource to hold a documentary text description of the object.
        - id: 5500
          name: Digital Input State
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: The current state of a digital input.
        - id: 909
          name: Executing Object
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Corelnk
          rangeenumeration: ""
          units: ""
          description: Link to the Object Instance in CoRE Link Format [RFC6690](https://tools.ietf.org/html/rfc6690)
        - id: 5903
          name: Busy to Clear delay
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ms
          description: Delay from the detection state to the clear state in ms.
        - id: 5904
          name: Clear to Busy delay
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ms
          description: Delay from the clear state to the busy state in ms.
        - id: 903
          name: Application Group ID
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 0..65535
          units: ""
          description: The application group ID that the logical object is part of. This ID will define the application group the status reports are sent to. It is internally used as a pointer to the Group Object instance that hosts all the Group configurations.
        - id: 904
          name: Status Resend Time
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 1..600
          units: s
          description: 'The time specified as status resend time is used to resend the actual status to the application group the object is a member of, even if nothing changed.nThe status resend time is restarted after every event. The actual interval is a random time with the maximum duration given by this resource. Randomization helps to avoid massive ongoing message collisions after system power up.nFor example: Status resend time is set to 10 seconds;n* 00:00 status is sentn* 00:05 status changes and is sent immediatlyn* 00:15 (or before, depending on the randomization) status is sent even though it did not change'
        - id: 919
          name: Status Report Structure ID
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 0..255
          units: ""
          description: The ID of the status resource structure that is used to code the cyclic status report. See object 4012 'oA Status Report Structure' for more information
        - id: 905
          name: Debug Mode Enabled
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Enables the object test mode. The physical representation of the object will be disabled. Stimuli can be injected to test the object remotely using inject test event.
        - id: 906
          name: Inject Test Event
          operations: W
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Defines the test events to be injected into the system when debug mode is enabled. Event definition is vendor specific.
        - id: 934
          name: Object Enabled
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: When executed, a test event s specified in 906 will be injected nIf an object instance is disabled it does process incoming events but does not create outgoing events.
        - id: 924
          name: Object Enabled
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: This resource allows to disable an object instance. nIf an object instance is disabled it does process incoming events but does not create outgoing events.
- Name: oA Logical Push-Button Sensor
  Description1: The 'oA Logical Push-Button Sensor' represents the logical part of a standard, normally open, push-button input. The corresponding physical device is a button with a spring that returns the button to the un-pushed state once it is released.\nThe Object supports several events such as 'click', 'hold', 'double-click' and 'release'. It also indicates if the button is 'stuck'. For physical devices with multiple push-button inputs, an instance of this Object is required to map each input.
  Description2: ""
  ObjectID: 3395
  ObjectURN: urn:oma:lwm2m:ext:3395
  LWM2MVersion: "1.1"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 4001
          name: ObjectVersion
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: LWM2M Object versioning label.
        - id: 901
          name: Documentary Description
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: 0..256 bytes
          units: ""
          description: Resource to hold a documentary text description of the object.
        - id: 202
          name: Push-Button Event Value
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: '0: RELEASE1: CLICK2: HOLD3: DOUBLE-CLICK255: STUCK'
          units: ""
          description: 'This Resource represents the last generated Event by the push-button:n* 0: RELEASE - push-button was releasedn* 1: CLICK - single click detectedn* 2: HOLD - long press/hold detectedn* 3: DOUBLE-CLICK - two sequential clicks detectedn* 255: STUCK - button was detected as stuck.nn*Note* The Push-Button Event allows to filter part of the behaviour of the press/release actions from a user. Instead of reporting all press/release operations, this resource only reports a new value when a specific operation occurs.'
        - id: 909
          name: Executing Object
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Corelnk
          rangeenumeration: ""
          units: ""
          description: Link to the Object Instance in CoRE Link Format [RFC6690](https://tools.ietf.org/html/rfc6690)
        - id: 203
          name: Single Click Time
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 100..60000
          units: ms
          description: Defines the maximum period of time the push-button can be pressed, in order to be recognized as 'click'. If the button is pressed longer than this time period, it is recognized as 'hold' press. See Resource description of Push-Button Event for details.n*Note* the maximum limit for this value is 60s, as any press longer than that is considered 'stuck button'.
        - id: 204
          name: Hold Repeat Time
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Unsigned Integer
          rangeenumeration: 300..60000
          units: ms
          description: Defines the period of time between repetitions of push-button event reporting messages with 'hold' value. After the 'hold' event is triggered and the first message is sent, the 'hold' message is repeated every time the 'Hold Repeat Time' is past, and until a 'release' or 'button stuck' state is reached.This value should always be higher than 'Single Click Time' and small intervals may significantly affect network performance.n*Note* the maximum limit for this value is 60s, as any press longer than that is considered 'stuck button'.
        - id: 903
          name: Application Group ID
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 0..65535
          units: ""
          description: The application group ID that the logical object is part of. This ID will define the application group the status reports are sent to. It is internally used as a pointer to the Group Object instance that hosts all the Group configurations.
        - id: 904
          name: Status Resend Time
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 1..600
          units: s
          description: 'The time specified as status resend time is used to resend the actual status to the application group the object is a member of, even if nothing changed.nThe status resend time is restarted after every event. The actual interval is a random time with the maximum duration given by this resource. Randomization helps to avoid massive ongoing message collisions after system power up.nFor example: Status resend time is set to 10 seconds;n* 00:00 status is sentn* 00:05 status changes and is sent immediatlyn* 00:15 (or before, depending on the randomization) status is sent even though it did not change'
        - id: 919
          name: Status Report Structure ID
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 0..255
          units: ""
          description: The ID of the status resource structure that is used to code the cyclic status report. See object 4012 'oA Status Report Structure' for more information
        - id: 905
          name: Debug Mode Enabled
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Enables the object test mode. The physical representation of the object will be disabled. Stimuli can be injected to test the object remotely using inject test event.
        - id: 906
          name: Inject Test Event
          operations: W
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..65535
          units: ""
          description: Defines the test events to be injected into the system when debug mode is enabled. Event definition is vendor specific.
        - id: 934
          name: Object Enabled
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: When executed, a test event s specified in 906 will be injected nIf an object instance is disabled it does process incoming events but does not create outgoing events.
        - id: 924
          name: Object Enabled
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: This resource allows to disable an object instance. nIf an object instance is disabled it does process incoming events but does not create outgoing events.
- Name: oA Physical Colour Light-Point Actuator
  Description1: The 'oA_Physical_Colour_Light-Point_Actuator' represents a physical colour light-point actuator. It is necessary to map at least on Logical Light Point Actuator to control the intensity and one Logical Colour Light-Point to control the colour to the Physical Colour Light-Point.
  Description2: ""
  ObjectID: 3396
  ObjectURN: urn:oma:lwm2m:ext:3396
  LWM2MVersion: "1.1"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 4001
          name: ObjectVersion
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: LWM2M Object versioning label.
        - id: 901
          name: Documentary Description
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: 0..256 bytes
          units: ""
          description: Resource to hold a documentary text description of the object.
        - id: 907
          name: Error Status
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: 'Error status is a bit coded value that shows all current errors on the object. The error status changes as soon as a new error occurs or an old one is resolved. Bitwise: 0 (LSB): Hardware_Error, 1: Execution_Limit_LED_Temp, 2: Execution_Limit_Power_Restrictions, 3: Light-Point_Malfunction'
        - id: 908
          name: Mounting Location
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: 1..64 Bytes
          units: B
          description: Describes the location of the device within the building. The content of the string is site specific.
        - id: 5850
          name: On/Off
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: On/off control. Boolean value where True is On and False is Off.
        - id: 100
          name: Current Intensity
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: 0.0..1.0
          units: ""
          description: This Resource represents the current intensity (0-1). This is a 'real-time' value, which is given independently of any ongoing dimming request.
        - id: 102
          name: Remaining Transition Time
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 0..65535
          units: ms
          description: Remaining approximated time of any ongoing 'Set Intensity', 'Step' or 'Switch' process which requires a variation of the light output over a period of time higher or equal to one 100ms interval. When the process is started, the value is equal to the time value selected for the process and it is continuously decreased until completed (time=0), or a 'Stop Dimming' request is received.nn**NOTE:** If during a request the process reaches the Maximum/Minimum Intensity limits, the time is automatically set to '0' as the process is stopped. Scaling is 100ms per unit
        - id: 122
          name: Current Colour Y
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 0..10000
          units: K
          description: This Resource represents the x value of the current colour. This is a 'real-time' value, which is given independently of any ongoing change request. Scaling is 0.0001 per unit
        - id: 123
          name: Current Colour X
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 0..10000
          units: K
          description: This Resource represents the y value of the current colour. This is a 'real-time' value, which is given independently of any ongoing change request. Scaling is 0.0001 per unit
        - id: 124
          name: Remaining Colour Transition Time
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 0..65535
          units: ms
          description: Remaining approximated time of any ongoing colour change process which requires a variation of the light output over a period of time higher or equal to one 100ms interval. When the process is started, the value is equal to the time value selected for the process and it is continuously decreased until completed (time=0), or a 'Stop' request is received.nn**NOTE:** If during a request the process reaches the colour limits, the time is automatically set to '0' as the process is stopped. Scaling is 100ms per unit
        - id: 910
          name: Total Energy Usage
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 0..18446744073709551615
          units: Ws
          description: The total energy usage of the device (accumulated value)
        - id: 911
          name: Actual Power Usage
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 0..4294967295
          units: W
          description: The actual power usage of the device. Scaling is 0.1W per unit
        - id: 912
          name: Accuracy Class
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: 0..64 bytes
          units: ""
          description: The accuracy class of the energy sensor on the device (using either % accuracy or a letter that defines the accuracy class)
        - id: 930
          name: Operating Hours
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 0..4294967295
          units: h
          description: The total operating hours where the light point is on.
        - id: 931
          name: Adjusted Operating Hours
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 0..4294967295
          units: ""
          description: The total operating hours adjusted by the dim level of the luminaire.
        - id: 103
          name: Physical Minimum Intensity
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0.000001..1.0
          units: ""
          description: Minimum intensity that can be set for this instance of a Light Point. This value is factory defined by luminaire or gear manufacturer.
        - id: 104
          name: Minimum Intensity
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: 0.000001..1.0
          units: ""
          description: The value set in this Resource limits the minimum output of the Light Point. when performing any transition operation (e.g. Switch(ON),'Dim(DOWN)','Step(DOWN)' or Set_Intensity(x)') the minimum intensity value indicated by this Resource will override any other definition or request input parameter value.nChanging this Resource stops any transition process, and the 'Remaining Transition Time' and 'Current Intensity' are updated.nn**Note:** This value must be greater or equal to 'Physical Minimum Intensity' and smaller or equal to 'Maximum Intensity'. If a Light Point with fixed output is used, the 'Minimum Intensity' and 'Maximum Intensity' MUST be defined with the same value.
        - id: 105
          name: Maximum Intensity
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: 0.000001..1.0
          units: ""
          description: The value set in this Resource limits the maximum output of the Light Point. when performing any transition operation (e.g. Switch(ON),'Dim(UP)','Step(UP)' or Set_Intensity(x)') the maximum intensity value indicated by this Resource will override any other definition or request input parameter value.nChanging this Resource stops any transition process, and the 'Remaining Transition Time' and 'Current Intensity' are updated.nn**Note:** This value must be greater or equal to 'Minimum Intensity'. If a Light Point with fixed output is used, the 'Minimum Intensity' and 'Maximum Intensity' MUST be defined with the same value.
        - id: 110
          name: Power On Behaviour
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Unsigned Integer
          rangeenumeration: '0: CONFIGURED_ON1: FULL_ON2: RECALL'
          units: ""
          description: Defines the default behaviour of the light point when it is switched 'On'. The following options are possible:n- *CONFIGURED_ON* intensity goes to the stored default value ('Power On Intensity') [default option]n- *FULL_ON* intensity always goes to the maximum intensity value allowedn- *RECALL* if available, the intensity is recalled from 'Stored Intensity', otherwise 'Power On Intensity' is used
        - id: 111
          name: Power On Intensity
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0.000001..1.0
          units: ""
          description: Defines the default Intensity used in switch operations that result in a 'On' state. It is used if no intensity is given in the switch request payload and if 'Power On Behaviour' is CONFIGURED_ON. When this Resource is not defined, the value to be used should be '1'.nn**Note:** When setting this value, the Minimum/Maximum intensity limits must be validated. A write request that requires the final value to be adjusted should send a reply message with the corrected value.
        - id: 114
          name: Stored Intensity
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0.000001..1.0
          units: ""
          description: This Resource represents a copy of the last 'Current Intensity' that is bigger than 0, before a power cycle is triggered. It should be updated in NVM whenever a transition process is completed, and optionally if a power cycle is triggered.
        - id: 115
          name: System Failure Intensity
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0.000001..1.0
          units: ""
          description: This is the intensity value the light point goes to if the connection to the network is lost for longer than 'System Failure Time'.nn**Note:** When setting the value of this Resource, the limits of 'Minimum Intensity' and 'Maximum Intensity' must be validated. A write operation that requires the final value to be adjusted should result in a reply message with the final corrected value.nIndependently of the previous limits, a '0' value is allowed and it means, in case of network failure, the 'On/Off Status' is set to 'Off'.
- Name: oA Physical Colour Temperature Light-Point Actuator
  Description1: The 'oA_Physical_Colour_Temperature_Light-Point_Actuator' represents a physical tunable white light-point actuator. It is necessary to map at least on Logical Light Point Actuator to control the intensity and one Logical Colour Temperature Light-Point to control the colour temperature to the Physical Colour Temperature Light Point.
  Description2: ""
  ObjectID: 3397
  ObjectURN: urn:oma:lwm2m:ext:3397
  LWM2MVersion: "1.1"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 4001
          name: ObjectVersion
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: LWM2M Object versioning label.
        - id: 901
          name: Documentary Description
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: 0..256 bytes
          units: ""
          description: Resource to hold a documentary text description of the object.
        - id: 907
          name: Error Status
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 0..255
          units: ""
          description: 'Error status is a bit coded value that shows all current errors on the object. The error status changes as soon as a new error occurs or an old one is resolved. Bitwise: 0 (LSB): Hardware_Error, 1: Execution_Limit_LED_Temp, 2: Execution_Limit_Power_Restrictions, 3: Light-Point_Malfunction'
        - id: 908
          name: Mounting Location
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: 1..64 bytes
          units: ""
          description: Describes the location of the device within the building. The content of the string is site specific.
        - id: 5850
          name: On/Off
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: On/off control. Boolean value where True is On and False is Off.
        - id: 100
          name: Current Intensity
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: 0.0..1.0
          units: ""
          description: This Resource represents the current intensity (0-1). This is a 'real-time' value, which is given independently of any ongoing dimming request.
        - id: 102
          name: Remaining Transition Time
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 0..65535
          units: ms
          description: Remaining approximated time of any ongoing 'Set Intensity', 'Step' or 'Switch' process which requires a variation of the light output over a period of time higher or equal to one 100ms interval. When the process is started, the value is equal to the time value selected for the process and it is continuously decreased until completed (time=0), or a 'Stop Dimming' request is received.nn**NOTE:** If during a request the process reaches the Maximum/Minimum Intensity limits, the time is automatically set to '0' as the process is stopped. Scaling is 100ms per unit
        - id: 137
          name: Current Colour Temperature
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 0..65535
          units: K
          description: This Resource represents the current colour temperature. This is a 'real-time' value, which is given independently of any ongoing change request.
        - id: 138
          name: Remaining Colour Temperature Transition Time
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 0..65535
          units: ms
          description: Remaining approximated time of any ongoing 'Set Temperature', 'Step' or 'Switch' process which requires a variation of the light output over a period of time higher or equal to one 100ms interval. When the process is started, the value is equal to the time value selected for the process and it is continuously decreased until completed (time=0), or a 'Stop' request is received.nn**NOTE:** If during a request the process reaches the Maximum/Minimum colour temperature limits, the time is automatically set to '0' as the process is stopped. Scaling is 100ms per unit
        - id: 910
          name: Total Energy Usage
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 0..18446744073709551615
          units: Ws
          description: The total energy usage of the device (accumulated value)
        - id: 911
          name: Actual Power Usage
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..4294967295
          units: W
          description: The actual power usage of the device. Scaling is 0.1W per unit
        - id: 912
          name: Accuracy Class
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: 0..64 bytes
          units: ""
          description: The accuracy class of the energy sensor on the device (using either % accuracy or a letter that defines the accuracy class)
        - id: 930
          name: Operating Hours
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 0..4294967295
          units: h
          description: The total operating hours where the light point is on.
        - id: 931
          name: Adjusted Operating Hours
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 0..4294967295
          units: ""
          description: The total operating hours adjusted by the dim level of the luminaire.
        - id: 103
          name: Physical Minimum Intensity
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0.000001..1.0
          units: ""
          description: Minimum intensity that can be set for this instance of a Light Point. This value is factory defined by luminaire or gear manufacturer.
        - id: 104
          name: Minimum Intensity
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: 0.000001..1.0
          units: ""
          description: The value set in this Resource limits the minimum output of the Light Point. when performing any transition operation (e.g. Switch(ON),'Dim(DOWN)','Step(DOWN)' or Set_Intensity(x)') the minimum intensity value indicated by this Resource will override any other definition or request input parameter value.nChanging this Resource stops any transition process, and the 'Remaining Transition Time' and 'Current Intensity' are updated.nn**Note:** This value must be greater or equal to 'Physical Minimum Intensity' and smaller or equal to 'Maximum Intensity'. If a Light Point with fixed output is used, the 'Minimum Intensity' and 'Maximum Intensity' MUST be defined with the same value.
        - id: 105
          name: Maximum Intensity
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: 0.000001..1.0
          units: ""
          description: The value set in this Resource limits the maximum output of the Light Point. when performing any transition operation (e.g. Switch(ON),'Dim(UP)','Step(UP)' or Set_Intensity(x)') the maximum intensity value indicated by this Resource will override any other definition or request input parameter value.nChanging this Resource stops any transition process, and the 'Remaining Transition Time' and 'Current Intensity' are updated.nn**Note:** This value must be greater or equal to 'Minimum Intensity'. If a Light Point with fixed output is used, the 'Minimum Intensity' and 'Maximum Intensity' MUST be defined with the same value.
        - id: 155
          name: Physical Minimum Colour Temperature
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Unsigned Integer
          rangeenumeration: 0..65535
          units: K
          description: Minimum colour temperature that can be set for this instance of a Light Point. This value is factory defined by luminaire or gear manufacturer.
        - id: 156
          name: Physical Maximum Colour Temperature
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Unsigned Integer
          rangeenumeration: 0..65535
          units: K
          description: Maximum colour temperature that can be set for this instance of a Light Point. This value is factory defined by luminaire or gear manufacturer.
        - id: 157
          name: Minimum Colour Temperature
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Unsigned Integer
          rangeenumeration: 0..65535
          units: K
          description: The value set in this Resource limits the minimum colour temperature output of the Light Point. When performing any colour temperature transition operation the minimum colour temperature value indicated by this resource will override any other definition or requested input parameter value.nChanging this resource stops any transition process, and the 'Remaining Colour Temperature Transition Time' and 'Current Colour Temperature' are updated.nn**Note:** This value must be greater or equal to 'Physical Minimum Colour Temperature' and smaller or equal to 'Maximum Colour Temperature'.
        - id: 158
          name: Maximum Colour Temperature
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Unsigned Integer
          rangeenumeration: 0..65535
          units: K
          description: The value set in this resource limits the maximum colour temperature output of the Light Point. When performing any colour temperature transition operation the maximum colour temperature value indicated by this resource will override any other definition or requested input parameter value.nChanging this resource stops any transition process, and the 'Remaining Colour Temperature Transition Time' and 'Current Colour Temperature' are updated.nn**Note:** This value must be smaller or equal to 'Physical Colour Temperature' and greater or equal to 'Minimum Colour Temperature'.
        - id: 110
          name: Power On Behaviour
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Unsigned Integer
          rangeenumeration: '0: CONFIGURED_ON1: FULL_ON2: RECALL'
          units: ""
          description: Defines the default behaviour of the light point when it is switched 'On'. The following options are possible:n- *CONFIGURED_ON* intensity goes to the stored default value ('Power On Intensity') [default option]n- *FULL_ON* intensity always goes to the maximum intensity value allowedn- *RECALL* if available, the intensity is recalled from 'Stored Intensity', otherwise 'Power On Intensity' is used
        - id: 111
          name: Power On Intensity
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0.000001..1.0
          units: ""
          description: Defines the default Intensity used in switch operations that result in a 'On' state. It is used if no intensity is given in the switch request payload and if 'Power On Behaviour' is CONFIGURED_ON. When this Resource is not defined, the value to be used should be '1'.nn**Note:** When setting this value, the Minimum/Maximum intensity limits must be validated. A write request that requires the final value to be adjusted should send a reply message with the corrected value.
        - id: 114
          name: Stored Intensity
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0.000001..1.0
          units: ""
          description: This Resource represents a copy of the last 'Current Intensity' that is bigger than 0, before a power cycle is triggered. It should be updated in NVM whenever a transition process is completed, and optionally if a power cycle is triggered.
        - id: 115
          name: System Failure Intensity
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0.000001..1.0
          units: ""
          description: This is the intensity value the light point goes to if the connection to the network is lost for longer than 'System Failure Time'.nn**Note:** When setting the value of this Resource, the limits of 'Minimum Intensity' and 'Maximum Intensity' must be validated. A write operation that requires the final value to be adjusted should result in a reply message with the final corrected value.nIndependently of the previous limits, a '0' value is allowed and it means, in case of network failure, the 'On/Off Status' is set to 'Off'.
- Name: oA Physical Illuminance Sensor
  Description1: The 'oA_Physical_Illuminance_Sensor' represents the physical part of an illuminance sensor. All logical illuminance sensors (object instances of 'oA Illuminance Sensor') are mapped to one physical illuminance sensor.
  Description2: ""
  ObjectID: 3398
  ObjectURN: urn:oma:lwm2m:ext:3398
  LWM2MVersion: "1.1"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 4001
          name: ObjectVersion
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: LWM2M Object versioning label.
        - id: 901
          name: Documentary Description
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: 0..256 bytes
          units: ""
          description: Resource to hold a documentary text description of the object.
        - id: 407
          name: Min Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Unsigned Integer
          rangeenumeration: 0..65535
          units: lx
          description: The minimum value that can be measured by the sensor
        - id: 408
          name: Max Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Unsigned Integer
          rangeenumeration: 0..65535
          units: lx
          description: The maximum value that can be measured by the sensor
        - id: 907
          name: Error Status
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 0..255
          units: ""
          description: 'Error status is a bit coded value that shows all current errors on the object. The error status changes as soon as a new error occurs or an old one is resolved. Bitwise: 0 (LSB): Hardware_Error, 1: Temperature_Error, 2: Range_Error, 3: Quality_Error'
        - id: 908
          name: Mounting Location
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: 1..64 bytes
          units: ""
          description: Describes the location of the device within the building. The content of the string is site specific.
- Name: oA Physical Light-Point Actuator
  Description1: The 'oA_Physical_Light-Point_Actuator' represents a physical light-point actuator. All logical light-point actuators (object instances of 'oA Light-Point Actuator') are mapped to one physical light-point actuator.
  Description2: ""
  ObjectID: 3399
  ObjectURN: urn:oma:lwm2m:ext:3399
  LWM2MVersion: "1.1"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 4001
          name: ObjectVersion
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: LWM2M Object versioning label.
        - id: 901
          name: Documentary Description
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: 0..256 bytes
          units: ""
          description: Resource to hold a documentary text description of the object.
        - id: 907
          name: Error Status
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 0..255
          units: ""
          description: 'Error status is a bit coded value that shows all current errors on the object. The error status changes as soon as a new error occurs or an old one is resolved. Bitwise: 0 (LSB): Hardware_Error, 1: Execution_Limit_LED_Temp, 2: Execution_Limit_Power_Restrictions,3: Light-Point_Malfunction'
        - id: 908
          name: Mounting Location
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: 1..64 bytes
          units: ""
          description: Describes the location of the device within the building. The content of the string is site specific.
        - id: 5850
          name: On/Off
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: On/off control. Boolean value where True is On and False is Off.
        - id: 100
          name: Current Intensity
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: 0.0..1.0
          units: ""
          description: This Resource represents the current intensity (0-1). This is a 'real-time' value, which is given independently of any ongoing dimming request.
        - id: 102
          name: Remaining Transition Time
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 0..65535
          units: ms
          description: Remaining approximated time of any ongoing 'Set Intensity', 'Step' or 'Switch' process which requires a variation of the light output over a period of time higher or equal to one 100ms interval. When the process is started, the value is equal to the time value selected for the process and it is continuously decreased until completed (time=0), or a 'Stop Dimming' request is received.nn**NOTE:** If during a request the process reaches the Maximum/Minimum Intensity limits, the time is automatically set to '0' as the process is stopped. Scaling is 100ms per unit
        - id: 910
          name: Total Energy Usage
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 0..18446744073709551615
          units: Ws
          description: The total energy usage of the device (accumulated value)
        - id: 911
          name: Actual Power Usage
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 0..4294967295
          units: W
          description: The actual power usage of the device. Scaling is 0.1W per unit
        - id: 912
          name: Accuracy Class
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: 0..64 bytes
          units: ""
          description: The accuracy class of the energy sensor on the device (using either % accuracy or a letter that defines the accuracy class)
        - id: 930
          name: Operating Hours
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 0..4294967295
          units: h
          description: The total operating hours where the light point is on.
        - id: 931
          name: Adjusted Operating Hours
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 0..4294967295
          units: ""
          description: The total operating hours adjusted by the dim level of the luminaire.
        - id: 103
          name: Physical Minimum Intensity
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0.000001..1.0
          units: ""
          description: Minimum intensity that can be set for this instance of a Light Point. This value is factory defined by luminaire or gear manufacturer.
        - id: 104
          name: Minimum Intensity
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: 0.000001..1.0
          units: ""
          description: The value set in this Resource limits the minimum output of the Light Point. when performing any transition operation (e.g. Switch(ON),'Dim(DOWN)','Step(DOWN)' or Set_Intensity(x)') the minimum intensity value indicated by this Resource will override any other definition or request input parameter value.nChanging this Resource stops any transition process, and the 'Remaining Transition Time' and 'Current Intensity' are updated.nn**Note:** This value must be greater or equal to 'Physical Minimum Intensity' and smaller or equal to 'Maximum Intensity'. If a Light Point with fixed output is used, the 'Minimum Intensity' and 'Maximum Intensity' MUST be defined with the same value.
        - id: 105
          name: Maximum Intensity
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: 0.000001..1.0
          units: ""
          description: The value set in this Resource limits the maximum output of the Light Point. when performing any transition operation (e.g. Switch(ON),'Dim(UP)','Step(UP)' or Set_Intensity(x)') the maximum intensity value indicated by this Resource will override any other definition or request input parameter value.nChanging this Resource stops any transition process, and the 'Remaining Transition Time' and 'Current Intensity' are updated.nn**Note:** This value must be greater or equal to 'Minimum Intensity'. If a Light Point with fixed output is used, the 'Minimum Intensity' and 'Maximum Intensity' MUST be defined with the same value.
        - id: 110
          name: Power On Behaviour
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Unsigned Integer
          rangeenumeration: '0: CONFIGURED_ON1: FULL_ON2: RECALL'
          units: ""
          description: Defines the default behaviour of the light point when it is switched 'On'. The following options are possible:n- *CONFIGURED_ON* intensity goes to the stored default value ('Power On Intensity') [default option]n- *FULL_ON* intensity always goes to the maximum intensity value allowedn- *RECALL* if available, the intensity is recalled from 'Stored Intensity', otherwise 'Power On Intensity' is used
        - id: 111
          name: Power On Intensity
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0.000001..1.0
          units: ""
          description: Defines the default Intensity used in switch operations that result in a 'On' state. It is used if no intensity is given in the switch request payload and if 'Power On Behaviour' is CONFIGURED_ON. When this Resource is not defined, the value to be used should be '1'.nn**Note:** When setting this value, the Minimum/Maximum intensity limits must be validated. A write request that requires the final value to be adjusted should send a reply message with the corrected value.
        - id: 114
          name: Stored Intensity
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0.000001..1.0
          units: ""
          description: This Resource represents a copy of the last 'Current Intensity' that is bigger than 0, before a power cycle is triggered. It should be updated in NVM whenever a transition process is completed, and optionally if a power cycle is triggered.
        - id: 115
          name: System Failure Intensity
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0.000001..1.0
          units: ""
          description: This is the intensity value the light point goes to if the connection to the network is lost for longer than 'System Failure Time'.nn**Note:** When setting the value of this Resource, the limits of 'Minimum Intensity' and 'Maximum Intensity' must be validated. A write operation that requires the final value to be adjusted should result in a reply message with the final corrected value.nIndependently of the previous limits, a '0' value is allowed and it means, in case of network failure, the 'On/Off Status' is set to 'Off'.
- Name: oA Physical Presence Sensor
  Description1: The 'oA_Physical_Presence_Sensor' represents the physical part of a presence sensor. All logical presence sensors (object instances of 'oA Presence Sensor') are mapped to one physical presence sensor.
  Description2: ""
  ObjectID: 3400
  ObjectURN: urn:oma:lwm2m:ext:3400
  LWM2MVersion: "1.1"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 4001
          name: ObjectVersion
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: LWM2M Object versioning label.
        - id: 901
          name: Documentary Description
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: 0..256 bytes
          units: ""
          description: Resource to hold a documentary text description of the object.
        - id: 907
          name: Error Status
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 0..255
          units: ""
          description: 'Error status is a bit coded value that shows all current errors on the object. The error status changes as soon as a new error occurs or an old one is resolved. Bitwise: 0 (LSB): Hardware_Error, 1: Temperature_Error, 2: Quality_Error'
        - id: 908
          name: Mounting Location
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: 1..64 bytes
          units: ""
          description: Describes the location of the device within the building. The content of the string is site specific.
- Name: oA Physical Push-Button Sensor
  Description1: The 'oA_Physical_Push-Button_Sensor' represents the physical part of a push-button sensor. All logical push-button sensors (object instances of 'oA Push-Button Sensor') are mapped to one physical push-button sensor.
  Description2: ""
  ObjectID: 3401
  ObjectURN: urn:oma:lwm2m:ext:3401
  LWM2MVersion: "1.1"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 4001
          name: ObjectVersion
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: LWM2M Object versioning label.
        - id: 901
          name: Documentary Description
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: 0..256 bytes
          units: ""
          description: Resource to hold a documentary text description of the object.
        - id: 201
          name: Push-Button Status Value
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: '0: RELEASED1: PRESSED2: FAULT'
          units: ""
          description: 'This Resource represents the current PRESSED/RELEASED state of the push-button.n* 0: RELEASED - the switch/push-button is pressed or contact is openedn* 1: PRESSED - the switch/push-button is pressed or contact is closedn* 2: FAULT - the contact is in a faulty condition (e.g. stuck or non-reactive)'
        - id: 907
          name: Error Status
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 0..255
          units: ""
          description: 'Error status is a bit coded value that shows all current errors on the object. The error status changes as soon as a new error occurs or an old one is resolved. Bitwise: 0 (LSB): Hardware_Error, 1: Quality_Error, 2: Invalid_State'
        - id: 908
          name: Mounting Location
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: 1..64 bytes
          units: ""
          description: Describes the location of the device within the building. The content of the string is site specific.
        - id: 5502
          name: Digital Input Polarity
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: The polarity of the digital input as a Boolean (False = Normal, True = Reversed).
        - id: 5503
          name: Digital Input Debounce
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ms
          description: The debounce period in ms.
- Name: oA Receiving Object
  Description1: The 'oA Receiving Object' provides a resource for sensors/actuators to report their status message to. It is used with control objects as logical object that forwards the sensor and status data to the executing object.\nIt is also used to receive the 'go bootstrap' message, using the Struct-ID 255, in OOTB mode.
  Description2: ""
  ObjectID: 3402
  ObjectURN: urn:oma:lwm2m:ext:3402
  LWM2MVersion: "1.1"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 4001
          name: ObjectVersion
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: LWM2M Object versioning label.
        - id: 901
          name: Documentary Description
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: 0..256 bytes
          units: ""
          description: Resource to hold a documentary text description of the object.
        - id: 909
          name: Executing Object
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Corelnk
          rangeenumeration: ""
          units: ""
          description: Link to the Object Instance in CoRE Link Format [RFC6690](https://tools.ietf.org/html/rfc6690)
        - id: 923
          name: Status Report
          operations: W
          multipleinstances: Single
          mandatory: Mandatory
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: The actuators and sensors report their status to this resource. It is also used to receive the 'go bootstrap' message, using the Struct-ID 255, in OOTB mode.
- Name: oA Reporting Object
  Description1: The 'oA Reporting Object' packs several status messages available at the node into a single, size optimized message, as e.g. used with data collect or BMS interfacing.
  Description2: ""
  ObjectID: 3403
  ObjectURN: urn:oma:lwm2m:ext:3403
  LWM2MVersion: "1.1"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 4001
          name: ObjectVersion
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: LWM2M Object versioning label.
        - id: 901
          name: Documentary Description
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: 0..256 bytes
          units: ""
          description: Resource to hold a documentary text description of the object.
        - id: 932
          name: Reporting Object Instances
          operations: RW
          multipleinstances: Multiple
          mandatory: Mandatory
          type: Corelnk
          rangeenumeration: ""
          units: ""
          description: List of links to the reporting Object Instances in CoRE Link Format [RFC6690](https://tools.ietf.org/html/rfc6690)
        - id: 933
          name: Target Resource
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Corelnk
          rangeenumeration: ""
          units: ""
          description: Link to the target resource in CoRE Link Format [RFC6690](https://tools.ietf.org/html/rfc6690)nNote taht the default for this entry is always the receiving object /4009/#/923. When Group communication is applied, the /#/ is determined by the group handling mechanisms and can be omitted.
        - id: 904
          name: Status Resend Time
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 1..600
          units: s
          description: 'The time specified as status resend time is used to resend the actual status to the application group the object is a member of, even if nothing changed.nThe status resend time is restarted after every event. The actual interval is a random time with the maximum duration given by this resource. Randomization helps to avoid massive ongoing message collisions after system power up.nFor example: Status resend time is set to 10 seconds;n* 00:00 status is sentn* 00:05 status changes and is sent immediatlyn* 00:15 (or before, depending on the randomization) status is sent even though it did not change'
        - id: 919
          name: Status Report Structure ID
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 1..600
          units: s
          description: The ID of the status resource structure that is used to code the cyclic status report. See object 4012 'oA Status Report Structure' for more information
        - id: 903
          name: Application Group ID
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 0..65535
          units: s
          description: The application group ID that the logical object is part of. This ID will define the application group the status reports are sent to. It is internally used as a pointer to the Group Object instance that hosts all the Group configurations.
- Name: oA Scene
  Description1: The 'oA Scene' represents a scene model. The scene holds defined values for each actuator in one group.
  Description2: ""
  ObjectID: 3404
  ObjectURN: urn:oma:lwm2m:ext:3404
  LWM2MVersion: "1.1"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 4001
          name: ObjectVersion
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: LWM2M Object versioning label.
        - id: 901
          name: Documentary Description
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: 0..256 bytes
          units: ""
          description: Resource to hold a documentary text description of the object.
        - id: 650
          name: Scene ID
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 0..65535
          units: ""
          description: The ID that is used to recall the scene. This needs to be unique within one application group.
        - id: 651
          name: Application Group ID
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 0..65535
          units: ""
          description: The application group ID the scene definition applies to.
        - id: 655
          name: Changeable by User API
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: If true, the settings for this scene can be changed using the User API.
        - id: 652
          name: Transition Time
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 0..60000
          units: ms
          description: Defines the transition time to be used for changing to this scene.
        - id: 653
          name: Scene Configuration
          operations: RW
          multipleinstances: Multiple
          mandatory: Mandatory
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: Defines the list of output properties that are changed when a scene is recalled. Complex Data comprising a Corelnk pointing to the resource, a payload that sets the resource and a boolean that says if POST or PUT should be applied
- Name: oA OGC-Security
  Description1: The 'OGC Security' provides the appropriate keying material for a specific OGC Application group in the context of OGC. The keying material will be provided by a key distribution server, and must not be readable by any instance outside the local node.
  Description2: ""
  ObjectID: 3405
  ObjectURN: urn:oma:lwm2m:ext:3405
  LWM2MVersion: "1.1"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 4001
          name: ObjectVersion
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: LWM2M Object versioning label.
        - id: 901
          name: Documentary Description
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: 0..256 bytes
          units: ""
          description: Resource to hold a documentary text description of the object.
        - id: 0
          name: OGC Security ID
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 0..65535
          units: ""
          description: Uniquely identifies the OpenAIS Security group that this instance is using.
        - id: 3
          name: Accepted Senders
          operations: RW
          multipleinstances: Multiple
          mandatory: Mandatory
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: Stores the identities (OSCORE / IPv6) and Keys of accepted senders in the group
        - id: 5
          name: Secret Group Key
          operations: W
          multipleinstances: Single
          mandatory: Mandatory
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: Stores the shared symmetric key for low latency group communication.This Resource MUST NOT be readable by any server.
- Name: oA Status Report Structure
  Description1: The 'oA Status_Report_Structure' describes the content of the status reports. Its ID is always the first byte, the following bytes are defined by Keys.
  Description2: ""
  ObjectID: 3406
  ObjectURN: urn:oma:lwm2m:ext:3406
  LWM2MVersion: "1.1"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 4001
          name: ObjectVersion
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: LWM2M Object versioning label.
        - id: 901
          name: Documentary Description
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: 0..256 bytes
          units: ""
          description: Resource to hold a documentary text description of the object.
        - id: 850
          name: Status Report Structure ID
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 0..255
          units: ""
          description: The ID of the status report structure. It is always the first byte of the transmitted status report.nThis needs to be unique per receiving object. ID 255 is used to receive the 'go bootstrap' message.
        - id: 851
          name: Keys
          operations: RW
          multipleinstances: Multiple
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: 'Defines the list of keys that are part of the status report. Most keys are present in the form ''object ID/resource ID''.nThere is a simplified form that is used with status reports for objects. This reporting has implicit instance identification (it''s the instance that creates reports, so no explicit instance identification is needed). This is using straight forward a list of resource contents that are determined by the list elements in their order.nnExample of a simple form:n- The key list for reporting ID 1 is: 4001/101; 4021/5850; 4021/100; 4021/102;n- The values are: 4001/101:0.5; 4021/5850:false; 4021/100:0.3; 4021/102:7n- The coded stream will be: 1; 0.5; false; 0.3; 7 with the first byte 1 the reporting ID.nnThe explicit form, that is used with device status reports, needs to explicitly name the instances the reported values are from. To allow for that two special keys are used:n- *NoOfInstances:* This key is to allow several object instances to report their status in the same report, e.g. a Device reports the status of all its light point objects.nThe block of keys following NoOfInstances, always starting with InstanceID, until the next NoOfInstances key is present in the status message for every instance, e.g. NoOfInstances=2 means the following block of keys is present twice.n- *InstanceID:* This key initiates the report of an object, is the first key before all the resource values. It defines the object instance that reports its status.nnExample of an explicit form:n- The key list for reporting ID 2 is: NoOfInstances; InstanceId; 4001/101; NoOfInstances; InstanceId; 4021/100n- The coded stream will be 2;2;0;0.5;1;0.7;1;0;0.5 with the first byte 2 the ID of the structure definition, the second byte the number of instances (2), the third the instance ID of the first (0) instance, the reported value, the instance ID of the second (1) instance, the reported value, the number of instances (1) for the next object, the ID of the instance (0) and the value.'
- Name: Smoke Alarm
  Description1: This is an alarm that should be raised if the meter detects CO2 concentration above a pre-configured threshold.
  Description2: ""
  ObjectID: 3407
  ObjectURN: urn:oma:lwm2m:ext:3407
  LWM2MVersion: "1.1"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 6044
          name: Battery Percentage
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0.00..100.00
          units: ""
          description: Current remaining battery level.
        - id: 6045
          name: RSSI
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: dBW
          description: Received Signal Strength Indicator.
        - id: 6046
          name: Smoke Sensor State
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Indicate current smoke sensor state.
        - id: 6047
          name: Detected CO2 percentage
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0.00..100.00
          units: /100
          description: Current level of detected CO2 as a percentage of concentration.
        - id: 6048
          name: Alarm loudness
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: dB
          description: Indicate the loudness of the alarm.
- Name: Manhole Cover
  Description1: Describe the status of a manhole cover.
  Description2: ""
  ObjectID: 3408
  ObjectURN: urn:oma:lwm2m:ext:3408
  LWM2MVersion: "1.1"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 1
          name: Safety Angle Threshold
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..180
          units: rad
          description: The threshold of manhole cover's safety angle.
        - id: 2
          name: Manhole Cover Tilt
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..180
          units: rad
          description: The tilt angle of a manhole cover.
        - id: 3
          name: Cover Open Status
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Indicate whether an open status of the manhole cover is detected. Not detected open [true] or Detected open [false].
- Name: Device Extension
  Description1: The uCIFI device extension is an extension to the standard Lightweight M2M device (object ID 3) using the resource called "ExtDevInfo" (resource ID 22).
  Description2: ""
  ObjectID: 3410
  ObjectURN: urn:oma:lwm2m:ext:3410
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 1
          name: GTIN model number
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Standard global trade-in international number for the control device.
        - id: 2
          name: Manufacturer identifier
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: Unique identifier of the manufacturer of the control device, equivalent to IEEE's OUI (Organizational Unique Identifier). This value should be a Hexadecimal value. This value may be used by an online uCIFI product catalog server, for software modules to retrieve the data model of a device using this attribute associated with the model number on the "Device" (Id=3) object.
        - id: 3
          name: User-given name
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: User-readable name of the device set by the user.
        - id: 4
          name: Asset identifier
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Identifier of the asset (e.g. meter, luminaire, container) that is controlled by the device.
        - id: 5
          name: Installation date
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: Installation date of the device.
        - id: 6
          name: Software update
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Set to True while software within the device is being updated.
        - id: 7
          name: Maintenance
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Set to True when the device is in maintenance mode.
        - id: 8
          name: Configuration reset
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the configuration parameters (and only the configuration parameters) of the device. It does not clear any counter (e.g. kWh counter or operating hour counter).
        - id: 9
          name: Device operating hours
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: h
          description: Cumulated number of hours during which the device has been powered on.
        - id: 10
          name: Additional firmware information
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Additional information about peripheral firmware versions. The format is left to the vendor.
- Name: Battery
  Description1: The uCIFI battery object provides attributes to monitor battery level and activity.
  Description2: ""
  ObjectID: 3411
  ObjectURN: urn:oma:lwm2m:ext:3411
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 1
          name: Battery level
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: /100
          description: Level of charge of the battery in % of total possible charge.
        - id: 2
          name: Battery capacity
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: Ah
          description: Nominal capacity of the battery in Ampere hour.
        - id: 3
          name: Battery voltage
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: V
          description: Level of charge of the battery in Volts.
        - id: 4
          name: Type of battery
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Describes the type of battery (e.g. Li-Ion rechargeable).
        - id: 5
          name: Low battery threshold
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: /100
          description: Threshold below which an event is generated by the device.
        - id: 6
          name: Battery level too low
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Set to True if battery level is below or equal the low battery threshold. Set to False otherwise.
        - id: 7
          name: Battery shutdown
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Indicates that the device has shut down due to battery discharge. Can be reset by central application.
        - id: 8
          name: Number of cycles
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Number of times the battery has discharged and recharged.
        - id: 9
          name: Supply loss
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Applies for battery devices that are also connected to mains supply. Set to True when mains power is lost. Set to False when mains power is back.
        - id: 10
          name: Supply loss counter
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Number of supply losses since last reset.
        - id: 11
          name: Supply loss counter reset
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the supply loss counter.
        - id: 12
          name: Supply loss reason
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Reason identified by the device why the device has lost mains supply (e.g. lightning if the device measured a high voltage, accident if the device identified a move with an accelerometer).
- Name: LPWAN Communication
  Description1: The uCIFI communication object provides attributes related to the communication on the LPWAN network, including multicast grouping.
  Description2: ""
  ObjectID: 3412
  ObjectURN: urn:oma:lwm2m:ext:3412
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 1
          name: Type of network
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Type of LPWAN communication network (e.g. LoRaWAN, NB-IoT, wireless mesh, power line).
        - id: 2
          name: IPv4 address
          operations: RW
          multipleinstances: Multiple
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Device’s IPv4 address.
        - id: 3
          name: IPv6 address
          operations: RW
          multipleinstances: Multiple
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Device’s IPv6 address.
        - id: 4
          name: Network address
          operations: RW
          multipleinstances: Multiple
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Address of the device on the LPWAN network.
        - id: 5
          name: Secondary network address
          operations: RW
          multipleinstances: Multiple
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Secondary address used to communicate with the device on the LPWAN network.
        - id: 6
          name: MAC address
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: IEEE MAC address of the device.
        - id: 7
          name: Peer address
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Address of a peer (e.g. a router, a mesh node, a gateway).
        - id: 8
          name: Multicast group address
          operations: RW
          multipleinstances: Multiple
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Group address from which thedevice should accept incoming messages and/or commands.
        - id: 9
          name: Multicast group key
          operations: RW
          multipleinstances: Multiple
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Security key (e.g. AES128) to be shared with other members to be part of a multicast group.
        - id: 10
          name: Data rate
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: B/s
          description: Data rate of the communication used on the LPWAN network.
        - id: 11
          name: Transmit power
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: dBm
          description: Transmit power (also called TxPower) used by the device on the LPWAN network in decibel per milliwatt.
        - id: 12
          name: Frequency
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: Hz
          description: Frequency of the wireless communication used on the LPWAN network.
        - id: 13
          name: Session time
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: Starting time of the multicast session. The device shall not accept incoming messages before this time or after this time + session duration.
        - id: 14
          name: Session duration
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: s
          description: Duration of the multicast session. The device shall accept incoming messages only during this session duration time, starting at "Session time".
        - id: 15
          name: Mesh node
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Set to True if the device is a mesh node that should repeat incoming messages on a mesh network.
        - id: 16
          name: Maximum repeat time
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Maximum number of times a message should be repeated within a mesh network.
        - id: 17
          name: Number of repeats
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Number of mesh nodes between the device and the destination device (e.g. another device or a router) including the destination node, on a mesh network.
        - id: 18
          name: Signal to noise ratio
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: dB
          description: Ratio of signal power to the noise power.
        - id: 19
          name: Communication failure
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Set to True when the device can't communicate properly.
        - id: 20
          name: Received Signal Strength Indication
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: dBm
          description: Signal strength of the communication network measured by the device (a.k.a. RSSI or signal level).
        - id: 21
          name: IMSI
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Device’s International Mobile Subscriber Identity.
        - id: 22
          name: IMEI
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Device’s International Mobile Equipment Identity.
        - id: 23
          name: Current Communication Operator
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Device’s current communication operator. Communication operators could be private operators. Thus this resource is free text format and does not use Mobile Network Code or equivalent.
        - id: 24
          name: Integrated Circuit Card Identifier
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Unique identifier used to identify a communication SIM card. The ICCID is defined by the ITU-T recommendation E.118 as the Primary Account Number, composed of 19 or 20 characters containing the ISO Industry Identifier, country code, issuer identity, account ID, and other data which allows the network operator to identify the card.
- Name: uCIFI Generic Actuator
  Description1: The uCIFI generic actuator may be used for any actuator but not to replace Outdoor Lamp Controllers nor for an Irrigation Valves which have a specific device type in the uCIFI data model.
  Description2: ""
  ObjectID: 3413
  ObjectURN: urn:oma:lwm2m:ext:3413
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 1
          name: Default dimming level
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..100
          units: /100
          description: Default dimming level that the generic actuator applies when the device is powered ON.
        - id: 2
          name: Dimming level
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..100
          units: /100
          description: Actual dimming level (0 for OFF and 100% for ON) measured on the actuator.
        - id: 3
          name: Command
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..100
          units: /100
          description: Command (e.g. manual override, scheduler) sent to the actuator.
        - id: 4
          name: Command in action
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..100
          units: /100
          description: 'For devices connected on slow LPWAN networks, the command in action (this resource) may differ from a command that was sent (resource ID: 3). The command in action is the actual value of the command in action in the actuator.'
        - id: 5
          name: Scheduler ID
          operations: RW
          multipleinstances: Multiple
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: The identifier of the schedulers that are assigned to the Command of this actuator.
        - id: 6
          name: Invalid scheduler
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Set to True when one of the schedulers can’t be executed or is not supported by the actuator. Otherwise set to False.
- Name: uCIFI data bridge
  Description1: The uCIFI data bridge object may be used to transport data from a 3rd party device, operating a proprietary network or protocol, over a LwM2M compliant network.
  Description2: ""
  ObjectID: 3414
  ObjectURN: urn:oma:lwm2m:ext:3414
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 1
          name: Payload
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: Content of the message that is to be transported.
        - id: 2
          name: Hash
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Hash to check the consistency of the data payload. Hash mechanism and calculation is vendor-specific.
        - id: 3
          name: Cumulated daily data volume up
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: B
          description: Cumulated volume of data received by the device since beginning of the day. This information could be used for data invoicing.
        - id: 4
          name: Cumulated daily data volume down
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: B
          description: Cumulated volume of data sent by the device since beginning of the day. This information could be used for data invoicing.
        - id: 5
          name: Cumulated daily data volume total
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: B
          description: Cumulated volume of data sent and received by/from the device since beginning of the day. This information could be used for data invoicing.
        - id: 6
          name: Communication error
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Set to True if the device detects a difference in a received payload and the hash.
- Name: Time synchronization
  Description1: The uCIFI time synchronization object enables a device to sync-up its internal clock with a remote NTP server.
  Description2: ""
  ObjectID: 3415
  ObjectURN: urn:oma:lwm2m:ext:3415
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 1
          name: NTP server address
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: Hostname or IP address of the Network Time Protocol server.
        - id: 2
          name: Backup NTP server address
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Hostname or IP address of a backup NTP server to be used in case the main NTP server does not respond.
        - id: 3
          name: NTP period
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Number of hours before which the device tries to reach the NTP server for time synchronization.
        - id: 4
          name: Last time sync
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: h
          description: Last time at which a successful time synchronization occurred.
        - id: 5
          name: Time sync error
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Set to True in case the latest time synchronization operation failed. Set to False in case the last operation succeeded.
- Name: Outdoor lamp controller
  Description1: The uCIFI outdoor lamp controller object provides attributes to control, command and monitor outdoor luminaires in streets, in tunnels, on roads and for illumination of park and gardens.
  Description2: ""
  ObjectID: 3416
  ObjectURN: urn:oma:lwm2m:ext:3416
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 1
          name: Command
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..100
          units: /100
          description: Command (e.g. manual override, scheduler) sent to the outdoor lamp controller.
        - id: 2
          name: Command in action
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..100
          units: /100
          description: 'For outdoor lighting applications, the command in action (this resource) may differ from a command that was sent (resource ID: 1), due to LPWAN network constraints and/or light adjustments within the lamp’s control gear (e.g. virtual power settings). The command in action is the actual value of the command in action in the outdoor lamp controller.'
        - id: 3
          name: Dimming level
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..100
          units: /100
          description: Dimming level (0 for OFF and 100% for ON) measured on the outdoor lamp controller.
        - id: 4
          name: Default dimming level
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..100
          units: /100
          description: The default dimming level that the outdoor lamp controller applies when the device is powered ON.
        - id: 5
          name: Lamp failure
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Set to True if the outdoor lamp controller detects that the lamp is not producing light while it is expected to (e.g. the lamp is broken).
        - id: 6
          name: Lamp failure reason
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Description of the reason why the lamp failed (e.g. low power on a LED engine, no consumption detected while relay closed).
        - id: 7
          name: Control gear failure
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Set to True in case the control gear has a failure. Outdoor lamp controllers may read the control gear failure from a DALI bus or by analyzing a 0-10 volts interface to the control gear.
        - id: 8
          name: Control gear failure reason
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Description of the reason why the control gear failed. You may refer to the DiiA list of possible control gear failures.
        - id: 9
          name: Relay failure
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Set to True if the outdoor lamp controller detects that its relay is not operating as it is expected to.
        - id: 10
          name: Day burner
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Set to True in case the lamp is ON while it should be OFF (e.g. day burner).
        - id: 11
          name: Cycling failure
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Set to True if the outdoor lamp controller detects that the lamp is switching ON and OFF too often.
        - id: 12
          name: Control gear communication failure
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Set to True in case the control gear (e.g. LED driver) does not answer on the DALI bus.
        - id: 13
          name: Scheduler ID
          operations: RW
          multipleinstances: Multiple
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Identifier(s) of the scheduler(s) that are assigned to the Command of this outdoor lamp controller.
        - id: 14
          name: Invalid scheduler
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Set to True when one of the schedulers can’t be executed or is not supported by the outdoor lamp controller. Otherwise set to False.
        - id: 15
          name: Lamp operating hours
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: h
          description: Cumulated number of hours during which the lamp has been ON with a strictly positive dimming level.
        - id: 16
          name: Lamp operating hours reset
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset of the lamp operating hours counter.
        - id: 17
          name: Lamp ON timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: Last date and time at which the lamp switched ON, i.e. from no light to light (e.g. power off to power on and/or dim level = 0 to dim level > 0).
        - id: 18
          name: Lamp switch counter
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Number of times the lamp was switched from ON to OFF since the last lamp switch counter reset.
        - id: 19
          name: Lamp switch counter reset
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the lamp switch counter.
        - id: 20
          name: Control gear start counter
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Number of times the control gear was switched from ON to OFF.
        - id: 21
          name: Control gear temperature
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: Cel
          description: Temperature measured by the control gear and transmitted to the device through DALI, Zhaga D4i or equivalent.
        - id: 22
          name: Control gear thermal derating
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Set to True if the control gear has derated the light source due to high temperature.
        - id: 23
          name: Control gear thermal derating counter
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Number of time the control gear has derated the light source due to a high temperature, since last counter reset.
        - id: 24
          name: Control gear thermal derating counter reset
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset of the control gear thermal derating counter.
        - id: 25
          name: Control gear thermal shutdown
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Set to True if the control gear has shut the light source down due to high temperature.
        - id: 26
          name: Control gear thermal shutdown counter
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Number of times the control gear has shutdown the light source since last counter reset.
        - id: 27
          name: Control gear thermal derating counter reset
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset of the control gear shutdown counter.
        - id: 28
          name: Output port
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Address or reference of the output port (e.g. DALI port address or 1-10 volt output) in case of multiple control gears.
        - id: 29
          name: Standby mode
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Set to True if the outdoor lamp controller should keep its relay closed (control gear is powered ON) when command and/or dimming level is equal to 0. Set to False if the outdoor lamp controller should open its relay (control gear is not powered ON) when command and/or dimming level is equal to 0.
        - id: 30
          name: Constant light output
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Set to True to activate Constant Light Output dimming correction on the outdoor lamp controller. Set to False to deactivate Constant Light Output.
        - id: 31
          name: Cleaning factor enabled
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Light output of a luminaire may depend on the lamp cleaning factor. Cleaning factor may be used as a light output compensation. Set to True to activate lamp cleaning correction on the outdoor lamp controller. Set to False to deactivate the lamp cleaning correction.
        - id: 32
          name: Cleaning period
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Number of days after which cleaning factor is back to 100%.
        - id: 33
          name: Initial lamp cleaning factor
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..100
          units: /100
          description: Initial lamp cleaning correction factor to multiply to the command when the luminaire is cleaned, at the lamp cleaning date.
        - id: 34
          name: Lamp cleaning date
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: Date at which the luminaire was last (or will be next) cleaned and the lamp cleaning factor should be set to the initial lamp cleaning factor.
        - id: 35
          name: Control type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..13
          units: ""
          description: 'Type of control system with whioch the outdoor lamp controller switches, dims and monitors the lamp. The possible control types are: 0: No dimming control, 1 : DALI part 201 - Device Type 0, 2 : DALI part 202 - Device Type 1, 3 : DALI part 203 - Device Type 2, 4 : DALI part 204 - Device Type 3, 5 : DALI part 205 - Device Type 4, 6 : DALI part 206 - Device Type 5, 7 : DALI part 207 - Device Type 6, 8 : DALI part 208 - Device Type 7, 9 : DALI part 209 - Device Type 8, 10 : 0-10V, 11 : PWM, 12 : PWM_N, 13 : Other'
        - id: 36
          name: Nominal Lamp wattage
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: W
          description: Active power of the light source at 100% dimming level.
        - id: 37
          name: Minimum dimming level
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: /100
          description: Minimum dimming level under which the lamp will most probably not operate.
        - id: 38
          name: Minimum lamp wattage
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: W
          description: Expected active power of the light source at its minimum dimming level. This value may be used to detect failure at low dimming level.
        - id: 39
          name: Light color temperature command
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: K
          description: Latest light color temperature command sent to the lamp actuator.
        - id: 40
          name: Actual light color temperature
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: K
          description: The actual light color temperature of the light source.
        - id: 41
          name: Virtual power output
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..100
          units: /100
          description: Percentage of nominal power at which the light source should be set when the Command is set to 100%.
        - id: 42
          name: Voltage at max dim level
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: V
          description: Voltage level on the control port that corresponds to maximum dimming level. This applies only if Control Type = 0-10V.
        - id: 43
          name: Voltage at min dim level
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: V
          description: Voltage level on the control port that corresponds to minimum dimming level. This applies only if Control Type = 0-10V.
        - id: 44
          name: Light source voltage
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: V
          description: Voltage (usually DC voltage) to the light source or generic load, measured at the output of the control gear.
        - id: 45
          name: Light source current
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: A
          description: Current (usually DC current) delivered by the control gear to the light source or generic load, measured at the output of the control gear.
        - id: 46
          name: Light source active power
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: W
          description: Active power of the light source or generic load, measured at the output of the control gear.
        - id: 47
          name: Light source active energy
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: kWh
          description: Cumulated active energy consumption of the light source or generic load, measured at the output of the control gear.
- Name: Luminaire asset
  Description1: The uCIFI luminaire asset is an object that enables outdoor lighting control software to configure outdoor lamp controllers. It also enables outdoor lamp controllers to send Zhaga D4i or DALI attributes read from the control gears, to centrally managed outdoor lighting control software or asset management systems.
  Description2: ""
  ObjectID: 3417
  ObjectURN: urn:oma:lwm2m:ext:3417
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 1
          name: Asset GTIN
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: Global trade-in international number used in the Luminaire Asset controlled by the device.
        - id: 2
          name: Year of manufacture
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Year of manufacture of the luminaire.
        - id: 3
          name: Week of manufacture
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Week of manufacture of the luminaire.
        - id: 4
          name: Nominal light output
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: lm
          description: Nominal light output of the luminaire.
        - id: 5
          name: Light distribution type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Enumeration of possible light distribution type, using the Zhaga D4i enumeration. Please refer to ZD4i standard for more details.
        - id: 6
          name: Luminaire color
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Painting color of the luminaire.
        - id: 7
          name: Nominal input power
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: W
          description: Nominal input power of the luminaire.
        - id: 8
          name: Power at minimum dim level
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: W
          description: Power at minimum dim level for the luminaire.
        - id: 9
          name: Nominal max AC mains voltage
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: V
          description: Nominal max AC mains voltage for the luminaire to operate.
        - id: 10
          name: Nominal min AC mains voltage
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: V
          description: Nominal min AC mains voltage for the luminaire to operate.
        - id: 11
          name: CRI
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..100
          units: ""
          description: Color rendering index (0 to 100) of the luminaire.
        - id: 12
          name: CCT value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: K
          description: Color temperature of the luminaire.
        - id: 13
          name: Luminaire identification
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: 'Luminaire identification as per DiiA/D4i specification part 251 (MB1 extension): 60 ascii character string.'
        - id: 14
          name: Luminaire identification number
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: 'Luminaire identification number as per DiiA/D4i specification part 251 (MB1 extension): 20 digit number.'
- Name: Electrical monitor
  Description1: The uCIFI electrical monitor object provides attributes related to the analysis of electrical consumption in an outdoor luminaire or in a streetlight cabinet. It also identifies electrical anomalies.
  Description2: ""
  ObjectID: 3418
  ObjectURN: urn:oma:lwm2m:ext:3418
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 1
          name: Supply voltage
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: V
          description: Electrical voltage supplied to the device.
        - id: 2
          name: Supply current
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: A
          description: Electrical current supplied to the device.
        - id: 3
          name: Frequency
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: Hz
          description: Frequency of the supply current to the device.
        - id: 4
          name: Active power
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: W
          description: Active power consumed by the device and its electrical load.
        - id: 5
          name: Power factor
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: -1..1
          units: ""
          description: Power factor is equal to active power divided by apparent power. The value is between -1 and +1.
        - id: 6
          name: Cumulated active energy
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: kWh
          description: Cumulated number of kWh measured by the device and its load since last energy counter reset.
        - id: 7
          name: Energy reset
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset both cumulated active and reactive energy counter.
        - id: 8
          name: Low power factor threshold
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Threshold below which the device should trigger a low power factor event.
        - id: 9
          name: Low power factor
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Set to True if the power factor is below threshold. This is an absolute value threshold.
        - id: 10
          name: Low power threshold
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: W
          description: Threshold below which the device should trigger a low power event.
        - id: 11
          name: Low power threshold at low dim level
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: W
          description: Threshold below which the device should trigger a low power event. This is an addition to the low power threshold to allow a separated threshold when dim level is low.
        - id: 12
          name: Low power
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Set to True if the power is below threshold. Vendor may consider the Low power threshold at low dim level to set this resource to True, taking into account the lamp dim level.
        - id: 13
          name: High power threshold
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: W
          description: Threshold above which the device should trigger a high power event.
        - id: 14
          name: High power threshold at low dim level
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: W
          description: Threshold above which the device should trigger a high power event. This is an addition to the high power threshold to allow a separated threshold when dim level is low.
        - id: 15
          name: High power
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Set to True if the power is above threshold. Vendor may consider the High power threshold at low dim level to set this resource to True, taking into account the lamp dim level.
        - id: 16
          name: Low current threshold
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: A
          description: Threshold below which the device should trigger a low current event.
        - id: 17
          name: Low current
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Set to True if the current is below threshold.
        - id: 18
          name: High current threshold
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: A
          description: Threshold above which the device should trigger a high current event.
        - id: 19
          name: High current
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Set to True if the current is above threshold.
        - id: 20
          name: Low voltage threshold
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: V
          description: Threshold below which the device should trigger a low voltage event.
        - id: 21
          name: Low voltage
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Set to True if the voltage is below threshold.
        - id: 22
          name: High voltage threshold
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ON;OFF
          units: V
          description: Threshold above which the device should trigger a high voltage event.
        - id: 23
          name: High voltage
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Set to True if the voltage is above threshold.
        - id: 24
          name: Critical inrush threshold
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: A
          description: Threshold above which the device should trigger a critical inrush event.
        - id: 25
          name: Critical inrush current
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Set to True if the inrush current is above threshold.
        - id: 26
          name: Minimum inrush Current
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: A
          description: Minimum inrush current since last configuration.
        - id: 27
          name: Maximum inrush Current
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: A
          description: Maximum inrush current since last configuration.
        - id: 28
          name: Latest inrush Current
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: A
          description: Latest inrush current measured since last time the relay switched ON.
        - id: 29
          name: Reactive power
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: var
          description: Instantaneous reactive power measured by the device and its electrical load.
        - id: 30
          name: Reactive energy
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: varh
          description: Cumulative reactive power measured by the device and its electrical load since last energy counter reset.
- Name: Photocell
  Description1: A uCIFI photocell object is used for lighting control, particularly to identify when light should be switched ON/OFF.
  Description2: ""
  ObjectID: 3419
  ObjectURN: urn:oma:lwm2m:ext:3419
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 1
          name: ON lux level
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: lx
          description: Lux level below which the photocell switches its relay ON or sends a switch ON message on the network.
        - id: 2
          name: OFF lux level
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: lx
          description: Lux level above which the photocell switches its relay OFF or sends a switch OFF message on the network.
        - id: 3
          name: Photocell status
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Set to True if lux level is below ON lux level. Set to False if lux level is above OFF lux.
- Name: LED color light
  Description1: The uCIFI LED color light enables to control light colors of a LED luminaire.
  Description2: ""
  ObjectID: 3420
  ObjectURN: urn:oma:lwm2m:ext:3420
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 1
          name: RGB value
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: 'Text string according to the RBG hexadecimal format with # (e.g. #FF0000 for 100% red).'
- Name: Single-phase electrical meter
  Description1: The uCIFI single-phase electrical meter measures the electrical consumption of loads on one electrical line, such as electrical cabinets in city infrastructures, street lighting networks, homes and buildings.
  Description2: ""
  ObjectID: 3421
  ObjectURN: urn:oma:lwm2m:ext:3421
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 1
          name: Voltage
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: V
          description: Instantaneous voltage measured between line and neutral.
        - id: 2
          name: Low voltage threshold
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: V
          description: Set to True when voltage is below low voltage threshold.
        - id: 3
          name: Low voltage
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Set to True when voltage is below low voltage threshold.
        - id: 4
          name: High voltage threshold
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: V
          description: Threshold above which the high voltage resource is set to True.
        - id: 5
          name: High voltage
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Set to True when voltage is above high voltage threshold.
        - id: 6
          name: Current
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: A
          description: Instantaneous current measured.
        - id: 7
          name: Low current threshold
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: A
          description: Threshold below which the low current resource is set to True.
        - id: 8
          name: Low current
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Set to True when current is below low current threshold.
        - id: 9
          name: High current threshold
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: V
          description: Threshold above which the high current resource is set to True.
        - id: 10
          name: High current
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Set to True when current is above high current threshold.
        - id: 11
          name: Frequency
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: Hz
          description: Instantaneous frequency measured.
        - id: 12
          name: Angle of I-U
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: deg
          description: Instantaneous phase angle measured.
        - id: 13
          name: Instantaneous Power Factor
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: ""
          description: Instantaneous power factor overall.
        - id: 14
          name: Low power factor threshold
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Threshold below which the low power factor resource is set to True.
        - id: 15
          name: Low power factor
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Set to True when power factor is below low power factor threshold.
        - id: 16
          name: Active power+ (QI+QIV)
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: W
          description: Active power import
        - id: 17
          name: Active power- (QII+QIII)
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: W
          description: Active power export.
        - id: 18
          name: Reactive power+ (QI+QII)
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: var
          description: Reactive power import.
        - id: 19
          name: Reactive power- (QIII+QIV)
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: var
          description: Reactive power export
        - id: 20
          name: Instantaneous Apparent Power import (+VA)
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: VA
          description: Instantaneous apparent power import.
        - id: 21
          name: Instantaneous Apparent Power export (-VA)
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: VA
          description: Instantaneous apparent power export.
        - id: 22
          name: Instantaneous Active Power (|+A|+|-A|)
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: W
          description: Instantaneous active power.
        - id: 23
          name: Instantaneous Net Active Power (|+A|-|-A|)
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: W
          description: Instantaneous net active power.
        - id: 24
          name: Measurement period of Instantaneous value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: s
          description: Measurement period of instantaneous value.
        - id: 25
          name: Active energy import (+A) Un
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: Wh
          description: Active energy import (unified rate).
        - id: 26
          name: Active energy export (-A) Un
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: Wh
          description: Active energy export (unified rate).
        - id: 27
          name: Active energy (|+A|+|-A|) Combined total
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: Wh
          description: Active energy (|+A|+|-A|) Combined total.
        - id: 28
          name: Active energy (|+A|-|-A|) Combined total
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: Wh
          description: Active energy (|+A|-|-A|) Combined total.
        - id: 29
          name: Reactive energy import (+R) Un
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: varh
          description: Reactive energy import (unified rate)
        - id: 30
          name: Reactive energy export (-R) Un
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: varh
          description: Reactive energy export (unified rate).
        - id: 31
          name: Reactive energy QI (+Ri) Un
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: varh
          description: Reactive energy QI (+Ri) (unified rate).
        - id: 32
          name: Reactive energy QII (+Rc) Un
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: varh
          description: Reactive energy QII (+Rc) (unified rate).
        - id: 33
          name: Reactive energy QIII (-Ri) Un
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: varh
          description: Reactive energy QIII (-Ri) (unified rate).
        - id: 34
          name: Reactive energy QIV (-Rc) Un
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: varh
          description: Reactive energy QIV (-Rc) (unified rate).
        - id: 35
          name: Apparent energy import Un
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: VAh
          description: Apparent energy import (unified rate).
        - id: 36
          name: Apparent energy export Un
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: VAh
          description: Apparent energy export (unified rate).
        - id: 37
          name: Number of power failures
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Number of power failures.
        - id: 38
          name: Number of long power failures
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Number of long power failures.
        - id: 39
          name: Time threshold for long power failure
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: s
          description: Time threshold for long power failure.
        - id: 40
          name: Duration of last long power failure
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: s
          description: Duration of last long power failure.
        - id: 41
          name: Threshold for voltage sag
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: V
          description: Threshold for voltage sag.
        - id: 42
          name: Time threshold for voltage sag
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: s
          description: Time threshold for voltage sag.
        - id: 43
          name: Number of voltage sags
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Number of voltage sags.
        - id: 44
          name: Duration of last voltage sag
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: s
          description: Duration of last voltage sag.
        - id: 45
          name: Magnitude of last voltage sag
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: V
          description: Magnitude of last voltage sag.
        - id: 46
          name: Threshold for voltage swell
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: V
          description: Threshold for voltage sag.
        - id: 47
          name: Time threshold for voltage swell
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: s
          description: Time threshold for voltage sag.
        - id: 48
          name: Number of voltage swells
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Number of voltage sags.
        - id: 49
          name: Duration of last voltage swell
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: s
          description: Duration of last voltage sag.
        - id: 50
          name: Magnitude of last voltage swell
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: V
          description: Magnitude of last voltage swell.
        - id: 51
          name: Threshold for missing voltage (voltage cut)
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: V
          description: Threshold for missing voltage (voltage cut).
        - id: 52
          name: Time threshold for voltage cut
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: s
          description: Time threshold for voltage cut.
        - id: 53
          name: Voltage cut
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Set to True if a voltage cut for a time above the time threshold and for a voltage below the voltage threshold is detected.
        - id: 54
          name: CT Numerator Parameter
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Transformer ratio - current (numerator).
        - id: 55
          name: CT Denominator Parameter
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Transformer ratio - voltage (denominator).
        - id: 56
          name: VT Numerator Parameter
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Transformer ratio - current (numerator).
        - id: 57
          name: VT Denominator Parameter
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Transformer ratio - voltage (denominator).
- Name: Gas meter
  Description1: The uCIFI gas meter measures the volume of gas that was distributed through the gas meter, in pulse count and/or in m3. It also detects anomalies in the gas meter.
  Description2: ""
  ObjectID: 3423
  ObjectURN: urn:oma:lwm2m:ext:3423
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 1
          name: Cumulated gas volume
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: m3
          description: Number of cubic meters of gas distributed through the meter since last reset.
        - id: 2
          name: Cumulated gas meter value reset
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the cumulated meter value.
        - id: 3
          name: Type of meter
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Type of gas meter.
        - id: 4
          name: Cumulated pulse value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Cumulated number of pulses detected on the gas meter.
        - id: 5
          name: Cumulated pulse value reset
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the cumulated pulse value.
        - id: 6
          name: Pulse ratio
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Ratio to calculate gas volume from pulse value.
        - id: 7
          name: Minimum flow rate
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: m3/s
          description: Minimum flow rate since last metering value.
        - id: 8
          name: Maximum flow rate
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: m3/s
          description: Maximum flow rate since last metering value.
        - id: 9
          name: Leak suspected
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Set to True if gas leak is suspected.
        - id: 10
          name: Leak detected
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Set to True if gas leak is detected.
        - id: 11
          name: High temperature
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Set to True if high temperature is detected around the gas meter.
- Name: Water meter
  Description1: The uCIFI water meter measures water volume that was distributed through a water meter, in pulse count as well as in m3. It also detects anomalies in the water meter.
  Description2: ""
  ObjectID: 3424
  ObjectURN: urn:oma:lwm2m:ext:3424
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 1
          name: Cumulated water volume
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: m3
          description: Number of cubic meters of water distributed through the meter since last reset.
        - id: 2
          name: Cumulated water meter value reset
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the cumulated meter value.
        - id: 3
          name: Type of meter
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Type of water meter.
        - id: 4
          name: Cumulated pulse value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Cumulated number of pulses detected on the meter.
        - id: 5
          name: Cumulated pulse value reset
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the cumulated pulse value.
        - id: 6
          name: Pulse ratio
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Ratio to calculate water volume from pulse value.
        - id: 7
          name: Minimum flow rate
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: m3/s
          description: Minimum flow rate since last metering value.
        - id: 8
          name: Maximum flow rate
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: m3/s
          description: Maximum flow rate since last metering value.
        - id: 9
          name: Leak suspected
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Set to True if water leak is suspected.
        - id: 10
          name: Leak detected
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Set to True if leak is detected.
        - id: 11
          name: Back flow detected
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Set to True if water back flow is detected.
        - id: 12
          name: Blocked meter
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Set to True if water meter is blocked.
        - id: 13
          name: Fraud detected
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Set to True if fraud is detected.
- Name: Irrigation valve
  Description1: The uCIFI irrigation valve provides a way to control and monitor an irrigation valve.
  Description2: ""
  ObjectID: 3425
  ObjectURN: urn:oma:lwm2m:ext:3425
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 1
          name: Default status
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..100
          units: /100
          description: Default status (level of opening of the valve from 0 to 100%) that is applied when the device is powered ON.
        - id: 2
          name: Status
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..100
          units: /100
          description: Actual level of opening of the valve (from 0 to 100%).
        - id: 3
          name: Command
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..100
          units: /100
          description: Command (e.g. manual override, scheduler) sent to the irrigation valve.
        - id: 4
          name: Command in action
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..100
          units: /100
          description: 'For devices connected on slow LPWAN networks, the command in action (this resource) may differ from a command that was sent (resource ID: 3). The command in action is the actual value of the command in action on the irrigation valve.'
        - id: 5
          name: Scheduler ID
          operations: RW
          multipleinstances: Multiple
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Identifiers of the schedulers that are assigned to the Command of this irrigation valve.
        - id: 6
          name: Invalid scheduler
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Set to True when one of the schedulers can’t be executed or is not supported by this irrigation valve. Otherwise set to False.
- Name: Water quality sensor
  Description1: The uCIFI water quality sensor measures the quality of the water in the drinkable water distribution network, in water tanks or in lakes and rivers.
  Description2: ""
  ObjectID: 3426
  ObjectURN: urn:oma:lwm2m:ext:3426
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 1
          name: pH
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Current or last value of the pH measured by the sensor.
        - id: 2
          name: Chlorine
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ppm
          description: Current or last value of the chlorine measured by the sensor.
        - id: 3
          name: Redox or ORP
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: V
          description: Current or last value of the oxidation reduction potential measured by the sensor.
        - id: 4
          name: Total dissolved gas or TDG
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ppm
          description: Current or last value of the dissolved gas measured by the sensor.
        - id: 5
          name: Dissolved oxygen
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ppm
          description: Current or last value of the dissolved oxygen measured by the sensor.
        - id: 6
          name: Turbidity
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: NTU
          description: Current or last value of the turbidity measured by the sensor using the Nephelometric Turbidity Unit (NTU).
        - id: 7
          name: Conductivity
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: S/m
          description: Current or last value of the conductivity measured by the sensor.
        - id: 8
          name: Conductance
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: S/m
          description: Current or last value of the conductance measured by the sensor.
        - id: 9
          name: Total suspended solids
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: mg/l
          description: Current or last value of the TSS measured by the sensor.
        - id: 10
          name: Total dissolved solids
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: mg/l
          description: Current or last value of the TDS measured by the sensor.
        - id: 11
          name: Salinity
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ppt
          description: Current or last value of the salinity measured by the sensor.
        - id: 12
          name: NO3
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: mg/l
          description: Current or last value of NO3 measured by the sensor.
        - id: 13
          name: NH3
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: mg/l
          description: Current or last value of NH3 measured by the sensor.
        - id: 14
          name: NH4
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: mg/l
          description: Current or last value of NH4 measured by the sensor.
- Name: Pressure monitoring sensor
  Description1: The uCIFI water pressure monitoring sensor measures water pressure and help identify water leaks in water distribution pipelines.
  Description2: ""
  ObjectID: 3427
  ObjectURN: urn:oma:lwm2m:ext:3427
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 1
          name: Pressure
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: Pa
          description: Last or current pressure value measured by the sensor.
        - id: 2
          name: Sampling period
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: s
          description: Number of seconds between two measurement.
        - id: 3
          name: Leak detected
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Set to True if a water leak is detected by the sensor.
        - id: 4
          name: Hammer effect detected
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Set to True if hammer effect is detected in the water pipeline.
        - id: 5
          name: Minimum measured pressure value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: Pa
          description: Minimum value measured by the sensor since power ON or reset.
        - id: 6
          name: Maximum measured pressure value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: Pa
          description: Maximum value measured by the sensor since power ON or reset.
        - id: 7
          name: Minimum range pressure value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: Pa
          description: Minimum value that can be measured by the sensor.
        - id: 8
          name: Maximum range pressure value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: Pa
          description: Maximum value that can be measured by the sensor.
        - id: 9
          name: Reset min and max measured pressure values
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Set the minimum and maximum measured values to current value.
- Name: Air quality
  Description1: The uCIFI air quality sensor reports measurement required to calculate Air Quality Index (AIQ. It also provides resources for average calculation as per the IQ index calculation.
  Description2: ""
  ObjectID: 3428
  ObjectURN: urn:oma:lwm2m:ext:3428
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 1
          name: PM10
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ug/m3
          description: Level of PM10 measured by the air quality sensor.
        - id: 2
          name: PM10 24 hour average
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ug/m3
          description: Average level of PM10 measured by the sensor during the last 24 hours.
        - id: 3
          name: PM2.5
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ug/m3
          description: Level of PM2.5 measured by the air quality sensor.
        - id: 4
          name: PM2.5 24 hour average
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ug/m3
          description: Average level of PM2.5 measured by the sensor during the last 24 hours.
        - id: 5
          name: PM1
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ug/m3
          description: Level of PM1 measured by the air quality sensor.
        - id: 6
          name: PM1 24 hour average
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ug/m3
          description: Average level of PM1 measured by the sensor during the last 24 hours.
        - id: 7
          name: CO
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ppm
          description: Level of carbon monoxide measured by the air quality sensor.
        - id: 8
          name: CO 8 hour average
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ppm
          description: Average level of carbon monoxide measured by the sensor during the last 8 hours.
        - id: 9
          name: SO2
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ppm
          description: Level of sulfur dioxide measured by the air quality sensor.
        - id: 10
          name: SO2 1 hour average
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ppm
          description: Average level of sulfur dioxide measured by the sensor during the last 1 hour.
        - id: 11
          name: SO2 24 hour average
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ppm
          description: Average level of sulfur dioxide measured by the sensor during the last 24 hours.
        - id: 12
          name: O3
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ppm
          description: Level of ozone measured by the air quality sensor.
        - id: 13
          name: O3 1 hour average
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ppm
          description: Average level of ozone measured by the sensor during the last 1 hour.
        - id: 14
          name: O3 8 hour average
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ppm
          description: Average level of ozone measured by the sensor during the last 8 hour.
        - id: 15
          name: NO2
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ppm
          description: Level of nitrogen dioxide measured by the air quality sensor.
        - id: 16
          name: NO2 1 hour average
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ppm
          description: Average level of nitrogen dioxide measured by the sensor during the last 1 hour.
        - id: 17
          name: CO2
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ppm
          description: Level of carbon dioxide measured by the air quality sensor.
        - id: 18
          name: CO2 1 hour average
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ppm
          description: Average level of carbon dioxide measured by the sensor during the last 1 hour.
        - id: 19
          name: "NO"
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ppm
          description: Level of nitric oxide measured by the air quality sensor.
        - id: 20
          name: NO 1 hour average
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ppm
          description: Average level of nitric oxide measured by the sensor during the last 1 hour.
        - id: 21
          name: H2S
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ppm
          description: Level of hydrogen sulfid measured by the air quality sensor.
        - id: 22
          name: H2S 1 hour average
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ppm
          description: Average level of hydrogen sulfid measured by the sensor during the last 1 hour.
- Name: Tilt sensor
  Description1: The uCIFI tilt sensor provides the angle between the object's internal vertical and the perpendicular to the earth.
  Description2: ""
  ObjectID: 3429
  ObjectURN: urn:oma:lwm2m:ext:3429
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 1
          name: Angle
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: rad
          description: Angle between the internal vertical line and the perpendicular to earth.
        - id: 2
          name: Minimum measured Angle
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: rad
          description: Minimum angle measured by the tilt sensor since last reset or since power ON if no reset.
        - id: 3
          name: Maximum measured angle
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: rad
          description: Maximum angle measured by the tilt sensor since last reset or since power ON if no reset.
        - id: 4
          name: Reset min max angles
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Set the minimum and maximum measured angles to the current angle value.
        - id: 5
          name: Out of position threshold
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: rad
          description: The angle above which the device triggers an out of position event.
        - id: 6
          name: Out of position
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Set to True if the angle is above the out of position threshold.
- Name: Global Navigation Satellite System
  Description1: More than a positioning object, the uCIFI global navigation satellite system object provides all the information required to calculate a position/location.
  Description2: ""
  ObjectID: 3430
  ObjectURN: urn:oma:lwm2m:ext:3430
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: Fix timestamp
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Time
          rangeenumeration: ""
          units: s
          description: Timestamp of when the location measurement was performed.
        - id: 1
          name: Latitude
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: lat
          description: Decimal notation of latitude, e.g. -43.5723 [World Geodetic System 1984]. This value ranges from [-90, 90].
        - id: 2
          name: Longitude
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: lon
          description: Decimal notation of longitude, e.g. 153.21760 [World Geodetic System 1984]. This value ranges from [-180, 180].
        - id: 3
          name: Altitude
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: m
          description: Altitude above mean sea level in meters.
        - id: 4
          name: Speed
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: m/s
          description: Horizontal speed calculated by the device.
        - id: 5
          name: Heading
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: deg
          description: Direction that the device is following
        - id: 6
          name: Radius
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: m
          description: Radius of a circular area corresponding to the location’s uncertainty (GPS data precision). Negative values indicate that the radius is not available.
        - id: 7
          name: HDOP
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Horizontal dilution of precision.
        - id: 8
          name: VDOP
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Vertical dilution of precision.
        - id: 9
          name: Estimated horizontal accuracy
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: m
          description: Estimated horizontal accuracy.
        - id: 10
          name: Estimated vertical accuracy
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: m
          description: Estimated vertical accuracy.
        - id: 11
          name: Estimated speed accuracy
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: m/s
          description: Estimated speed accuracy.
        - id: 12
          name: Estimated heading accuracy
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: deg
          description: Estimated heading accuracy.
        - id: 13
          name: Fix type
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: 'Possible values are : 0 = No fix1 = Autonomous GNSS fix2 = Differential GNSS fix3 = GPS PPS4 = RTK-fixed5 = RTK-floated6 = Estimated fix7 = Dead reckoning fix8 = Manual input, surveyed9 = Simulated mode.'
        - id: 14
          name: Fix dimension
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: 'Possible values are: 0,1 = no fix2 = 2D fix3 = 3D fix As per NMEA-0183 GSA.'
        - id: 15
          name: Used satellites
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Number of satellites used for the fix.
        - id: 16
          name: Visible satellites
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Number of satellites viewed. Represent all the satellites seen but some of them cannot be in use (e.g. bad signal).
        - id: 17
          name: Satellite identifiers
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Identifier of the satellite.
        - id: 18
          name: Satellite identifiers
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: deg
          description: Elevation of the satellite.
        - id: 19
          name: Satellite azimuth
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: deg
          description: Azimuth of the satellite.
        - id: 20
          name: Almanac
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: 'Validity of the almanac. Possible values are: 0 = invalid1 = valid.'
        - id: 21
          name: Ephemeris
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: 'Validity of the ephemeris of each satellite. Possible values are : 0 = invalid1 = valid.'
        - id: 22
          name: Signal-to-noise ratio
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: dB
          description: Strength of the signal for each satellite, also called carrier-to-noise.
        - id: 23
          name: GNSS
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: GNSS used for the fix. A mask is used with the following bit definition:0 = GPS (USA)1= GALILEO (EU)2 = GLONASS (Russia)3 = BeiDou (China)4 = QZSS (Japan)5 = IRNSS/NAVIC (India)A 0 indicates that the GNSS is not used a 1 indicates it is used.
        - id: 24
          name: Hardware RTC
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: s
          description: Time of the internal clock of the GNSS hardware.
        - id: 25
          name: Assisted GPS
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Set to True if the almanac is obtained via a cellular connection. Set to False otherwise.
        - id: 26
          name: Power command
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Command to switch the hardware ON or OFF and status of the device.
        - id: 27
          name: PDOP
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Dilution of precision (NMEA-0183 GSA).
        - id: 28
          name: Status
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: Status A=active or V=Void (NMEA-0183 RMC).
- Name: Parking Sensor
  Description1: The uCIFI parking sensor provides actual and cumulated occupancy duration as well as forbidden parking detection.
  Description2: ""
  ObjectID: 3431
  ObjectURN: urn:oma:lwm2m:ext:3431
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 1
          name: Occupancy
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Set to True if the parking place is occupied. Set to False if the parking place is free.
        - id: 2
          name: Duration
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: s
          description: Number of seconds since the parking place is occupied. If not occupied, duration shows the duration of the last occupation.
        - id: 3
          name: Daily Duration
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: s
          description: Cumulated occupation time since beginning of the day.
        - id: 4
          name: Forbidden parking detected
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Set to True if the vehicle present on the parking place is not authorized. Set to False if parking place is free or if the vehicle is authorized.
        - id: 5
          name: Type of Sensor
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Type of sensor (e.g. PIR, camera).
- Name: Traffic Counter
  Description1: The uCIFI traffic counter provides vehicle counting and traffic analysis data. A traffic counting device may implement multiple instances of this traffic counter object, each of them being in charge of counting different categories of vehicles (e.g. bikes, cars, trucks).
  Description2: ""
  ObjectID: 3432
  ObjectURN: urn:oma:lwm2m:ext:3432
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 1
          name: Cumulated number
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Cumulated number of vehicles counted since last reset.
        - id: 2
          name: Reset cumulated number
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the cumulated number of vehicles.
        - id: 3
          name: Cumulated number today
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Cumulated number of vehicles counted today.
        - id: 4
          name: Measuring period 1
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: s
          description: Time period 1 during which the counter shall provide number of vehicles (e.g. 1 hour).
        - id: 5
          name: Measuring period 2
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: s
          description: Time period 2 during which the counter shall provide number of vehicles (e.g. 15 minutes).
        - id: 6
          name: Measuring period 3
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: s
          description: Time period 3 during which the counter shall provide number of vehicles (e.g. 5 minutes).
        - id: 7
          name: Cumulated number during last period 1
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Cumulated number of vehicles counted during the last period 1 (e.g. 1 hour).
        - id: 8
          name: Cumulated number during last period 2
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Cumulated number of vehicles counted during the last period 2 (e.g. 15 minutes).
        - id: 9
          name: Cumulated number during last period 3
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Cumulated number of vehicles counted during the last period 3 (e.g. 5 minutes).
        - id: 10
          name: Average speed during last period 1
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Average speed measured on the vehicles during the last period 1 (e.g. 1 hour).
        - id: 11
          name: Average speed during last period 2
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Average speed measured on the vehicles during the last period 2 (e.g. 15 minutes).
        - id: 12
          name: Average speed during last period 3
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Average speed measured on the vehicles during the last period 3 (e.g. 5 minutes).
        - id: 13
          name: Average distance during last period 1
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Average distance between two vehicles measured during the last period 1 (e.g. 1 hour).
        - id: 14
          name: Average distance during last period 2
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Average distance between two vehicles measured during the last period 2 (e.g. 15 minutes).
        - id: 15
          name: Average distance during last period 3
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Average distance between two vehicles measured during the last period 3 (e.g. 5 minutes).
        - id: 16
          name: Speed limit threshold
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Speed limit threshold used to calculate the percentage of vehicles above speed limit.
        - id: 17
          name: Percentage above speed limit
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Percentage of vehicles driving above speed limit.
- Name: Noise sensor
  Description1: The uCIFI noise sensor reports a noise measurement in decibel. It also provides resources for minimum/maximum measured values and the minimum/maximum range that can be measured by the noise sensor and some specific alarms resulting from noise analysis by the device.
  Description2: ""
  ObjectID: 3433
  ObjectURN: urn:oma:lwm2m:ext:3433
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 1
          name: Gunshot detected
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Set to True when a gunshot is detected.
        - id: 2
          name: Abnormal noise detected
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Set to True when an abnormal noise is detected.
        - id: 3
          name: Sensor Value
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: ""
          description: Last or current measured value from the Sensor.
        - id: 4
          name: Minimum measured value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: dB
          description: Minimum value measured by the sensor since power ON or reset.
        - id: 5
          name: Maximum measured value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: dB
          description: Maximum value measured by the sensor since power ON or reset.
        - id: 6
          name: Minimum range value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: dB
          description: Minimum value that can be measured by the sensor.
        - id: 7
          name: Maximum range value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: dB
          description: Maximum value that can be measured by the sensor.
        - id: 8
          name: Reset min and max values
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the min and max measured values to current value.
- Name: People counter
  Description1: The uCIFI people counter provides people counting information using Bluetooth beacon or any other method.
  Description2: ""
  ObjectID: 3434
  ObjectURN: urn:oma:lwm2m:ext:3434
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 1
          name: Actual number of persons
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Number of persons currently identified by the device.
        - id: 2
          name: Daily number of persons
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Cumulated number of persons detected by the device since beginning of the day.
        - id: 3
          name: Cumulated number of persons
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Cumulated number of persons detected by the device since last reset.
        - id: 4
          name: Reset of cumulated number
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the cumulated number of persons.
        - id: 5
          name: Daily number of passages
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Number of passages (same people could be counted multiple times if identified several times) today.
        - id: 6
          name: Cumulated number of passages
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Cumulated number of passages since last reset.
        - id: 7
          name: Reset of cumulated number of passages
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the cumulated number of passages.
        - id: 8
          name: Type of sensor
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Type of sensor (e.g. Bluetooth beacon, WIFI detector).
- Name: Filling level
  Description1: The uCIFI filling level sensor measures how full and/or how empty a container (e.g. waste, fuel) is and reports it either in percentage or in centimeters. The filling level sensor may be complemented with a temperature sensor to compose a waste filling sensor that can also identify waste container fire.
  Description2: ""
  ObjectID: 3435
  ObjectURN: urn:oma:lwm2m:ext:3435
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 1
          name: Container height
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: cm
          description: Height of the container.
        - id: 2
          name: Actual filling percentage
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: /100
          description: Percentage of container filled with content.
        - id: 3
          name: Actual filling level
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: cm
          description: Height of content in the container.
        - id: 4
          name: High threshold
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: /100
          description: Threshold above which the container is considered full.
        - id: 5
          name: Container full
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Set to True if the actual filling percentage is above the high threshold.
        - id: 6
          name: Low threshold
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: /100
          description: Threshold below which the container is considered empty.
        - id: 7
          name: Container empty
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Set to True if the actual filling percentage is below the low threshold.
        - id: 8
          name: Average filling speed
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: /100
          description: Average percentage filled per day.
        - id: 9
          name: Average filling speed reset
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset average filling speed.
        - id: 10
          name: Forecast full date
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: Next date at which the container should reach the high threshold.
        - id: 11
          name: Forecast empty date
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: Next date at which the container should reach the low threshold.
        - id: 12
          name: Container out of location
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Set to True if the container is not at the location where it should be.
        - id: 13
          name: Container out of position
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Set to True if the container is not in correct upright position.
- Name: Edge computing manager
  Description1: The uCIFI edge computing manager object defines the capability of a device to run scripts on the device itself.
  Description2: ""
  ObjectID: 3436
  ObjectURN: urn:oma:lwm2m:ext:3436
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 1
          name: Max number of scripts
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Maximum number of scripts supported by the device.
        - id: 2
          name: Number of free slots for scripts
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Number of free slots to store new scripts.
        - id: 3
          name: Max number of conditions
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Maximum number of conditions supported by the device.
        - id: 4
          name: Number of free slots for conditions
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Number of free slots to store new conditions.
        - id: 5
          name: Edge-computing capabilities
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Vendor-specific resource to share the capabilities of the devices as regards to edge computing.
- Name: Edge computing script
  Description1: The uCIFI edge computing scripts object defines a particular script to be executed by a device under a time or any other condition set by a "Edge Computing Time Condition" or "Edge Computing Generic Condition" object.
  Description2: ""
  ObjectID: 3437
  ObjectURN: urn:oma:lwm2m:ext:3437
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 1
          name: Name
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Name of the script.
        - id: 2
          name: Signature
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Unique hash or signature associated to the script to be verified by the end-device before execution. The format of the hash or signature is vendor-specific.
        - id: 3
          name: Version
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Version of the script, as defined by the vendor.
        - id: 4
          name: Script
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: Vendor-specific script.
        - id: 5
          name: Script format
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Script format to enable the device to select the script interpreter in case it supports multiple (e.g. LUA). The format of this resource is free to support vendor-specific formats.
        - id: 6
          name: Non supported script
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Set to True if the script is not supported or if the device has identified errors in the script.
        - id: 7
          name: Non authorized script
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Set to True if the hash/signature is not correct.
- Name: Edge computing time condition
  Description1: The uCIFI edge computing time condition object defines the day/time (defined as a CRON rule) at which a particular script should be executed by a device.
  Description2: ""
  ObjectID: 3438
  ObjectURN: urn:oma:lwm2m:ext:3438
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 1
          name: Execution time/day
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: Date/time at which the script should be executed, formatted as a CRON rule.
        - id: 2
          name: Script identifier
          operations: RW
          multipleinstances: Multiple
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: Object URN/Resource ID of the script to apply to the times/days defined in the execution time/day resource.
        - id: 3
          name: Non supported time condition
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Set to True if the device can’t support the condition.
- Name: Edge computing generic condition
  Description1: The uCIFI edge computing generic condition object defines a vendor-specific condition (e.g. when a resource or an object is equal to a particular value) at which a particular script should be executed by the device.
  Description2: ""
  ObjectID: 3439
  ObjectURN: urn:oma:lwm2m:ext:3439
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 1
          name: Vendor condition
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: Condition described in a vendor specific way.
        - id: 2
          name: Script identifier
          operations: RW
          multipleinstances: Multiple
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: Object URN/Resource ID of the script to apply to the time/days defined in the vendor condition resource.
        - id: 3
          name: Non supported time condition
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Set to True if the device can’t support the condition.
- Name: LwM2M v1.0 Test Object
  Description1: This object is for use in interoperability tests of the LwM2M v1.0 technical specification. It contains resources for each available datatype.
  Description2: ""
  ObjectID: 3441
  ObjectURN: urn:oma:lwm2m:ext:3441
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: Reset values
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset all resources of this object with their initial value.
        - id: 1
          name: Randomize values
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Set random value to all resources. For multi-instance resources, the number of resource instances is also randomized.Randomization should avoid to generate too big payload. We advice to limit value to something like :- 20 characters for String, - 20 bytes for Opaque, - 10 instances for multi-instance resources.
        - id: 2
          name: Clear values
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Clear all values :- all multiple resource as empty resource - all number to 0 - String to empty string - boolean to false, - opaque to empty byte array, - time to an 1st, 1970 in the UTC time zone - objlink to null link
        - id: 3
          name: Exec With Arguments
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: This resources can be used to test "Execute Operation" with Arguments.Sent Arguments can be read via "Arguments List"(4) resource.E.g. If you send an Exec /3441/0/3 with "3='stringValue',4" as arguments value, then /3441/0/4/3 will be 'stringValue' and /3441/0/4/4 will be an empty string.
        - id: 4
          name: Arguments List
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: List of Arguments from last execute on "Exec With Arguments"(3) resource. This resource is not affected by the "Randomize values"(1) executable resource.
        - id: 110
          name: String Value
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Initial value must be "initial value".
        - id: 120
          name: Integer Value
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Initial value must be "1024".
        - id: 130
          name: Float Value
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Initial value must be "3.14159".
        - id: 140
          name: Boolean Value
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Initial value must be "true".
        - id: 150
          name: Opaque Value
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: Initial value must be the bytes sequence "0123456789ABCDEF" (Hexadecimal notation).
        - id: 160
          name: Time Value
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: 'Initial value must be the time to an 1st, 2000 in the UTC time zone. (Timestamp value : 946684800)'
        - id: 170
          name: ObjLink Value
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: Initial value must be a link to instance 0 of Device Object 3 (3:0).
        - id: 1110
          name: Multiple String Value
          operations: RW
          multipleinstances: Multiple
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Initial value must be 1 instance with ID 0 and value "initial value".
        - id: 1120
          name: Multiple Integer Value
          operations: RW
          multipleinstances: Multiple
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Initial value must be 1 instance with ID 0 and value "1024".
        - id: 1130
          name: Multiple Float Value
          operations: RW
          multipleinstances: Multiple
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Initial value must be 1 instance with ID 0 and value "3.14159".
        - id: 1140
          name: Multiple Boolean Value
          operations: RW
          multipleinstances: Multiple
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Initial value must be 1 instance with ID 0 and value "true".
        - id: 1150
          name: Multiple Opaque Value
          operations: RW
          multipleinstances: Multiple
          mandatory: Optional
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: Initial value must be 1 instance with ID 0 and value "0123456789ABCDEF"(Hexadecimal notation of the bytes sequence).
        - id: 1160
          name: Multiple Time Value
          operations: RW
          multipleinstances: Multiple
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: 'Initial value must be 1 instance with ID 0 and value 1st, 2000 in the UTC time zone (Timestamp value : 946684800).'
        - id: 1170
          name: Multiple ObjLink Value
          operations: RW
          multipleinstances: Multiple
          mandatory: Optional
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: Initial value must be 1 instance with ID 0 and value "3:0".
- Name: LwM2M v1.1 Test Object
  Description1: This object aims to make easier to do interoperability tests about LWM2M v1.1. It contains resources for each available datatype.
  Description2: ""
  ObjectID: 3442
  ObjectURN: urn:oma:lwm2m:ext:3442
  LWM2MVersion: "1.1"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: Reset values
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset all resources of this object with their initial value.
        - id: 1
          name: Randomize values
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Set random value to all resources. For multi-instance resources, the number of resource instances is also randomized.Randomization should avoid to generate too big payload. We advice to limit value to something like :- 20 characters for String, - 20 bytes for Opaque, - 10 instances for multi-instance resources.
        - id: 2
          name: Clear values
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Clear all values :- all multiple resource as empty resource - all number to 0 - String to empty string - boolean to false, - opaque to empty byte array, - time to an 1st, 1970 in the UTC time zone - objlink to null link
        - id: 3
          name: Exec With Arguments
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: This resources can be used to test "Execute Operation" with Arguments.Sent Arguments can be read via "Arguments List"(4) resource.E.g. If you send an Exec /3441/0/3 with "3='stringValue',4" as arguments value, then /3441/0/4/3 will be 'stringValue' and /3441/0/4/4 will be an empty string.
        - id: 4
          name: Arguments List
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: List of Arguments from last execute on "Exec With Arguments"(3) resource. This resource is not affected by "Randomize values"(1) executable resource.
        - id: 5
          name: Send Data
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: This resources can be used to test "Send Operation".When LWM2M client received the Execute Request, it must send data for each resources listed in "Resources to Send"(6) resource.By default LWM2M client chooses the Content format and Timeout to use for this Send Request, but Arguments can optionally be used to change it.Argument 0 must contain the Content Format code. e.g. 0='110' for SENML_JSON.Argument 1 must contain the request timeout in ms. e.g. 1='2000' for 2s timeout.
        - id: 6
          name: Resources to Send
          operations: RW
          multipleinstances: Multiple
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: List of path to LWM2M node (Object / Object Instance / Resource / Resource Instance) used by "Send Data "(5) resource. This resource is not affected by "Randomize values"(1) executable resource.
        - id: 110
          name: String Value
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Initial value must be "initial value".
        - id: 120
          name: Integer Value
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Initial value must be "1024".
        - id: 125
          name: Unsigned Integer Value
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Unsigned Integer
          rangeenumeration: ""
          units: ""
          description: Initial value must be 2^63 (9223372036854775808).
        - id: 130
          name: Float Value
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Initial value must be "3.14159".
        - id: 140
          name: Boolean Value
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Initial value must be "true".
        - id: 150
          name: Opaque Value
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: Initial value must be the bytes sequence "0123456789ABCDEF" (Hexadecimal notation).
        - id: 160
          name: Time Value
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: 'Initial value must be the time to an 1st, 2000 in the UTC time zone. (Timestamp value : 946684800)'
        - id: 170
          name: ObjLink Value
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: Initial value must be a link to instance 0 of Device Object 3 (3:0).
        - id: 180
          name: CoreLnk Value
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Corelnk
          rangeenumeration: ""
          units: ""
          description: Initial value must be a the "</3442>".
        - id: 1110
          name: Multiple String Value
          operations: RW
          multipleinstances: Multiple
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Initial value must be 1 instance with ID 0 and value "initial value".
        - id: 1120
          name: Multiple Integer Value
          operations: RW
          multipleinstances: Multiple
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Initial value must be 1 instance with ID 0 and value "1024".
        - id: 1125
          name: Multiple Unsigned Integer Value
          operations: RW
          multipleinstances: Multiple
          mandatory: Optional
          type: Unsigned Integer
          rangeenumeration: ""
          units: ""
          description: Initial value must be 1 instance with ID 0 and value 2^63 (9223372036854775808).
        - id: 1130
          name: Multiple Float Value
          operations: RW
          multipleinstances: Multiple
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Initial value must be 1 instance with ID 0 and value "3.14159".
        - id: 1140
          name: Multiple Boolean Value
          operations: RW
          multipleinstances: Multiple
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Initial value must be 1 instance with ID 0 and value "true".
        - id: 1150
          name: Multiple Opaque Value
          operations: RW
          multipleinstances: Multiple
          mandatory: Optional
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: Initial value must be 1 instance with ID 0 and value "0123456789ABCDEF"(Hexadecimal notation of the bytes sequence).
        - id: 1160
          name: Multiple Time Value
          operations: RW
          multipleinstances: Multiple
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: 'Initial value must be 1 instance with ID 0 and value 1st, 2000 in the UTC time zone (Timestamp value : 946684800).'
        - id: 1170
          name: Multiple ObjLink Value
          operations: RW
          multipleinstances: Multiple
          mandatory: Optional
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: Initial value must be 1 instance with ID 0 and value "3:0".
        - id: 1180
          name: Multiple CoreLnk Value
          operations: RW
          multipleinstances: Multiple
          mandatory: Optional
          type: Corelnk
          rangeenumeration: ""
          units: ""
          description: Initial value must be 1 instance with ID 0 and value "</3442>".
- Name: HostDeviceInfo
  Description1: This LWM2M Object provides a range of host device related information which can be queried by the LWM2M Server. The host device is any integrated device with an embedded cellular radio module.
  Description2: ""
  ObjectID: 10241
  ObjectURN: urn:oma:lwm2m:x:10241
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5905
          name: Host Device Manufacturer
          operations: R
          multipleinstances: Multiple
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: Human readable host device manufacturer name.
        - id: 5906
          name: Host Device Model Number
          operations: R
          multipleinstances: Multiple
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: A host device model identifier (manufacturer specified string).
        - id: 5907
          name: Host Device Unique ID
          operations: R
          multipleinstances: Multiple
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: The host device unique ID as assigned by an OEM, MNO, or other as the Device ID in the onboarding or manufacturing process.
        - id: 5908
          name: Host Device Software Version
          operations: R
          multipleinstances: Multiple
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: Current software version of the host device (manufacturer specified string).
- Name: 3-Phase Power Meter
  Description1: "\n        This Object provides the information to represent a generic 3-Phase Power Meter.\n    "
  Description2: ""
  ObjectID: 10242
  ObjectURN: urn:oma:lwm2m:x:10242
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: Manufacturer
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Human readable manufacturer name
        - id: 1
          name: Model Number
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: A model identifier (manufacturer specified string)
        - id: 2
          name: Serial Number
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Serial number of the meter
        - id: 3
          name: Description
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Description of the meter
        - id: 4
          name: Tension R
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: V
          description: Voltage phase 1 (phase to neutral)
        - id: 5
          name: Current R
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: A
          description: Current phase 1
        - id: 6
          name: Active Power R
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: kW
          description: Active Power phase 1
        - id: 7
          name: Reactive Power R
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: kvar
          description: Reactive Power phase 1
        - id: 8
          name: Inductive Reactive Power R
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: kvar
          description: Inductive Reactive Power phase 1
        - id: 9
          name: Capacitive Reactive Power R
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: kvar
          description: Capacitive Reactive Power phase 1
        - id: 10
          name: Apparent Power R
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: kVA
          description: Apparent Power phase 1
        - id: 11
          name: Power Factor R
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: -1..1
          units: ""
          description: Power Factor phase 1
        - id: 12
          name: THD-V R
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: /100
          description: Total Harmonic Distortion phase 1 (Tension)
        - id: 13
          name: THD-A R
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: /100
          description: Total Harmonig Distortion phase 1 (Current)
        - id: 14
          name: Tension S
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: V
          description: Voltage phase 2 (phase to neutral)
        - id: 15
          name: Current S
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: A
          description: Current phase 2
        - id: 16
          name: Active Power S
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: kW
          description: Active Power phase 2
        - id: 17
          name: Reactive Power S
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: kvar
          description: Reactive Power phase 2
        - id: 18
          name: Inductive Reactive Power S
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: kvar
          description: Inductive Reactive Power phase 2
        - id: 19
          name: Capacitive Reactive Power S
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: kvar
          description: Capacitive Reactive Power phase 2
        - id: 20
          name: Apparent Power S
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: kVA
          description: Apparent Power phase 2
        - id: 21
          name: Power Factor S
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: -1..1
          units: ""
          description: Power Factor phase 2
        - id: 22
          name: THD-V S
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: /100
          description: Total Harmonic Distortion phase 2 (Tension)
        - id: 23
          name: THD-A S
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: /100
          description: Total Harmonic Distortion phase 2 (Current)
        - id: 24
          name: Tension T
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: V
          description: Voltage phase 3 (phase to neutral)
        - id: 25
          name: Current T
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: A
          description: Current phase 3
        - id: 26
          name: Active Power T
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: kW
          description: Active Power phase 3
        - id: 27
          name: Reactive Power T
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: kvar
          description: Reactive Power phase 3
        - id: 28
          name: Inductive Reactive Power T
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: kvar
          description: Inductive Reactive Power phase 3
        - id: 29
          name: Capacitive Reactive Power T
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: kvar
          description: Capacitive Reactive Power phase 3
        - id: 30
          name: Apparent Power T
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: kVA
          description: Apparent Power phase 3
        - id: 31
          name: Power Factor T
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: -1..1
          units: ""
          description: Power Factor phase 3
        - id: 32
          name: THD-V T
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: /100
          description: Total Harmonic Distortion phase 3 (Tension)
        - id: 33
          name: THD-A T
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: /100
          description: Total Harmonic Distortion phase 3 (Current)
        - id: 34
          name: 3-Phase Active Power
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: kW
          description: 3-Phase Active Power
        - id: 35
          name: 3-Phase Reactive Power
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: kvar
          description: 3-Phase Reactive Power
        - id: 36
          name: 3-Phase Inductive Reactive Power
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: kvar
          description: 3-Phase Inductive Reactive Power
        - id: 37
          name: 3-Phase Capacitive Reactive Power
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: kvar
          description: 3-Phase Capacitive Reactive Power
        - id: 38
          name: 3-Phase Apparent Power
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: kVA
          description: 3-Phase Apparent Power
        - id: 39
          name: 3-Phase Power Factor
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: -1..1
          units: ""
          description: 3-Phase Power Factor
        - id: 40
          name: 3-Phase phi cosine
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: -1..1
          units: ""
          description: 3-Phase phi cosine
        - id: 41
          name: Active Energy
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: kWh
          description: Active Energy
        - id: 42
          name: Reactive Energy
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: kvarh
          description: Reactive Energy
        - id: 43
          name: Inductive Reactive Energy
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: kvarh
          description: Inductive Reactive Energy
        - id: 44
          name: Capacitive Reactive Energy
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: kvarh
          description: Capacitive Reactive Energy
        - id: 45
          name: Apparent Energy
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: kVAh
          description: Apparent Energy
        - id: 46
          name: Tension R-S
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: V
          description: Voltage phase 1 to phase 2
        - id: 47
          name: Tension S-T
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: V
          description: Voltage phase 2 to phase 3
        - id: 48
          name: Tension T-R
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: V
          description: Voltage phase 3 to phase 1
        - id: 49
          name: Frequency
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: Hz
          description: Frequency
        - id: 50
          name: Neutral Current
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: A
          description: Neutral Current
- Name: Single-Phase Power Meter
  Description1: "\n        This Object provides the information to represent a generic Single-Phase Power Meter.\n    "
  Description2: ""
  ObjectID: 10243
  ObjectURN: urn:oma:lwm2m:x:10243
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: Manufacturer
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Human readable manufacturer name
        - id: 1
          name: Model Number
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: A model identifier (manufacturer specified string)
        - id: 2
          name: Serial Number
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Serial number of the meter
        - id: 3
          name: Description
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Description of the meter
        - id: 4
          name: Tension
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: V
          description: Voltage
        - id: 5
          name: Current
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: A
          description: Current
        - id: 6
          name: Active Power
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: kW
          description: Active Power
        - id: 7
          name: Reactive Power
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: kvar
          description: Reactive Power
        - id: 8
          name: Inductive Reactive Power
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: kvar
          description: Inductive Reactive Power
        - id: 9
          name: Capacitive Reactive Power
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: kvar
          description: Capacitive Reactive Power
        - id: 10
          name: Apparent Power
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: kVA
          description: Apparent Power
        - id: 11
          name: Power Factor
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: -1..1
          units: ""
          description: Power Factor
        - id: 12
          name: THD-V
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: /100
          description: Total Harmonic Distortion (Tension)
        - id: 13
          name: THD-A
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: /100
          description: Total Harmonic Distortion (Current)
        - id: 14
          name: Active Energy
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: kWh
          description: Active Energy
        - id: 15
          name: Reactive Energy
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: kvarh
          description: Reactive Energy
        - id: 16
          name: Apparent Energy
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: kVAh
          description: Apparent Energy
        - id: 17
          name: Frequency
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: Hz
          description: Frequency
- Name: Single-Phase Power Meter
  Description1: "\n        This Object provides the information to represent a generic Single-Phase Power Meter.\n    "
  Description2: ""
  ObjectID: 10243
  ObjectURN: urn:oma:lwm2m:x:10243:2.0
  LWM2MVersion: "1.0"
  ObjectVersion: "2.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: Manufacturer
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Human readable manufacturer name
        - id: 1
          name: Model Number
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: A model identifier (manufacturer specified string)
        - id: 2
          name: Serial Number
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Serial number of the meter
        - id: 3
          name: Description
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Description of the meter
        - id: 4
          name: Tension
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: V
          description: Voltage
        - id: 5
          name: Current
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: A
          description: Current
        - id: 6
          name: Active Power
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: kW
          description: Active Power
        - id: 7
          name: Reactive Power
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: kvar
          description: Reactive Power
        - id: 8
          name: Inductive Reactive Power
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: kvar
          description: Inductive Reactive Power
        - id: 9
          name: Capacitive Reactive Power
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: kvar
          description: Capacitive Reactive Power
        - id: 10
          name: Apparent Power
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: kVA
          description: Apparent Power
        - id: 11
          name: Power Factor
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: -1..1
          units: ""
          description: Power Factor
        - id: 12
          name: THD-V
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: /100
          description: Total Harmonic Distortion (Tension)
        - id: 13
          name: THD-A
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: /100
          description: Total Harmonic Distortion (Current)
        - id: 14
          name: Active Energy
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: kWh
          description: Active Energy
        - id: 15
          name: Reactive Energy
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: kvarh
          description: Reactive Energy
        - id: 16
          name: Apparent Energy
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: kVAh
          description: Apparent Energy
        - id: 17
          name: Frequency
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: Hz
          description: Frequency
- Name: VehicleControlUnit
  Description1: This Object provides the information to represent a generic VCU(vehicle control unit).
  Description2: ""
  ObjectID: 10244
  ObjectURN: urn:oma:lwm2m:x:10244
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: Vehicle UI State
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..15
          units: ""
          description: 'The UI state of the vehicle. 0: idle 1: driving 2: charging 3: limp-home 4-15: reserved for future use'
        - id: 1
          name: Vehicle Speed
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: km/h
          description: Current speed of the vehicle.
        - id: 2
          name: Vehicle Shift Status
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..3
          units: ""
          description: 'Current shift status of the vehicle. 0: Neutral 1: Forward 2: Reverse'
        - id: 3
          name: Vehicle AP Position
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..100
          units: /100
          description: Current position of the accelerator pedal.
        - id: 4
          name: Vehicle Power
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: kW
          description: Current power of drive output/regenerative braking.
        - id: 5
          name: Vehicle Drive Energy
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: Wh
          description: Accumulated drive energy of the vehicle.
        - id: 6
          name: Vehicle Energy Consumption Efficiency
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: Wh/km
          description: Energy consumption efficiency of the vehicle.
        - id: 7
          name: Vehicle Estimated Mileage
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: km
          description: Estimated mileage of current battery capacity.
        - id: 8
          name: Vehicle Charge Cable Status
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: 'Whether the charge cable is connected or not. 0: unconnected 1: connected'
        - id: 9
          name: Vehicle Charge Status
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..15
          units: ""
          description: 'Charging status of the vehicle. 1: non-charge mode 2: charging 3: charge completed 4: charging abort abnormally'
        - id: 10
          name: Vehicle Charge Voltage
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: V
          description: Charging voltage
        - id: 11
          name: Vehicle Charge Current
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: A
          description: Charging current
        - id: 12
          name: Vehicle Charge Remaining Time
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: min
          description: Remaining charging time
        - id: 13
          name: Battery Pack Voltage
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: V
          description: Voltage of the battery pack
        - id: 14
          name: Battery Pack Current
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: A
          description: Current of the battery pack
        - id: 15
          name: Battery Pack Remaining Capacity
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: Ah
          description: Remaining capacity of the battery pack
        - id: 16
          name: Battery Pack SOC
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..100
          units: /100
          description: SOC(state of charge) of the battery pack
        - id: 17
          name: Battery Pack SOH
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..100
          units: /100
          description: SOH(state of health) of the battery pack
        - id: 18
          name: Battery Cell MinVolt
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: mV
          description: Minimum voltage of the battery module (with parallel connection of cells)
        - id: 19
          name: Battery Cell MaxVolt
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: mV
          description: Maximum voltage of the battery module (with parallel connection of cells)
        - id: 20
          name: Battery Module MinTemp
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: Cel
          description: Minimum temperature of the battery module
        - id: 21
          name: Battery Module MaxTemp
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: Cel
          description: Maximum temperature of the battery module
        - id: 22
          name: Battery Connection Status
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: 'Whether the battery is connected or not. 0: unconnected 1: connected'
        - id: 24
          name: MCU Voltage
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: V
          description: Voltage of the MCU(motor control unit)
        - id: 25
          name: MCU Temperature
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: Cel
          description: Temperature of MCU(motor control unit)
        - id: 26
          name: Motor Speed
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: 1/min
          description: Rotational speed of the motor
        - id: 27
          name: Motor Temperature
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: Cel
          description: Temperature of the motor
        - id: 28
          name: Motor OT Warning
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: 'Whether the motor is OT or not. 0: normal 1: OT warning'
        - id: 29
          name: MCU OT Warning
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: 'Whether the MCU is OT or not. 0: normal 1: OT warning'
        - id: 30
          name: Battery Pack OT Warning
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: 'Whether the battery pack is OT or not. 0: normal 1: OT warning'
        - id: 31
          name: MCU fault
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: 'Status of MCU. 0: normal 1: level 1 minor fault 2: level 2 critical fault'
        - id: 32
          name: Motor Error
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: 'Status of the battery pack. 0: normal 1: level D25 minor fault 2: level 2 critical fault'
- Name: Relay Management
  Description1: This LWM2M Object provides a range of eNB related measurements and parameters of which several are changeable. Furthermore, it includes Resources to enable/disable the eNB.
  Description2: ""
  ObjectID: 10245
  ObjectURN: urn:oma:lwm2m:x:10245
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: eNB Availability
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: AVAILABLE; UNAVAILABLE
          units: ""
          description: 'This field indicates to the CCC whether or not the eNB of the CrowdBox is available for activation: AVAILABLE = TRUE; UNAVAILABLE = FALSE This is set by the CrowdBox itself using an algorithm specific to the use case and based on parameters known to the CrowdBox which may not necessarily be signalled to the network. In the absence of a more specific algorithm, this parameter should be set to AVAILABLE, unless a fault is detected which would prevent activation of the eNB, in which case it should be set to UNAVAILABLE.'
        - id: 1
          name: GPS Status
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: UNSYNCHRONISED; SYNCHRONISED
          units: ""
          description: 'States whether the CrowdBox GPS receiver is synchronised to GPS time or not: UNSYCHRONISED = FALSE; SYNCHRONISED = TRUE If more than one GPS receiver is used by the CrowdBox, then SYNCHRONISED should be reported only if all receivers are synchronised.'
        - id: 2
          name: Orientation
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: -180..180
          units: deg
          description: Orientation of CrowdBox with respect to magnetic north. The reference orientation of the CrowdBox shall be the pointing direction of the eNB antenna(s) or, in the case of an omni-directional CrowdBox antenna, as defined in the accompanying product documentation.
        - id: 3
          name: eNB EARFCN
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..65535
          units: ""
          description: EARFCN currently used by the eNB. Highest valid value in 3GPP is currently 46589. If the requested EARFCN is not supported by the eNB, the response should be "Bad Request". The CrowdBox shall only apply a change of this resource upon execution of the "Enable eNB" command.
        - id: 4
          name: eNB Bandwidth
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 5, 10, 15, 20
          units: ""
          description: Bandwidth of the currently used eNB carrier. If the requested bandwidth is not supported by the eNB, the response should be "Bad Request". The CrowdBox shall only apply a change of this resource upon execution of the "Enable eNB" command.
        - id: 5
          name: Backhaul Primary EARFCN
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..65535
          units: ""
          description: EARFCN of primary cell used for the backhaul. If the requested EARFCN is not supported by the CrowdBox UE, the response should be "Bad Request". The CrowdBox shall only apply a change of this resource upon execution of the "Enable eNB" command.
        - id: 6
          name: Backhaul Secondary EARFCN
          operations: RW
          multipleinstances: Multiple
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..65535
          units: ""
          description: EARFCN of any secondary cells used for the backhaul, in the event that carrier aggregation is being used. If the requested EARFCN is not supported by the CrowdBox UE, the response should be "Bad Request". The CrowdBox shall only apply a change of this resource upon execution of the "Enable eNB" command.
        - id: 7
          name: Cumulative Measurement Window
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..65535
          units: s
          description: 'The current measurement interval over which cumulative statistics are collected for the following resources: Cumulative Number of Unique Users, Cumulative Downlink Throughput per Connected User, Cumulative Uplink Throughput per Connected User. Note that this measurement period is a sliding window rather than a granularity period. Measurements should never be reset, but rather old measurements should be removed from the cumulative total as they fall outside of the window. A value of 0 shall be interpreted as meaning only the current value should be reported. A value of 65535 shall be interpreted as an infinite window size (i.e. old measurements are never discarded).'
        - id: 8
          name: eNB ECI
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..2^28-1
          units: ""
          description: A 28 bit E-UTRAN Cell Identifier (ECI)
        - id: 9
          name: eNB Status
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: This resource indicates the current status of the eNB and can be used by the CCC to change the state from enabled to disabled. TRUE = eNB enabled FALSE = eNB disabled
        - id: 10
          name: Enable eNB
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: Enables the eNB. In addition the CrowdBox shall also update its configuration to reflect the current state of other relevant parameters. This might require a reboot.
        - id: 11
          name: eNB Maximum Power
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..63
          units: dBm
          description: Maximum power for the eNB measured as the sum of input powers to all antenna connectors. The maximum power per antenna port is equal to the maximum eNB power divided by the number of antenna ports. If the requested power is above or below the maximum or minimum power levels of the eNB, then the power level should be set to the maximum or minimum respectively. The CrowdBox shall only apply a change of this resource upon execution of the "Enable eNB" command.
        - id: 12
          name: Backhaul Primary q-OffsetFreq
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: -24..24
          units: dB
          description: 'q-OffsetFreq parameter for the backhaul primary EARFCN in SIB5 of the CrowdBox eNB BCCH. See TS 36.331 for details. Range: dB-24; dB-22 .. dB24 The CrowdBox shall only apply a change of this resource upon execution of the "Enable eNB" command.'
        - id: 13
          name: Backhaul Secondary q-OffsetFreq
          operations: RW
          multipleinstances: Multiple
          mandatory: Mandatory
          type: Integer
          rangeenumeration: -24..24
          units: dB
          description: 'q-OffsetFreq parameter for the backhaul secondary EARFCN in SIB5 of the CrowdBox eNB BCCH. See TS 36.331 for details Range: dB-24; dB-22 .. dB24 The CrowdBox shall only apply a change of this resource upon execution of the "Enable eNB" command.'
        - id: 14
          name: Neighbour CrowdBox EARFCN
          operations: RW
          multipleinstances: Multiple
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..66635
          units: ""
          description: EARFCN of a neighbour CrowdBox. Each instance of this resource relates to the same instance of resource ID 15.
        - id: 15
          name: Neighbour CrowdBox q-OffsetFreq
          operations: RW
          multipleinstances: Multiple
          mandatory: Mandatory
          type: Integer
          rangeenumeration: -24..24
          units: dB
          description: 'q-OffsetFreq parameter of the Neighbour CrowdBox EARFCN in SIB5 of the Neighbour CrowdBox eNB BCCH. See TS 36.331 for details Range: dB-24; dB-22 .. dB24 Each instance of this resource relates to the same instance of resource ID 14. The CrowdBox shall only apply a change of this resource upon execution of the "Enable eNB" command.'
        - id: 16
          name: Serving Macro eNB cellIndividualOffset
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: -24..24
          units: dB
          description: Specifies the value of the cellIndividualOffset parameter applicable to the CrowdBox macro serving cell that is to be signalled to connected UEs in their measurement configuration information . See TS 36.331 for details. The CrowdBox shall only apply a change of this resource upon execution of the "Enable eNB" command.
- Name: CrowdBox Measurements
  Description1: This LWM2M Object provides CrowdBox-related measurements such as serving cell parameters, backhaul timing advance, and neighbour cell reports.
  Description2: ""
  ObjectID: 10246
  ObjectURN: urn:oma:lwm2m:x:10246
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: Serving Cell ID
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..2^32-1
          units: ""
          description: Serving cell ID as specified by the cellIdentity field broadcast in SIB1 of the serving cell (see TS 36.331).
        - id: 1
          name: Serving Cell RSRP
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..97
          units: ""
          description: 'Serving cell RSRP, as defined in TS 36.133, Section 9.1.4. Range: RSRP_00; RSRP_01 .. RSRP_97'
        - id: 2
          name: Serving Cell RSRQ
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: -30..46
          units: ""
          description: 'Serving cell RSRQ, as defined in TS 36.133, Section 9.1.7. Range: RSRQ_-30; RSRQ_-29 .. RSRQ_46'
        - id: 3
          name: Serving Cell SINR
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: -10..30
          units: dB
          description: SINR of serving cell as estimated by the CrowdBox. Note that this is a proprietary measurement dependent on the UE chipset manufacturer. The UE chipset used should be stated in the accompanying product documentation.
        - id: 4
          name: Cumulative Backhaul Timing Advance
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..65535
          units: ""
          description: The cumulative timing advance signalled by the current serving cell to the CrowdBox. This is the sum of the initial timing advance signalled in the MAC payload of the Random Access Response (11 bits, 0 .. 1282) and subsequent adjustments signalled in the MAC PDU of DL-SCH transmissions (6 bits, -31 .. 32). See TS 36.321 for details.
        - id: 5
          name: Neighbour Cell Report
          operations: R
          multipleinstances: Multiple
          mandatory: Mandatory
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: A link to the "Neighbour Cell Report" object for each neighbour cell of the CrowdBox.
- Name: Neighbour Cell Report
  Description1: This LWM2M Object provides the neighbour cell report. The CrowdBox Measurements Object and the Connected UE Report Object have both Objlnk Resources pointing to this Object.
  Description2: ""
  ObjectID: 10247
  ObjectURN: urn:oma:lwm2m:x:10247
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: Neighbour PCI
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..503
          units: ""
          description: Physical Cell ID of neighbouring LTE cell, as defined in TS 36.211
        - id: 1
          name: Neighbour Cell ID
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..2^32-1
          units: ""
          description: Neighbour cell ID as specified by the cellIdentity field broadcast in SIB1 of the neighbour cell (see TS 36.331).
        - id: 2
          name: Neighbour Cell Rank
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..255
          units: ""
          description: Current neighbour cell rank. Neighbour cells should be ordered (ranked) by the CrowdBox according to neighbour cell RSRP, with a higher RSRP corresponding to a lower index. Hence the neighbouring cell with the highest RSRP should be neighbour cell 0, the second neighbour cell 1, and so on.
        - id: 3
          name: Neighbour Cell RSRP
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..97
          units: ""
          description: 'Neighbour cell RSRP, as defined in TS 36.133, Section 9.1.4. Range: RSRP_00; RSRP_01 .. RSRP_97'
        - id: 4
          name: Neighbour Cell RSRQ
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: -30..46
          units: ""
          description: 'Neighbour cell RSRQ, as defined in TS 36.133, Section 9.1.7. Range: RSRQ_-30; RSRQ_-29 .. RSRQ_46'
- Name: Connected UE Measurements
  Description1: This LWM2M Object provides a range of measurements of connected UEs and provides an Object link to the Connected UE report.
  Description2: ""
  ObjectID: 10248
  ObjectURN: urn:oma:lwm2m:x:10248
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: Number of Connected Users
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..255
          units: ""
          description: The number of different UEs currently connected to the eNB (i.e. in RRC_CONNECTED state).
        - id: 1
          name: Cumulative Number of Unique Users
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..65535
          units: ""
          description: The number of different UEs that have connected to the eNB over the immediately preceding period specified by the "Cumulative Measurement Window" field.
        - id: 2
          name: Connected UE Report
          operations: R
          multipleinstances: Multiple
          mandatory: Mandatory
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: Provides an Object link to the Connected UE Report which provides a range of information related to the connected UEs.
- Name: Connected UE Report
  Description1: This LWM2M Object provides a range of information related to the connected UEs.
  Description2: ""
  ObjectID: 10249
  ObjectURN: urn:oma:lwm2m:x:10249
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: Connected User MMEC
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..255
          units: ""
          description: MMEC signalled by the UE to the eNB in the RRCConnectionRequest message (see TS 36.331).
        - id: 1
          name: Connected User M-TMSI
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..2^32-1
          units: ""
          description: M-TMSI signalled by the UE to the eNB in the RRCConnectionRequest message (see TS 36.331).
        - id: 2
          name: Serving Cell (CrowdBox) eNB RSRP
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..97
          units: ""
          description: 'The RSRP of the CrowdBox eNB, as defined in TS 36.133, Section 9.1.4. Range: RSRP_00; RSRP_01 .. RSRP_97'
        - id: 3
          name: Serving Cell (CrowdBox) eNB RSRQ
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: -30..46
          units: ""
          description: 'The RSRQ of the CrowdBox eNB, as defined in TS 36.133, Section 9.1.7. Range: RSRQ_-30; RSRQ_-29 .. RSRQ_46'
        - id: 4
          name: Cumulative Timing Advance per Connected User
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..65535
          units: ""
          description: The cumulative timing advance signalled by the eNB to each currently connected UE. This is the sum of the initial timing advance signalled in the MAC payload of the Random Access Response (11 bits, 0 .. 1282) and subsequent adjustments signalled in the MAC PDU of DL-SCH transmissions (6 bits, -31 .. 32). See TS 36.321 for details.
        - id: 5
          name: Last downlink CQI report per Connected User
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..255
          units: ""
          description: The last downlink wideband CQI reported by a connected user the eNB. The CQI format is defined in Table 7.2.3-1 of TS 36.213.
        - id: 6
          name: Cumulative Downlink Throughput per Connected User
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..2^32-1
          units: B
          description: The total number of MAC bytes sent to the connected user over the immediately preceding period specified by the "Cumulative Measurement Window" field.
        - id: 7
          name: Cumulative Uplink Throughput per Connected User
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..2^32-1
          units: B
          description: The total number of MAC bytes received from the connected user over the immediately preceding period specified by the "Cumulative Measurement Window" field.
        - id: 8
          name: Neighbour Cell Report
          operations: R
          multipleinstances: Multiple
          mandatory: Mandatory
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: A link to the "Neighbour Cell Report" object for each neighbour cell reported to the CrowdBox by the connected UE
- Name: App Data Container
  Description1: This LWM2M Object is used for reporting application data of a device.
  Description2: ""
  ObjectID: 10250
  ObjectURN: urn:oma:lwm2m:x:10250
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: UL data
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: Uplink application data, e.g. gas meter reporting data.
        - id: 1
          name: DL data
          operations: W
          multipleinstances: Single
          mandatory: Mandatory
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: Downlink application data, e.g. application response message of uplink data.
- Name: AT Command
  Description1: Used to execute an AT command on a cellular modem
  Description2: ""
  ObjectID: 10251
  ObjectURN: urn:oma:lwm2m:x:10251
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: Command
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: 'The AT command to run. Example: AT+CREG? to query registration status'
        - id: 1
          name: Response
          operations: R
          multipleinstances: Multiple
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: 'Response to the AT command. Example: +CREG:0,5 If multiple lines are returned as the modem response, each line will be returned in a separate resource.'
        - id: 2
          name: Status
          operations: R
          multipleinstances: Multiple
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: Status of the command execution as returned by the modem. Typical values:OK ERROR
        - id: 3
          name: Timeout
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Amount of time in seconds allowed for the modem to respond to the command.
        - id: 4
          name: Run
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: Executing this resource will cause the command to be sent to the modem. And the result to be populated using the Response (1) and Status (2) resources
- Name: Manifest
  Description1: This object provides a range of information related to updating packages on a device
  Description2: ""
  ObjectID: 10252
  ObjectURN: urn:oma:lwm2m:x:10252
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 1
          name: Manifest
          operations: W
          multipleinstances: Single
          mandatory: Mandatory
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: Content of a new manifest
        - id: 2
          name: State
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..8
          units: ""
          description: Current state of manifest processing0.Uninitialised1.Idle2.Processing manifest3.Awaiting download approval4.Downloading 5.Downloaded6.Awaiting application approval7.Updating8.Rebooting
        - id: 3
          name: Manifest Result
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..19
          units: ""
          description: Final result of the device processing a manifest.0.Uninitialised1.Success2.Manifest timeout. The Manifest URI has timed-out.3.Manifest not found. The Manifest URI not found.4.Manifest failed integrity check. The manifest integrity check failed. 5.Manifest rejected. The Manifest attributes do not apply to this device.6.Manifest certificate not found7.Manifest signature failed. The Manifest signature is not recognised by this device.8.Dependent manifest not found9.Not enough storage for the new asset10.Out of memory during download process11.Connection lost during download process12.Asset failed integrity check13.Unsupported asset type14.Invalid asset URI15.Timed out downloading asset16.Unsupported delta format17.Unsupported encryption format18.Asset update successfully completed19.Asset updated successfully after recovery
        - id: 4
          name: Payload Result
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: Contains payload-specific errors or output.
        - id: 5
          name: Asset Hash
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: Hash of the installed asset.
        - id: 6
          name: Manifest version
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Version of the current manifest.
        - id: 7
          name: Asset Installation Progress
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Progress update of the asset installation process (in bytes).
        - id: 8
          name: Campaign Id
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: Id of campaign affecting this device. There currently isn’t any logic on the server or the client to handle this.
        - id: 9
          name: Manual Trigger
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: Manually apply the asset update. This will only have effect if the manifest requires this. The state resource must also be in the downloaded state for the execute command to be actioned.
- Name: Confidential Data
  Description1: This LWM2M Object is used for reporting data, but in a confidential way
  Description2: ""
  ObjectID: 10253
  ObjectURN: urn:oma:lwm2m:x:10253
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: Public Key
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: Object public key provided from the server side
        - id: 1
          name: Application Data
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: Application Data encrypted by the Public Key
- Name: Current Loop Input
  Description1: This LWM2M Object provides a representation of a current loop sensor, which indicates the value emitted by a current source.
  Description2: ""
  ObjectID: 10254
  ObjectURN: urn:oma:lwm2m:x:10254:1.0
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: Current Loop Input Current Value
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: 0; 3.8..20.5
          units: mA
          description: The current value of the current loop input. A value of 0 indicates the not-connected state and/or invalid (i.e. out-of-range) values.
        - id: 5601
          name: Min Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value measured by the sensor since power ON or reset.
        - id: 5602
          name: Max Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value measured by the sensor since power ON or reset.
        - id: 5603
          name: Min Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value that can be measured by the sensor.
        - id: 5604
          name: Max Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value that can be measured by the sensor.
        - id: 5605
          name: Reset Min and Max Measured Values
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the Min and Max Measured Values to Current Value.
        - id: 5701
          name: Sensor Units
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Measurement Units Definition.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
        - id: 5821
          name: Current Calibration
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Read or Write the current calibration coefficient.
- Name: Device Metadata
  Description1: This object provides a range of information related to device metadata
  Description2: ""
  ObjectID: 10255
  ObjectURN: urn:oma:lwm2m:x:10255
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: Protocol supported
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Manifest protocol supported
        - id: 1
          name: Bootloader hash
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: Hash of the bootloader. This is used for tracking the version of the bootloader used.
        - id: 2
          name: OEM bootloader hash
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: If the end-user has modified the bootloader the hash of the modified bootloader is recorded here
        - id: 3
          name: Vendor
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: Vendor Class UUID
        - id: 4
          name: Class
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: Class UUID
        - id: 5
          name: Device
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: Device UUID
- Name: ECID-Signal Measurement Information
  Description1: This LWM2M Object provides ECID signal measurements of a device.
  Description2: ""
  ObjectID: 10256
  ObjectURN: urn:oma:lwm2m:x:10256
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: physCellId
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: This field specifies the physical cell identity of the measured cell.
        - id: 1
          name: ECGI
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: This field specifies cell global ID of the measured cell. The target device shall provide this field if it was able to determine the ECGI of the measured cell at the time of measurement.
        - id: 2
          name: arfcnEUTRA
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: This field specifies the ARFCN of the measured E-UTRA carrier frequency.
        - id: 3
          name: 'rsrp-Result '
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: This field specifies the reference signal received power (RSRP) measurement.
        - id: 4
          name: rsrq-Result
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: This field specifies the reference signal received quality (RSRQ) measurement.
        - id: 5
          name: ue-RxTxTimeDiff
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: This field specifies the UE Rx-Tx time difference measurement.
- Name: Heat / Cooling meter
  Description1: "\nThis Object provides the information to represent a generic (district) heat or cooling meter\n    "
  Description2: ""
  ObjectID: 10257
  ObjectURN: urn:oma:lwm2m:x:10257
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: Manufacturer
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Human readable manufacturer name
        - id: 1
          name: Model Number
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: A model identifier (manufacturer specified string)
        - id: 2
          name: Serial Number
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Serial number of the meter
        - id: 3
          name: Description
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Description of the meter
        - id: 11
          name: Error code
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Error code reported by the meter
        - id: 5800
          name: Instantaneous active power
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: W
          description: The current active power.
        - id: 5802
          name: Max Measured active power
          operations: R
          multipleinstances: Multiple
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: W
          description: The maximum active power measured by the sensor since it is ON.
        - id: 5805
          name: Cumulative active power
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: Wh
          description: The cumulative active power since the last cumulative energy reset or device start.
        - id: 12
          name: Flow temperature
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: Cel
          description: Flow temperature
        - id: 13
          name: Max Measured flow temperature
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: Cel
          description: The maximum flow temperature measured by the meter
        - id: 14
          name: Return temperature
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: Cel
          description: Return temperature
        - id: 15
          name: Max Measured return temperature
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: Cel
          description: The maximum return temperature measured by the meter
        - id: 16
          name: Temperature difference
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: K
          description: Temperature difference
        - id: 17
          name: Flow rate
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: m3/s
          description: The flow rate
        - id: 18
          name: Max Measured flow
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: m3/s
          description: The maximum flow measured by the meter
        - id: 20
          name: Flow volume
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: m3
          description: The cumulative flow volume measured on the flow pipe
        - id: 21
          name: Return volume
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: m3
          description: The cumulative flow volume measured on the return pipe
        - id: 5506
          name: Current Time
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: Unix Time. A signed integer representing the number of seconds since Jan 1st, 1970 in the UTC time zone.
- Name: Current Loop Output
  Description1: This LWM2M Object provides a representation of a current loop source, which may be used to carry control signals.
  Description2: ""
  ObjectID: 10258
  ObjectURN: urn:oma:lwm2m:x:10258
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: Current Loop Output Current Value
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: 3.8..20.5
          units: mA
          description: The current value of the current loop output.
        - id: 5603
          name: Min Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value that can be measured by the sensor.
        - id: 5604
          name: Max Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value that can be measured by the sensor.
        - id: 5701
          name: Sensor Units
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Measurement Units Definition.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
        - id: 5821
          name: Current Calibration
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Read or Write the current calibration coefficient.
- Name: System Log
  Description1: This object provides read access to log buffers as well as limited configuration of logging services.
  Description2: ""
  ObjectID: 10259
  ObjectURN: urn:oma:lwm2m:x:10259
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: Name
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: Short name describing the log source represented by this particular instance.For syslog-compatible log sources this value should be "syslog". If multiple syslog-compatible log sources exist on a device then each should be given a distinct name that is then prefixed with "syslog-".
        - id: 1
          name: Read All
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: Read the entire current contents of the log buffer.Result is delivered as a display-formatted UTF-8 string, with each message entry on a new line.
        - id: 2
          name: Read
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Similar to Read All, but only reads log entries that have arrived since the last time this log buffer was read.If the LwM2M client is connected to multiple servers then the last read position should be tracked separately for each server.If this is the first attempt to read the log for a given connection then this resource behaves the same as Read All.
        - id: 3
          name: Enabled
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Enable or disable log capture for this source.If this resource is not provided by an implementation, then the existence of a System Log instance is taken as implicit confirmation that the log source it represents is currently enabled.
        - id: 4
          name: Capture Level
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: 'For log sources that support message priorities, this resource configures the minimum priority to capture.For syslog-compatible log sources the following enumeration must be used: 1 = Emergency, 2 = Alert, 3 = Critical, 4 = Error, 5 = Warning, 6 = Notice, 7 = Info, 8 = Debug.For other log sources this is left up to the implementer, with the requirement that consecutive values are used, starting at 1 and sorted so that message verbosity increases as the number ascends.'
- Name: Runtime Database
  Description1: This object allows manipulation of Runtime Database variables.
  Description2: ""
  ObjectID: 10260
  ObjectURN: urn:oma:lwm2m:x:10260
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: Key
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: The name of the RDB variable that this instance currently represents. Writing to this resource will not rename or otherwise modify the associated RDB variable, rather it will re-assign the instance to represent a different variable.
        - id: 1
          name: Value
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: The current value of the RDB variable associated with this instance. If the associated RDB variable does not currently exist then reading this resource will return a "Not Found" error code, and writing to this resource will create the variable.
        - id: 2
          name: Persistent
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Configure whether or not the RDB variable associated with this instance will be saved to persistent storage.
        - id: 3
          name: Unset
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: Delete the RDB variable associated with this instance.
- Name: RDB
  Description1: This object allows manipulation of Runtime Database variables.
  Description2: ""
  ObjectID: 10260
  ObjectURN: urn:oma:lwm2m:x:10260:2.0
  LWM2MVersion: "1.0"
  ObjectVersion: "2.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: Key
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: The name of the RDB variable that this instance currently represents. Writing to this resource will not rename or otherwise modify the associated RDB variable, rather it will re-assign the instance to represent a different variable.
        - id: 1
          name: Value
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The current value of the RDB variable associated with this instance. Reading this resource will return a "Not Found" response code if the associated variable does not exist. Writing to this resource will create the associated variable if it does not already exist.
        - id: 2
          name: Exists
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Indicates whether the RDB variable associated with this instance currently exists. Writing FALSE to this resource will delete the associated variable if it exists. Writing TRUE to this resource will create the associated variable if it does not already exist. Variables created by this resource will be initialised to an empty string.
        - id: 3
          name: Persistent
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Configure whether or not the RDB variable associated with this instance will be saved to persistent storage.
- Name: Interval Data Delivery
  Description1: 'The Interval Data Delivery object provides an optimised means for managing the delivery of interval data from multiple Interval Data Object instances. '
  Description2: ""
  ObjectID: 10262
  ObjectURN: urn:oma:lwm2m:x:10262
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: Name
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: The Name resource provides a way to identify different Interval Data Delivery instances. Name is a readable and writable attribute. Name is defined as an arbitrary length text string
        - id: 1
          name: Interval Data Links
          operations: RW
          multipleinstances: Multiple
          mandatory: Mandatory
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: The Interval Data Links resource is a set of object links that point to each of the Interval Data Object Instances that are managed by this Interval Data Delivery Object Instance. An Object Link is two 16-bit integer values representing the Object ID and the Object Instance ID. This resource can have multiple instances allowing this Interval Data Delivery object to manage many Interval Data instances.
        - id: 2
          name: Latest Payload
          operations: R
          multipleinstances: Multiple
          mandatory: Mandatory
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: The Latest Payload resource is a multiple instance resource representing the Latest Payload resource from each of the Interval Data objects defined in the Interval Data Links Resource. When this payload is delivered to the LwM2M server, via either a read request or a confirmed observation on this Object, Object Instance or Resource, the Latest Delivered Interval should for each of the Interval Data objects defined in the Interval Data Links Resource must be updated. When no new data exists for a specific Interval Data instance and empty Opaque value should be provided. When a specific Interval Data Instance is disabled (Recording Enabled Resource = 0), no payload data should be provided at all.
        - id: 3
          name: Schedule
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: The Schedule resource provides link to a schedule object. This Schedule object is used to provide fine grain control the Notification schedule delivery when the default LwM2M NOTIFICATION attributes do not provide sufficient control. If no schedule is required, an Object Link referencing no Object Instance will contain the concatenation of 2 MAX-ID values (null link).
- Name: Event Data Delivery
  Description1: 'The Event Data Delivery object provides a simple means for managing the delivery of event data from multiple Event Data Object instances. '
  Description2: ""
  ObjectID: 10263
  ObjectURN: urn:oma:lwm2m:x:10263
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: Name
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: The Name resource provides a way to identify different Event Data Delivery instances. Name is a readable and writable attribute. Name is defined as an arbitrary length text string
        - id: 1
          name: Event Data Links
          operations: RW
          multipleinstances: Multiple
          mandatory: Mandatory
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: The Event Data Links resource is a set of object links that point to each of the Event Data Object Instances that are managed by this Event Data Delivery Object Instance. An Object Link is two 16-bit integer values representing the Object ID and the Object Instance ID. This resource can have multiple instances allowing this Event Data Delivery object to manage many Event Data instances.
        - id: 2
          name: Latest Eventlog
          operations: R
          multipleinstances: Multiple
          mandatory: Mandatory
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: The Latest Eventlog resource is a multiple instance resource representing the Latest Eventlog resource from each of the Event Data objects defined in the Event Data Links Resource. When this payload is delivered to the LwM2M server, via either a read request or a confirmed observation on this Object, Object Instance or Resource, the Latest Delivered Event Time for each of the Event Data objects defined in the Event Data Links Resource must be updated. When no new event data exists for any of the linked Event Data instances an empty Opaque value should be provided.If this resource has an LwM2M server observation and one of the Event Data Instance is configured as Realtime and has been triggered, the Event Data Delivery object must send all undelivered events for all linked Event Data objects.
        - id: 3
          name: Schedule
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: The Schedule resource provides link to a schedule object. This Schedule object is used to provide fine grain control the Notification schedule delivery when the default LwM2M NOTIFICATION attributes do not provide sufficient control. If no schedule is required, an Object Link referencing no Object Instance will contain the concatenation of 2 MAX-ID values (null link).
- Name: Delivery Schedule
  Description1: The Delivery Schedule object provides a means for controlling the periodic delivery of interval and event data to the LwM2M server.
  Description2: ""
  ObjectID: 10264
  ObjectURN: urn:oma:lwm2m:x:10264
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: Schedule Start Time
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Schedule Start Time is a readable and writable resource representing the number of seconds past midnight for which this schedule commences
        - id: 1
          name: Schedule UTC Offset
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: The Schedule UTC Offset resource is a readable and writable resource representing the time zone offset for the Schedule Start Time Resource for this Delivery Schedule instance. If this resource is empty, the application should use the UTC offset provided in the Device [/3/0/14] object instance resource or UTC if not provided.UTC+X [ISO 8601].
        - id: 2
          name: Delivery Frequency
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: The Delivery Frequency resource is a readable and writable resource representing the number of seconds between deliveries. It is recommended that the Delivery Frequency be set to a devisor of 24 hours (86400 seconds) to provide a consistent interval period. Examples of Delivery Frequency include:-30 = Every 30 seconds600 = Every 10 minutes1800 = Every 30 minutes3600 = Hourly7200 = Every 2 hours14400 = Every 4 hours43200 = Every 12 hours86400 = Every Day172600 = Every Second Day
        - id: 3
          name: Randomised Delivery Window
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: The Randomised Delivery Window resource is a readable and writable resource representing a randomisation widow in seconds for the triggering of the notification delivery to the LwM2M server. If not provided, the randomised delivery window should default to 0 and the Notification should be sent immediately. The Randomised Delivery Window resource should be set to a value smaller than the delivery frequency.
        - id: 4
          name: Number of Retries
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: The Number of Retries resource is a readable and writable resource representing the number of retry attempts that should be attempted when the delivery notification is not successful. If not provided, this value defaults to 0 and no retries are attempted. This retry behaviour is at an application level and should be set with consideration of standard CoAP retry behaviour.
        - id: 5
          name: Retry Period
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: The Retry Period resource is a readable and writable resource representing the number of seconds between each application level retry.
- Name: Leakage Detection Configuration
  Description1: The leakage detection configuration object provides a means for configuring the timing and sampling frequency of a vibration based network leak detector
  Description2: ""
  ObjectID: 10265
  ObjectURN: urn:oma:lwm2m:x:10265
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: Sample Times
          operations: RW
          multipleinstances: Multiple
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Sample Times is a readable and writable multi value resource used to control when leak detection vibration sampling should occur. This is an integer value representing seconds since midnight
        - id: 1
          name: Sample UTC Offset
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The Sample UTC Offset resource is a readable and writable resource representing the time zone offset for this Leakage Detection Schedule instance. If this resource is empty, the application should use the UTC offset provided in the Device [/3/0/14] object instance resource or UTC if not provided.
        - id: 2
          name: Detection Mode
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..3
          units: ""
          description: Detection Mode is a readable and writeable resource used to indicate which mode to run the leak detection sensor. Values are one of:-0. Disabled1. Alarm Only (default)2. Top Frequency Values3. All Frequency ValuesDisabled (0)the leak detection function should be disabled.Alarm Only (1)for this mode no detailed frequency data is provided to the LwM2M server and an alarm is raised if the Leakage Detection Daughter board indicates that leak was detected. Top Frequency Values (2)for this mode, only the top (Top Frequency Count) values will be delivered to the LwM2M server via the Frequency Value ResourceAll Frequency Values(3)for this mode, all frequency values for all frequency bands will be provided to the LwM2M server via the Frequency Value Resource
        - id: 3
          name: Top Frequency Count
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Top Frequency Count is a readable and writeable resource used represent the number of samples to provide if the Detection Mode is set to Mode 2 (Top Frequency Values). If not provided, this value should default to 3
        - id: 4
          name: Frequency Thresholds
          operations: RW
          multipleinstances: Multiple
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..999
          units: ""
          description: Frequency Thresholds is a multiple value readable and writeable resource used to represent upper bound thresholds for each of the frequency bands configured on the daughter board. Being a multiple value resource, this resource only needs to contain the values that are required to override the default values provided by the daughter board firmware.As an example if the frequency threshold for band 7 and band 52 needs to be overridden, then this resource should just contain those two values:-/TBD/0/4/7 = 123/TBD/0/4/52 = 345
        - id: 5
          name: Frequency Values
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Frequency Values is a multiple value readonly resource used represent the latest frequency values recorded by the daughter board. In Detection Mode 2 (Top Frequency Values) only the number of values configured in Top Frequency Count will be provided. As an example, if the Top Frequency Count is 3 and the top three frequency threshold deviations were on band 8, 44 and 101, this resource would present:-/TBD/0/5/8 = 434/TBD/0/5/44 = 39/TBD/0/5/101 = 349In Detection Mode 3, this resource would present all frequency readings from 1 through to the number of bands measured by the board.This resource can either be observed by the LwM2M server (and subsequently notified by the Client daily) or Read adhoc from the LwM2M server.
        - id: 7
          name: Firmware Version
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: Firmware Version is a readonly resource representing the current firmware version of the Daughter Board.
- Name: Water Flow Readings
  Description1: Measures the flow of water in regular intervals
  Description2: ""
  ObjectID: 10266
  ObjectURN: urn:oma:lwm2m:x:10266
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 6000
          name: Interval Period
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 1..864000
          units: s
          description: The Interval Period resource is an Integer value representing the width in seconds of the intervals being managed by this interval data object. This resource is read only and can only be changed by resource 11 (Change Interval Configuration). It is recommended that the Interval Period be set to a devisor of 24 hours (86400 seconds) to provide a consistent interval period. Examples of Interval Period include:-30 = Every 30 seconds600 = Every 10 minutes1800 = Every 30 minutes3600 = Hourly7200 = Every 2 hours14400 = Every 4 hours43200 = Every 12 hours86400 = Every Day172600 = Every Second Day
        - id: 6001
          name: Interval Start Offset
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..86399
          units: s
          description: The Interval Start Offset resource is a read only resource representing the number of seconds past midnight for which the first interval is recorded. If this resource is empty, it is assumed that the intervals are midnight aligned. This can be used to adjust interval boundaries. As an example, an Interval Period of 3600 seconds and an Interval Start time of 300 represents hourly interval data, starting at 00:05.
        - id: 6002
          name: Interval UTC Offset
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The Interval UTC Offset resource is a read only resource representing the time zone offset for this Interval Data instance. If this resource is empty, the application should use the UTC offset provided in the Device [/3/0/14] object instance resource or UTC if not provided. UTC+X [ISO 8601].
        - id: 6003
          name: Interval Collection Start Time
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Time
          rangeenumeration: ""
          units: ""
          description: The Collection Start Time resource is a read only resource representing the time when the first interval was recorded on the device. Interval times represent the end of the interval, not the beginning. As an example, the first four hourly interval past midnight will have a timestamp of 04:00 (adjusting for UTC offset).
        - id: 6004
          name: Oldest Recorded Interval
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Time
          rangeenumeration: ""
          units: ""
          description: The Oldest Recorded Interval resource is a read-only resource representing the oldest available interval on the device. Interval times represent the end of the interval, not the beginning.
        - id: 6005
          name: Last Delivered Interval
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: The Last Delivered Interval is a readable and writable resource used to represent the last interval delivered to the LwM2M server. Interval times represent the end of the interval, not the beginning. The setting of this resource is implementation specific but should be updated based on, either a Read request of the Latest Payload from the LwM2M server or via a confirmed delivery of Notify operation of the Latest Payload resource. This resource is writable to allow the server to adjust the Last Delivered Interval value if the server and client is out of sync.
        - id: 6006
          name: Latest Recorded Interval
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Time
          rangeenumeration: ""
          units: ""
          description: The Latest Recorded Interval is a readable resource representing the currently highest recorded interval on the device. Interval times represent the end of the interval, not the beginning.
        - id: 6007
          name: Interval Delivery Midnight Aligned
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: The Delivery Midnight Aligned is a readable and writable resource used to indicate if data is delivered only to the previous midnight (1) or if part-day data can be delivered (0). Calculating Midnight should consider the Interval UTC Offset resource, or if empty, the Device [/3/0/14] object instance resource.
        - id: 6008
          name: Interval Historical Read
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: 'Historical Interval Read is an executable resource designed to retrieve ad-hoc interval read data. The resource takes two arguments:-Argument 0: First Interval time to Retrieve represented as number of seconds since Jan 1st, 1970 in the UTC time zone.Argument 1: Last interval time to Retrieve represented as number of seconds since Jan 1st, 1970 in the UTC time zone.The dates should be inclusive based on the end time of the interval. The data retrieved from this resource will be readable (or observable) from the Historical Read Payload Resource.As an example, the Argument List to retrieve data from Midnight 2nd March (UTC+10) to Midnight 6rd March (UTC+10) for a specific instance of the interval data object, would be constructed as follows:-0=''1488463200'',1=''1488808800'''
        - id: 6009
          name: Interval Historical Read Payload
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: The Historical Read Payload resource is the representation of the data requested by the Historical Interval Read executable resource. The format of this Opaque value should be identical to the Latest Payload resource. If no Historical Interval Read has been executed, this resource should return and empty Opaque value. This resource can either be Read from the Server or set up as an observation and Notified to the server as soon as the historical data is available. When this payload is delivered to the LwM2M server, via either a read request or a confirmed observation on this Object, Object Instance or Resource, the Historical Read Payload should be set to an empty Opaque value.
        - id: 6010
          name: Interval Change Configuration
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: 'Change Interval Configuration is an executable resource designed to allow the Interval Period, Interval Start Offset and Interval UTC Offset to be reconfigured. The resource takes three arguments:-Argument 0: [Mandatory] Interval Period represented as an integer as defined in the Interval Period Resource.Argument 1: [Optional] Interval start offset represented as an integer as defined in the Interval Start Offset Resource. If not provided, leave the value as per the current configurationArgument 2: [Optional] Interval UTC offset represented as a String as defined in the Interval UTC Offset Resource. If not provided, leave the value as per the current configuration.Depending on the specifics of the implementation of this object, reconfiguring the Interval data object may result in the removal of all historical data for this Interval Data Object Instance. Please consult with your device vendor as to the implications of reconfiguring an Interval Data Object Instance.As an example, the Argument List to change an interval data object instance from its existing values to one hour intervals, midnight aligned in UTC+10 time zone:-0=''3600'',1=''0'',1=''UTC+10'''
        - id: 6026
          name: Start
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Start is an executable resource that enables the recording of interval data. The first interval recorded will have a timestamp based on the Interval Start Offset resource. This executable resource takes no arguments. Refer to re-usable resource LogStart for further details.
        - id: 6027
          name: Stop
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Stop (LogStop) is an executable resource that disables the recording of interval data for this object instance. This executable resource takes no arguments. Refer to re-usable resource LogStop for further details.
        - id: 6028
          name: Status
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Recording Enabled is a read-only resource providing an indication of if interval data is currently being recorded for this object instance. Refer to re-usable resource LogStatus for further details.
        - id: 6029
          name: Latest Payload
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: The Latest Payload resource is a read-only serialised Opaque (Binary) representation of all the Interval Data between the Last Delivered Interval and the Latest Recorded Interval, accounting for the Delivery Midnight Aligned resource. When this payload is delivered to the LwM2M server, via either a read request or a confirmed observation on this Object, Object Instance or Resource, the Latest Delivered Interval should be updated. When no new data exists, an empty Opaque value should be provided.The payload data can be provided in an implementation specific serialisation, but by default for fixed length values should use the OMA-LwM2M CBOR format encoded as follows:1. 8-bit integer, value 2 representing OMA-LwM2M CBOR format.2. Interval Data Instance ID/ Class [16-bit integer]3. Timestamp of first Interval [32-bit integer] representing the number of seconds since Jan 1st, 1970 in the UTC time zone.4. Interval Period in seconds [32-bit integer]5. Number of intervals in Payload [16-bit integer]6. Number of Values Per Interval [8-bit integer]7. Size of Value 1 in bits [8-bit integer]8. Size of Value 2 in bits [8-bit integer]...9. Size of Value N in bits [8-bit integer]10. Interval 1 Value 1 [x bits]11. Interval 1 Value 2 [x bits]...12. Interval 1 Value N [x bits]...13. Interval N Value N [x bits]If for some implementation specific reason, there are missing intervals in the sequence, the payload may consist of multiple blocks of the above serialised data (appended into a single binary opaque value), each block representing a continuous series of interval data.
- Name: Daily Maximum Flow Rate Readings
  Description1: Measures the maximum flow rate and its time stamp for specified period
  Description2: ""
  ObjectID: 10267
  ObjectURN: urn:oma:lwm2m:x:10267
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 6000
          name: Interval Period
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 1..864000
          units: s
          description: The Interval Period resource is an Integer value representing the width in seconds of the intervals being managed by this interval data object. This resource is read only and can only be changed by resource 11 (Change Interval Configuration). It is recommended that the Interval Period be set to a devisor of 24 hours (86400 seconds) to provide a consistent interval period. Examples of Interval Period include:-30 = Every 30 seconds600 = Every 10 minutes1800 = Every 30 minutes3600 = Hourly7200 = Every 2 hours14400 = Every 4 hours43200 = Every 12 hours86400 = Every Day172600 = Every Second Day
        - id: 6001
          name: Interval Start Offset
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..86399
          units: s
          description: The Interval Start Offset resource is a read only resource representing the number of seconds past midnight for which the first interval is recorded. If this resource is empty, it is assumed that the intervals are midnight aligned. This can be used to adjust interval boundaries. As an example, an Interval Period of 3600 seconds and an Interval Start time of 300 represents hourly interval data, starting at 00:05.
        - id: 6002
          name: Interval UTC Offset
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The Interval UTC Offset resource is a read only resource representing the time zone offset for this Interval Data instance. If this resource is empty, the application should use the UTC offset provided in the Device [/3/0/14] object instance resource or UTC if not provided. UTC+X [ISO 8601].
        - id: 6003
          name: Interval Collection Start Time
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Time
          rangeenumeration: ""
          units: ""
          description: The Collection Start Time resource is a read only resource representing the time when the first interval was recorded on the device. Interval times represent the end of the interval, not the beginning. As an example, the first four hourly interval past midnight will have a timestamp of 04:00 (adjusting for UTC offset).
        - id: 6004
          name: Oldest Recorded Interval
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Time
          rangeenumeration: ""
          units: ""
          description: The Oldest Recorded Interval resource is a read-only resource representing the oldest available interval on the device. Interval times represent the end of the interval, not the beginning.
        - id: 6005
          name: Last Delivered Interval
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: The Last Delivered Interval is a readable and writable resource used to represent the last interval delivered to the LwM2M server. Interval times represent the end of the interval, not the beginning. The setting of this resource is implementation specific but should be updated based on, either a Read request of the Latest Payload from the LwM2M server or via a confirmed delivery of Notify operation of the Latest Payload resource. This resource is writable to allow the server to adjust the Last Delivered Interval value if the server and client is out of sync.
        - id: 6006
          name: Latest Recorded Interval
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Time
          rangeenumeration: ""
          units: ""
          description: The Latest Recorded Interval is a readable resource representing the currently highest recorded interval on the device. Interval times represent the end of the interval, not the beginning.
        - id: 6007
          name: Interval Delivery Midnight Aligned
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: The Delivery Midnight Aligned is a readable and writable resource used to indicate if data is delivered only to the previous midnight (1) or if part-day data can be delivered (0). Calculating Midnight should consider the Interval UTC Offset resource, or if empty, the Device [/3/0/14] object instance resource.
        - id: 6008
          name: Interval Historical Read
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: 'Historical Interval Read is an executable resource designed to retrieve ad-hoc interval read data. The resource takes two arguments:-Argument 0: First Interval time to Retrieve represented as number of seconds since Jan 1st, 1970 in the UTC time zone.Argument 1: Last interval time to Retrieve represented as number of seconds since Jan 1st, 1970 in the UTC time zone.The dates should be inclusive based on the end time of the interval. The data retrieved from this resource will be readable (or observable) from the Historical Read Payload Resource.As an example, the Argument List to retrieve data from Midnight 2nd March (UTC+10) to Midnight 6rd March (UTC+10) for a specific instance of the interval data object, would be constructed as follows:-0=''1488463200'',1=''1488808800'''
        - id: 6009
          name: Interval Historical Read Payload
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: The Historical Read Payload resource is the representation of the data requested by the Historical Interval Read executable resource. The format of this Opaque value should be identical to the Latest Payload resource. If no Historical Interval Read has been executed, this resource should return and empty Opaque value. This resource can either be Read from the Server or set up as an observation and Notified to the server as soon as the historical data is available. When this payload is delivered to the LwM2M server, via either a read request or a confirmed observation on this Object, Object Instance or Resource, the Historical Read Payload should be set to an empty Opaque value.
        - id: 6010
          name: Interval Change Configuration
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: 'Change Interval Configuration is an executable resource designed to allow the Interval Period, Interval Start Offset and Interval UTC Offset to be reconfigured. The resource takes three arguments:-Argument 0: [Mandatory] Interval Period represented as an integer as defined in the Interval Period Resource.Argument 1: [Optional] Interval start offset represented as an integer as defined in the Interval Start Offset Resource. If not provided, leave the value as per the current configurationArgument 2: [Optional] Interval UTC offset represented as a String as defined in the Interval UTC Offset Resource. If not provided, leave the value as per the current configuration.Depending on the specifics of the implementation of this object, reconfiguring the Interval data object may result in the removal of all historical data for this Interval Data Object Instance. Please consult with your device vendor as to the implications of reconfiguring an Interval Data Object Instance.As an example, the Argument List to change an interval data object instance from its existing values to one hour intervals, midnight aligned in UTC+10 time zone:-0=''3600'',1=''0'',1=''UTC+10'''
        - id: 6026
          name: Start
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Start is an executable resource that enables the recording of interval data. The first interval recorded will have a timestamp based on the Interval Start Offset resource. This executable resource takes no arguments. Refer to re-usable resource LogStart for further details.
        - id: 6027
          name: Stop
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Stop (LogStop) is an executable resource that disables the recording of interval data for this object instance. This executable resource takes no arguments. Refer to re-usable resource LogStop for further details.
        - id: 6028
          name: Status
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Recording Enabled is a read-only resource providing an indication of if interval data is currently being recorded for this object instance. Refer to re-usable resource LogStatus for further details.
        - id: 6029
          name: Latest Payload
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: The Latest Payload resource is a read-only serialised Opaque (Binary) representation of all the Interval Data between the Last Delivered Interval and the Latest Recorded Interval, accounting for the Delivery Midnight Aligned resource. When this payload is delivered to the LwM2M server, via either a read request or a confirmed observation on this Object, Object Instance or Resource, the Latest Delivered Interval should be updated. When no new data exists, an empty Opaque value should be provided.The payload data can be provided in an implementation specific serialisation, but by default for fixed length values should use the OMA-LwM2M CBOR format encoded as follows:1. 8-bit integer, value 2 representing OMA-LwM2M CBOR format.2. Interval Data Instance ID/ Class [16-bit integer]3. Timestamp of first Interval [32-bit integer] representing the number of seconds since Jan 1st, 1970 in the UTC time zone.4. Interval Period in seconds [32-bit integer]5. Number of intervals in Payload [16-bit integer]6. Number of Values Per Interval [8-bit integer]7. Size of Value 1 in bits [8-bit integer]8. Size of Value 2 in bits [8-bit integer]...9. Size of Value N in bits [8-bit integer]10. Interval 1 Value 1 [x bits]11. Interval 1 Value 2 [x bits]...12. Interval 1 Value N [x bits]...13. Interval N Value N [x bits]If for some implementation specific reason, there are missing intervals in the sequence, the payload may consist of multiple blocks of the above serialised data (appended into a single binary opaque value), each block representing a continuous series of interval data.
- Name: Temperature Readings
  Description1: Periodic temperature measurements
  Description2: ""
  ObjectID: 10268
  ObjectURN: urn:oma:lwm2m:x:10268
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 6000
          name: Interval Period
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 1..864000
          units: s
          description: The Interval Period resource is an Integer value representing the width in seconds of the intervals being managed by this interval data object. This resource is read only and can only be changed by resource 11 (Change Interval Configuration). It is recommended that the Interval Period be set to a devisor of 24 hours (86400 seconds) to provide a consistent interval period. Examples of Interval Period include:-30 = Every 30 seconds600 = Every 10 minutes1800 = Every 30 minutes3600 = Hourly7200 = Every 2 hours14400 = Every 4 hours43200 = Every 12 hours86400 = Every Day172600 = Every Second Day
        - id: 6001
          name: Interval Start Offset
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..86399
          units: s
          description: The Interval Start Offset resource is a read only resource representing the number of seconds past midnight for which the first interval is recorded. If this resource is empty, it is assumed that the intervals are midnight aligned. This can be used to adjust interval boundaries. As an example, an Interval Period of 3600 seconds and an Interval Start time of 300 represents hourly interval data, starting at 00:05.
        - id: 6002
          name: Interval UTC Offset
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The Interval UTC Offset resource is a read only resource representing the time zone offset for this Interval Data instance. If this resource is empty, the application should use the UTC offset provided in the Device [/3/0/14] object instance resource or UTC if not provided. UTC+X [ISO 8601].
        - id: 6003
          name: Interval Collection Start Time
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Time
          rangeenumeration: ""
          units: ""
          description: The Collection Start Time resource is a read only resource representing the time when the first interval was recorded on the device. Interval times represent the end of the interval, not the beginning. As an example, the first four hourly interval past midnight will have a timestamp of 04:00 (adjusting for UTC offset).
        - id: 6004
          name: Oldest Recorded Interval
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Time
          rangeenumeration: ""
          units: ""
          description: The Oldest Recorded Interval resource is a read-only resource representing the oldest available interval on the device. Interval times represent the end of the interval, not the beginning.
        - id: 6005
          name: Last Delivered Interval
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: The Last Delivered Interval is a readable and writable resource used to represent the last interval delivered to the LwM2M server. Interval times represent the end of the interval, not the beginning. The setting of this resource is implementation specific but should be updated based on, either a Read request of the Latest Payload from the LwM2M server or via a confirmed delivery of Notify operation of the Latest Payload resource. This resource is writable to allow the server to adjust the Last Delivered Interval value if the server and client is out of sync.
        - id: 6006
          name: Latest Recorded Interval
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Time
          rangeenumeration: ""
          units: ""
          description: The Latest Recorded Interval is a readable resource representing the currently highest recorded interval on the device. Interval times represent the end of the interval, not the beginning.
        - id: 6007
          name: Interval Delivery Midnight Aligned
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: The Delivery Midnight Aligned is a readable and writable resource used to indicate if data is delivered only to the previous midnight (1) or if part-day data can be delivered (0). Calculating Midnight should consider the Interval UTC Offset resource, or if empty, the Device [/3/0/14] object instance resource.
        - id: 6008
          name: Interval Historical Read
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: 'Historical Interval Read is an executable resource designed to retrieve ad-hoc interval read data. The resource takes two arguments:-Argument 0: First Interval time to Retrieve represented as number of seconds since Jan 1st, 1970 in the UTC time zone.Argument 1: Last interval time to Retrieve represented as number of seconds since Jan 1st, 1970 in the UTC time zone.The dates should be inclusive based on the end time of the interval. The data retrieved from this resource will be readable (or observable) from the Historical Read Payload Resource.As an example, the Argument List to retrieve data from Midnight 2nd March (UTC+10) to Midnight 6rd March (UTC+10) for a specific instance of the interval data object, would be constructed as follows:-0=''1488463200'',1=''1488808800'''
        - id: 6009
          name: Interval Historical Read Payload
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: The Historical Read Payload resource is the representation of the data requested by the Historical Interval Read executable resource. The format of this Opaque value should be identical to the Latest Payload resource. If no Historical Interval Read has been executed, this resource should return and empty Opaque value. This resource can either be Read from the Server or set up as an observation and Notified to the server as soon as the historical data is available. When this payload is delivered to the LwM2M server, via either a read request or a confirmed observation on this Object, Object Instance or Resource, the Historical Read Payload should be set to an empty Opaque value.
        - id: 6010
          name: Interval Change Configuration
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: 'Change Interval Configuration is an executable resource designed to allow the Interval Period, Interval Start Offset and Interval UTC Offset to be reconfigured. The resource takes three arguments:-Argument 0: [Mandatory] Interval Period represented as an integer as defined in the Interval Period Resource.Argument 1: [Optional] Interval start offset represented as an integer as defined in the Interval Start Offset Resource. If not provided, leave the value as per the current configurationArgument 2: [Optional] Interval UTC offset represented as a String as defined in the Interval UTC Offset Resource. If not provided, leave the value as per the current configuration.Depending on the specifics of the implementation of this object, reconfiguring the Interval data object may result in the removal of all historical data for this Interval Data Object Instance. Please consult with your device vendor as to the implications of reconfiguring an Interval Data Object Instance.As an example, the Argument List to change an interval data object instance from its existing values to one hour intervals, midnight aligned in UTC+10 time zone:-0=''3600'',1=''0'',1=''UTC+10'''
        - id: 6026
          name: Start
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Start is an executable resource that enables the recording of interval data. The first interval recorded will have a timestamp based on the Interval Start Offset resource. This executable resource takes no arguments. Refer to re-usable resource LogStart for further details.
        - id: 6027
          name: Stop
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Stop (LogStop) is an executable resource that disables the recording of interval data for this object instance. This executable resource takes no arguments. Refer to re-usable resource LogStop for further details.
        - id: 6028
          name: Status
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Recording Enabled is a read-only resource providing an indication of if interval data is currently being recorded for this object instance. Refer to re-usable resource LogStatus for further details.
        - id: 6029
          name: Latest Payload
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: The Latest Payload resource is a read-only serialised Opaque (Binary) representation of all the Interval Data between the Last Delivered Interval and the Latest Recorded Interval, accounting for the Delivery Midnight Aligned resource. When this payload is delivered to the LwM2M server, via either a read request or a confirmed observation on this Object, Object Instance or Resource, the Latest Delivered Interval should be updated. When no new data exists, an empty Opaque value should be provided.The payload data can be provided in an implementation specific serialisation, but by default for fixed length values should use the OMA-LwM2M CBOR format encoded as follows:1. 8-bit integer, value 2 representing OMA-LwM2M CBOR format.2. Interval Data Instance ID/ Class [16-bit integer]3. Timestamp of first Interval [32-bit integer] representing the number of seconds since Jan 1st, 1970 in the UTC time zone.4. Interval Period in seconds [32-bit integer]5. Number of intervals in Payload [16-bit integer]6. Number of Values Per Interval [8-bit integer]7. Size of Value 1 in bits [8-bit integer]8. Size of Value 2 in bits [8-bit integer]...9. Size of Value N in bits [8-bit integer]10. Interval 1 Value 1 [x bits]11. Interval 1 Value 2 [x bits]...12. Interval 1 Value N [x bits]...13. Interval N Value N [x bits]If for some implementation specific reason, there are missing intervals in the sequence, the payload may consist of multiple blocks of the above serialised data (appended into a single binary opaque value), each block representing a continuous series of interval data.
- Name: Pressure Readings
  Description1: Periodic pressure measurements
  Description2: ""
  ObjectID: 10269
  ObjectURN: urn:oma:lwm2m:x:10269
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 6000
          name: Interval Period
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 1..864000
          units: s
          description: The Interval Period resource is an Integer value representing the width in seconds of the intervals being managed by this interval data object. This resource is read only and can only be changed by resource 11 (Change Interval Configuration). It is recommended that the Interval Period be set to a devisor of 24 hours (86400 seconds) to provide a consistent interval period. Examples of Interval Period include:-30 = Every 30 seconds600 = Every 10 minutes1800 = Every 30 minutes3600 = Hourly7200 = Every 2 hours14400 = Every 4 hours43200 = Every 12 hours86400 = Every Day172600 = Every Second Day
        - id: 6001
          name: Interval Start Offset
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..86399
          units: s
          description: The Interval Start Offset resource is a read only resource representing the number of seconds past midnight for which the first interval is recorded. If this resource is empty, it is assumed that the intervals are midnight aligned. This can be used to adjust interval boundaries. As an example, an Interval Period of 3600 seconds and an Interval Start time of 300 represents hourly interval data, starting at 00:05.
        - id: 6002
          name: Interval UTC Offset
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The Interval UTC Offset resource is a read only resource representing the time zone offset for this Interval Data instance. If this resource is empty, the application should use the UTC offset provided in the Device [/3/0/14] object instance resource or UTC if not provided. UTC+X [ISO 8601].
        - id: 6003
          name: Interval Collection Start Time
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Time
          rangeenumeration: ""
          units: ""
          description: The Collection Start Time resource is a read only resource representing the time when the first interval was recorded on the device. Interval times represent the end of the interval, not the beginning. As an example, the first four hourly interval past midnight will have a timestamp of 04:00 (adjusting for UTC offset).
        - id: 6004
          name: Oldest Recorded Interval
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Time
          rangeenumeration: ""
          units: ""
          description: The Oldest Recorded Interval resource is a read-only resource representing the oldest available interval on the device. Interval times represent the end of the interval, not the beginning.
        - id: 6005
          name: Last Delivered Interval
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: The Last Delivered Interval is a readable and writable resource used to represent the last interval delivered to the LwM2M server. Interval times represent the end of the interval, not the beginning. The setting of this resource is implementation specific but should be updated based on, either a Read request of the Latest Payload from the LwM2M server or via a confirmed delivery of Notify operation of the Latest Payload resource. This resource is writable to allow the server to adjust the Last Delivered Interval value if the server and client is out of sync.
        - id: 6006
          name: Latest Recorded Interval
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Time
          rangeenumeration: ""
          units: ""
          description: The Latest Recorded Interval is a readable resource representing the currently highest recorded interval on the device. Interval times represent the end of the interval, not the beginning.
        - id: 6007
          name: Interval Delivery Midnight Aligned
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: The Delivery Midnight Aligned is a readable and writable resource used to indicate if data is delivered only to the previous midnight (1) or if part-day data can be delivered (0). Calculating Midnight should consider the Interval UTC Offset resource, or if empty, the Device [/3/0/14] object instance resource.
        - id: 6008
          name: Interval Historical Read
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: 'Historical Interval Read is an executable resource designed to retrieve ad-hoc interval read data. The resource takes two arguments:-Argument 0: First Interval time to Retrieve represented as number of seconds since Jan 1st, 1970 in the UTC time zone.Argument 1: Last interval time to Retrieve represented as number of seconds since Jan 1st, 1970 in the UTC time zone.The dates should be inclusive based on the end time of the interval. The data retrieved from this resource will be readable (or observable) from the Historical Read Payload Resource.As an example, the Argument List to retrieve data from Midnight 2nd March (UTC+10) to Midnight 6rd March (UTC+10) for a specific instance of the interval data object, would be constructed as follows:-0=''1488463200'',1=''1488808800'''
        - id: 6009
          name: Interval Historical Read Payload
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: The Historical Read Payload resource is the representation of the data requested by the Historical Interval Read executable resource. The format of this Opaque value should be identical to the Latest Payload resource. If no Historical Interval Read has been executed, this resource should return and empty Opaque value. This resource can either be Read from the Server or set up as an observation and Notified to the server as soon as the historical data is available. When this payload is delivered to the LwM2M server, via either a read request or a confirmed observation on this Object, Object Instance or Resource, the Historical Read Payload should be set to an empty Opaque value.
        - id: 6010
          name: Interval Change Configuration
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: 'Change Interval Configuration is an executable resource designed to allow the Interval Period, Interval Start Offset and Interval UTC Offset to be reconfigured. The resource takes three arguments:-Argument 0: [Mandatory] Interval Period represented as an integer as defined in the Interval Period Resource.Argument 1: [Optional] Interval start offset represented as an integer as defined in the Interval Start Offset Resource. If not provided, leave the value as per the current configurationArgument 2: [Optional] Interval UTC offset represented as a String as defined in the Interval UTC Offset Resource. If not provided, leave the value as per the current configuration.Depending on the specifics of the implementation of this object, reconfiguring the Interval data object may result in the removal of all historical data for this Interval Data Object Instance. Please consult with your device vendor as to the implications of reconfiguring an Interval Data Object Instance.As an example, the Argument List to change an interval data object instance from its existing values to one hour intervals, midnight aligned in UTC+10 time zone:-0=''3600'',1=''0'',1=''UTC+10'''
        - id: 6026
          name: Start
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Start is an executable resource that enables the recording of interval data. The first interval recorded will have a timestamp based on the Interval Start Offset resource. This executable resource takes no arguments. Refer to re-usable resource LogStart for further details.
        - id: 6027
          name: Stop
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Stop (LogStop) is an executable resource that disables the recording of interval data for this object instance. This executable resource takes no arguments. Refer to re-usable resource LogStop for further details.
        - id: 6028
          name: Status
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Recording Enabled is a read-only resource providing an indication of if interval data is currently being recorded for this object instance. Refer to re-usable resource LogStatus for further details.
        - id: 6029
          name: Latest Payload
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: The Latest Payload resource is a read-only serialised Opaque (Binary) representation of all the Interval Data between the Last Delivered Interval and the Latest Recorded Interval, accounting for the Delivery Midnight Aligned resource. When this payload is delivered to the LwM2M server, via either a read request or a confirmed observation on this Object, Object Instance or Resource, the Latest Delivered Interval should be updated. When no new data exists, an empty Opaque value should be provided.The payload data can be provided in an implementation specific serialisation, but by default for fixed length values should use the OMA-LwM2M CBOR format encoded as follows:1. 8-bit integer, value 2 representing OMA-LwM2M CBOR format.2. Interval Data Instance ID/ Class [16-bit integer]3. Timestamp of first Interval [32-bit integer] representing the number of seconds since Jan 1st, 1970 in the UTC time zone.4. Interval Period in seconds [32-bit integer]5. Number of intervals in Payload [16-bit integer]6. Number of Values Per Interval [8-bit integer]7. Size of Value 1 in bits [8-bit integer]8. Size of Value 2 in bits [8-bit integer]...9. Size of Value N in bits [8-bit integer]10. Interval 1 Value 1 [x bits]11. Interval 1 Value 2 [x bits]...12. Interval 1 Value N [x bits]...13. Interval N Value N [x bits]If for some implementation specific reason, there are missing intervals in the sequence, the payload may consist of multiple blocks of the above serialised data (appended into a single binary opaque value), each block representing a continuous series of interval data.
- Name: Battery Level Readings
  Description1: Periodic battery level measurements
  Description2: ""
  ObjectID: 10270
  ObjectURN: urn:oma:lwm2m:x:10270
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 6000
          name: Interval Period
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 1..864000
          units: s
          description: The Interval Period resource is an Integer value representing the width in seconds of the intervals being managed by this interval data object. This resource is read only and can only be changed by resource 11 (Change Interval Configuration). It is recommended that the Interval Period be set to a devisor of 24 hours (86400 seconds) to provide a consistent interval period. Examples of Interval Period include:-30 = Every 30 seconds600 = Every 10 minutes1800 = Every 30 minutes3600 = Hourly7200 = Every 2 hours14400 = Every 4 hours43200 = Every 12 hours86400 = Every Day172600 = Every Second Day
        - id: 6001
          name: Interval Start Offset
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..86399
          units: s
          description: The Interval Start Offset resource is a read only resource representing the number of seconds past midnight for which the first interval is recorded. If this resource is empty, it is assumed that the intervals are midnight aligned. This can be used to adjust interval boundaries. As an example, an Interval Period of 3600 seconds and an Interval Start time of 300 represents hourly interval data, starting at 00:05.
        - id: 6002
          name: Interval UTC Offset
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The Interval UTC Offset resource is a read only resource representing the time zone offset for this Interval Data instance. If this resource is empty, the application should use the UTC offset provided in the Device [/3/0/14] object instance resource or UTC if not provided. UTC+X [ISO 8601].
        - id: 6003
          name: Interval Collection Start Time
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Time
          rangeenumeration: ""
          units: ""
          description: The Collection Start Time resource is a read only resource representing the time when the first interval was recorded on the device. Interval times represent the end of the interval, not the beginning. As an example, the first four hourly interval past midnight will have a timestamp of 04:00 (adjusting for UTC offset).
        - id: 6004
          name: Oldest Recorded Interval
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Time
          rangeenumeration: ""
          units: ""
          description: The Oldest Recorded Interval resource is a read-only resource representing the oldest available interval on the device. Interval times represent the end of the interval, not the beginning.
        - id: 6005
          name: Last Delivered Interval
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: The Last Delivered Interval is a readable and writable resource used to represent the last interval delivered to the LwM2M server. Interval times represent the end of the interval, not the beginning. The setting of this resource is implementation specific but should be updated based on, either a Read request of the Latest Payload from the LwM2M server or via a confirmed delivery of Notify operation of the Latest Payload resource. This resource is writable to allow the server to adjust the Last Delivered Interval value if the server and client is out of sync.
        - id: 6006
          name: Latest Recorded Interval
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Time
          rangeenumeration: ""
          units: ""
          description: The Latest Recorded Interval is a readable resource representing the currently highest recorded interval on the device. Interval times represent the end of the interval, not the beginning.
        - id: 6007
          name: Interval Delivery Midnight Aligned
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: The Delivery Midnight Aligned is a readable and writable resource used to indicate if data is delivered only to the previous midnight (1) or if part-day data can be delivered (0). Calculating Midnight should consider the Interval UTC Offset resource, or if empty, the Device [/3/0/14] object instance resource.
        - id: 6008
          name: Interval Historical Read
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: 'Historical Interval Read is an executable resource designed to retrieve ad-hoc interval read data. The resource takes two arguments:-Argument 0: First Interval time to Retrieve represented as number of seconds since Jan 1st, 1970 in the UTC time zone.Argument 1: Last interval time to Retrieve represented as number of seconds since Jan 1st, 1970 in the UTC time zone.The dates should be inclusive based on the end time of the interval. The data retrieved from this resource will be readable (or observable) from the Historical Read Payload Resource.As an example, the Argument List to retrieve data from Midnight 2nd March (UTC+10) to Midnight 6rd March (UTC+10) for a specific instance of the interval data object, would be constructed as follows:-0=''1488463200'',1=''1488808800'''
        - id: 6009
          name: Interval Historical Read Payload
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: The Historical Read Payload resource is the representation of the data requested by the Historical Interval Read executable resource. The format of this Opaque value should be identical to the Latest Payload resource. If no Historical Interval Read has been executed, this resource should return and empty Opaque value. This resource can either be Read from the Server or set up as an observation and Notified to the server as soon as the historical data is available. When this payload is delivered to the LwM2M server, via either a read request or a confirmed observation on this Object, Object Instance or Resource, the Historical Read Payload should be set to an empty Opaque value.
        - id: 6010
          name: Interval Change Configuration
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: 'Change Interval Configuration is an executable resource designed to allow the Interval Period, Interval Start Offset and Interval UTC Offset to be reconfigured. The resource takes three arguments:-Argument 0: [Mandatory] Interval Period represented as an integer as defined in the Interval Period Resource.Argument 1: [Optional] Interval start offset represented as an integer as defined in the Interval Start Offset Resource. If not provided, leave the value as per the current configurationArgument 2: [Optional] Interval UTC offset represented as a String as defined in the Interval UTC Offset Resource. If not provided, leave the value as per the current configuration.Depending on the specifics of the implementation of this object, reconfiguring the Interval data object may result in the removal of all historical data for this Interval Data Object Instance. Please consult with your device vendor as to the implications of reconfiguring an Interval Data Object Instance.As an example, the Argument List to change an interval data object instance from its existing values to one hour intervals, midnight aligned in UTC+10 time zone:-0=''3600'',1=''0'',1=''UTC+10'''
        - id: 6026
          name: Start
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Start is an executable resource that enables the recording of interval data. The first interval recorded will have a timestamp based on the Interval Start Offset resource. This executable resource takes no arguments. Refer to re-usable resource LogStart for further details.
        - id: 6027
          name: Stop
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Stop (LogStop) is an executable resource that disables the recording of interval data for this object instance. This executable resource takes no arguments. Refer to re-usable resource LogStop for further details.
        - id: 6028
          name: Status
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Recording Enabled is a read-only resource providing an indication of if interval data is currently being recorded for this object instance. Refer to re-usable resource LogStatus for further details.
        - id: 6029
          name: Latest Payload
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: The Latest Payload resource is a read-only serialised Opaque (Binary) representation of all the Interval Data between the Last Delivered Interval and the Latest Recorded Interval, accounting for the Delivery Midnight Aligned resource. When this payload is delivered to the LwM2M server, via either a read request or a confirmed observation on this Object, Object Instance or Resource, the Latest Delivered Interval should be updated. When no new data exists, an empty Opaque value should be provided.The payload data can be provided in an implementation specific serialisation, but by default for fixed length values should use the OMA-LwM2M CBOR format encoded as follows:1. 8-bit integer, value 2 representing OMA-LwM2M CBOR format.2. Interval Data Instance ID/ Class [16-bit integer]3. Timestamp of first Interval [32-bit integer] representing the number of seconds since Jan 1st, 1970 in the UTC time zone.4. Interval Period in seconds [32-bit integer]5. Number of intervals in Payload [16-bit integer]6. Number of Values Per Interval [8-bit integer]7. Size of Value 1 in bits [8-bit integer]8. Size of Value 2 in bits [8-bit integer]...9. Size of Value N in bits [8-bit integer]10. Interval 1 Value 1 [x bits]11. Interval 1 Value 2 [x bits]...12. Interval 1 Value N [x bits]...13. Interval N Value N [x bits]If for some implementation specific reason, there are missing intervals in the sequence, the payload may consist of multiple blocks of the above serialised data (appended into a single binary opaque value), each block representing a continuous series of interval data.
- Name: Communications Activity Time Readings
  Description1: Measures the total duration that the meter was activating its radio for packet transmission or receipt for the period. Used to monitor for excess poower usage over time.
  Description2: ""
  ObjectID: 10271
  ObjectURN: urn:oma:lwm2m:x:10271
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 6000
          name: Interval Period
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 1..864000
          units: s
          description: The Interval Period resource is an Integer value representing the width in seconds of the intervals being managed by this interval data object. This resource is read only and can only be changed by resource 11 (Change Interval Configuration). It is recommended that the Interval Period be set to a devisor of 24 hours (86400 seconds) to provide a consistent interval period. Examples of Interval Period include:-30 = Every 30 seconds600 = Every 10 minutes1800 = Every 30 minutes3600 = Hourly7200 = Every 2 hours14400 = Every 4 hours43200 = Every 12 hours86400 = Every Day172600 = Every Second Day
        - id: 6001
          name: Interval Start Offset
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..86399
          units: s
          description: The Interval Start Offset resource is a read only resource representing the number of seconds past midnight for which the first interval is recorded. If this resource is empty, it is assumed that the intervals are midnight aligned. This can be used to adjust interval boundaries. As an example, an Interval Period of 3600 seconds and an Interval Start time of 300 represents hourly interval data, starting at 00:05.
        - id: 6002
          name: Interval UTC Offset
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The Interval UTC Offset resource is a read only resource representing the time zone offset for this Interval Data instance. If this resource is empty, the application should use the UTC offset provided in the Device [/3/0/14] object instance resource or UTC if not provided. UTC+X [ISO 8601].
        - id: 6003
          name: Interval Collection Start Time
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Time
          rangeenumeration: ""
          units: ""
          description: The Collection Start Time resource is a read only resource representing the time when the first interval was recorded on the device. Interval times represent the end of the interval, not the beginning. As an example, the first four hourly interval past midnight will have a timestamp of 04:00 (adjusting for UTC offset).
        - id: 6004
          name: Oldest Recorded Interval
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Time
          rangeenumeration: ""
          units: ""
          description: The Oldest Recorded Interval resource is a read-only resource representing the oldest available interval on the device. Interval times represent the end of the interval, not the beginning.
        - id: 6005
          name: Last Delivered Interval
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: The Last Delivered Interval is a readable and writable resource used to represent the last interval delivered to the LwM2M server. Interval times represent the end of the interval, not the beginning. The setting of this resource is implementation specific but should be updated based on, either a Read request of the Latest Payload from the LwM2M server or via a confirmed delivery of Notify operation of the Latest Payload resource. This resource is writable to allow the server to adjust the Last Delivered Interval value if the server and client is out of sync.
        - id: 6006
          name: Latest Recorded Interval
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Time
          rangeenumeration: ""
          units: ""
          description: The Latest Recorded Interval is a readable resource representing the currently highest recorded interval on the device. Interval times represent the end of the interval, not the beginning.
        - id: 6007
          name: Interval Delivery Midnight Aligned
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: The Delivery Midnight Aligned is a readable and writable resource used to indicate if data is delivered only to the previous midnight (1) or if part-day data can be delivered (0). Calculating Midnight should consider the Interval UTC Offset resource, or if empty, the Device [/3/0/14] object instance resource.
        - id: 6008
          name: Interval Historical Read
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: 'Historical Interval Read is an executable resource designed to retrieve ad-hoc interval read data. The resource takes two arguments:-Argument 0: First Interval time to Retrieve represented as number of seconds since Jan 1st, 1970 in the UTC time zone.Argument 1: Last interval time to Retrieve represented as number of seconds since Jan 1st, 1970 in the UTC time zone.The dates should be inclusive based on the end time of the interval. The data retrieved from this resource will be readable (or observable) from the Historical Read Payload Resource.As an example, the Argument List to retrieve data from Midnight 2nd March (UTC+10) to Midnight 6rd March (UTC+10) for a specific instance of the interval data object, would be constructed as follows:-0=''1488463200'',1=''1488808800'''
        - id: 6009
          name: Interval Historical Read Payload
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: The Historical Read Payload resource is the representation of the data requested by the Historical Interval Read executable resource. The format of this Opaque value should be identical to the Latest Payload resource. If no Historical Interval Read has been executed, this resource should return and empty Opaque value. This resource can either be Read from the Server or set up as an observation and Notified to the server as soon as the historical data is available. When this payload is delivered to the LwM2M server, via either a read request or a confirmed observation on this Object, Object Instance or Resource, the Historical Read Payload should be set to an empty Opaque value.
        - id: 6010
          name: Interval Change Configuration
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: 'Change Interval Configuration is an executable resource designed to allow the Interval Period, Interval Start Offset and Interval UTC Offset to be reconfigured. The resource takes three arguments:-Argument 0: [Mandatory] Interval Period represented as an integer as defined in the Interval Period Resource.Argument 1: [Optional] Interval start offset represented as an integer as defined in the Interval Start Offset Resource. If not provided, leave the value as per the current configurationArgument 2: [Optional] Interval UTC offset represented as a String as defined in the Interval UTC Offset Resource. If not provided, leave the value as per the current configuration.Depending on the specifics of the implementation of this object, reconfiguring the Interval data object may result in the removal of all historical data for this Interval Data Object Instance. Please consult with your device vendor as to the implications of reconfiguring an Interval Data Object Instance.As an example, the Argument List to change an interval data object instance from its existing values to one hour intervals, midnight aligned in UTC+10 time zone:-0=''3600'',1=''0'',1=''UTC+10'''
        - id: 6026
          name: Start
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Start is an executable resource that enables the recording of interval data. The first interval recorded will have a timestamp based on the Interval Start Offset resource. This executable resource takes no arguments. Refer to re-usable resource LogStart for further details.
        - id: 6027
          name: Stop
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Stop (LogStop) is an executable resource that disables the recording of interval data for this object instance. This executable resource takes no arguments. Refer to re-usable resource LogStop for further details.
        - id: 6028
          name: Status
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Recording Enabled is a read-only resource providing an indication of if interval data is currently being recorded for this object instance. Refer to re-usable resource LogStatus for further details.
        - id: 6029
          name: Latest Payload
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: The Latest Payload resource is a read-only serialised Opaque (Binary) representation of all the Interval Data between the Last Delivered Interval and the Latest Recorded Interval, accounting for the Delivery Midnight Aligned resource. When this payload is delivered to the LwM2M server, via either a read request or a confirmed observation on this Object, Object Instance or Resource, the Latest Delivered Interval should be updated. When no new data exists, an empty Opaque value should be provided.The payload data can be provided in an implementation specific serialisation, but by default for fixed length values should use the OMA-LwM2M CBOR format encoded as follows:1. 8-bit integer, value 2 representing OMA-LwM2M CBOR format.2. Interval Data Instance ID/ Class [16-bit integer]3. Timestamp of first Interval [32-bit integer] representing the number of seconds since Jan 1st, 1970 in the UTC time zone.4. Interval Period in seconds [32-bit integer]5. Number of intervals in Payload [16-bit integer]6. Number of Values Per Interval [8-bit integer]7. Size of Value 1 in bits [8-bit integer]8. Size of Value 2 in bits [8-bit integer]...9. Size of Value N in bits [8-bit integer]10. Interval 1 Value 1 [x bits]11. Interval 1 Value 2 [x bits]...12. Interval 1 Value N [x bits]...13. Interval N Value N [x bits]If for some implementation specific reason, there are missing intervals in the sequence, the payload may consist of multiple blocks of the above serialised data (appended into a single binary opaque value), each block representing a continuous series of interval data.
- Name: Water Meter Customer Leakage Alarm
  Description1: A binary flag indicating continual usage (e.g. greater than 5 L/h for 24 hours and the flow never returning to zero at any time).
  Description2: ""
  ObjectID: 10272
  ObjectURN: urn:oma:lwm2m:x:10272
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 6011
          name: Event Type
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Event Type is a readable and writable resource used to represent how this event will behave. Event Type should be one of the following values:-0. Disabled1. Alarm Current State2. Alarm State Change Log3. Event LogWhen the Event Type is set to Disabled (0), this event will not be recorded by the device. No Latest Eventlog payload should be delivered for events that are Disabled.When the Event Type is set to Alarm Current State (1), this Event is treated as an alarm state manager and the Latest Eventlog Payload will only contain the current state of this alarm.When the Event Type is set to Alarm State Change Log (2), the Event is treated as an alarm that reports whenever the Alarm is either set or cleared. The Latest Eventlog Payload will contain all alarm transitions since the previous delivery in this mode.When the Event Type is set to Event Log (3), this object instance is treated as a raw event log. It is used to manage and deliver events. The Latest Eventlog Payload will contain all events since the previous delivery in this mode.See the Event Log Payload for examples of each of these modes.
        - id: 6012
          name: Alarm Realtime
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Realtime is a readable and writable resource used to indicate if an event should report immediately (1) at the point of occurrence, or delivered periodically as part of the Latest Eventlog Payload.
        - id: 6013
          name: Alarm State
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Alarm State is a read-only resource used to indicate the current alarm state for this Event configuration. This is only applicable if the Event Type is Alarm Current State (1) or Alarm State Change (2).
        - id: 6014
          name: Alarm Set Threshold
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Set Threshold is a readable and writable resource used to represent the threshold for when an alarm is triggered. This resource is used in conjunction with the Set Operator resource.
        - id: 6015
          name: Alarm Set Operator
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Set Operator is a readable and writable resource used in conjunction with the Set Threshold to represent when an alarm is triggered. This resource should be set to one of the following values:-0. Greater Than or Equal to1. Less Than or Equal to By setting the Set Operator to Greater Than (0), when the measured value for this event exceeds the Set Threshold resource, the event is considered to be in an Alarm State of 1By setting the Set Operator to Less Than (1), when the measured value for this event falls below the Set Threshold resource, the event is considered to be in an Alarm State of 1
        - id: 6016
          name: Alarm Clear Threshold
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Clear Threshold is a readable and writable resource used to represent the threshold for when an alarm is cleared. This resource is used in conjunction with the Clear Operator resource.
        - id: 6017
          name: Alarm Clear Operator
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Clear Operator is a readable and writable resource used in conjunction with the Clear Threshold to represent when an alarm is Cleared. This resource should be set to one of the following values:-0. Greater Than or Equal to1. Less Than or Equal toBy setting the Clear Operator to Greater Than (0), when the measured value for this event exceeds the Clear Threshold resource, the event is considered to be in an Alarm State of 0By setting the Clear Operator to Less Than (1), when the measured value for this event falls below the Clear Threshold resource, the event is considered to be in an Alarm State of 0
        - id: 6018
          name: Alarm Maximum Event Count
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Maximum Event Count is a readable and writable resource used provide a ceiling on the number of events that can be raised within the time period defined in Maximum Event Period resource. If no Maximum Event Count is set, the number of events recorded is unconstrained. The intent of this resource is to control the number of events reported, particularly in the case of a faulty sensor.
        - id: 6019
          name: Alarm Maximum Event Period
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 1..864000
          units: s
          description: Maximum Event Period is a readable and writable resource used in conjunction with the Maximum Event Count resource to control the number of events that can be raised in a given period. Maximum Event Period is an integer value representing the number of seconds for which the Maximum Event Count is measured. If no Maximum Event Period is set, the number of events recorded is unconstrained. The intent of this resource is to control the number of events reported, particularly in the case of a faulty sensor.
        - id: 6020
          name: Latest Delivered Event Time
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: Latest Delivered Event Time is a readable and writable resource to represent the last recorded time that an event was delivered for this event code to the LwM2M server. The setting of this resource is implementation specific but should be updated based on, either a Read request of the Latest Eventlog Payload from the LwM2M server or via a confirmed delivery of Notify operation of the Latest Eventlog Payload resource. This resource is writable to allow the server to adjust the Last Delivered Event Time value if the server and client is out of sync.
        - id: 6021
          name: Latest Recorded Event Time
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Time
          rangeenumeration: ""
          units: ""
          description: Latest Recorded Event Time is a readonly resource used to represent the last recorded event time for this object instance on the device
        - id: 6022
          name: Alarm Clear
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Clear Alarm is an executable resource used to allow the LwM2M server to clear alarms when they need to be manually acknowledged.
        - id: 6023
          name: Alarm Auto Clear
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Auto Clear Alarm is a readable and writable resource used to indicate if an alarm is automatically cleared once the delivery of the event data payload is complete
        - id: 6024
          name: Event Code
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 100..255
          units: ""
          description: Event Code is a read-only resource used as an identifier to represent this class of event. The allocation of event codes is implementation specific but ideally be unique across the implementation. Event Codes use vendor specific LogClass value 100...255
        - id: 6025
          name: Latest Payload
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: The Latest Eventlog Payload resource is a read-only serialised Opaque (Binary) representation of all the Event Data between the Last Delivered Event Time and the Latest Recorded Event Time. When this payload is delivered to the LwM2M server, via either a read request or a confirmed observation on this Object, Object Instance or Resource, the Latest Delivered Interval should be updated. When no new data exists, an empty Opaque value should be provided.The payload data can be provided in an implementation specific serialisation, but by default for fixed length values should use the OMA-LwM2M CBOR format encoded with one of these schemes:-Event Type = Alarm Current State (1)In this mode, only the current alarm state should be reported1. 8-bit integer, value 2 representing OMA-LwM2M CBOR format.2. Event Code [16-bit integer]3. Event Type [8-bit Integer] - Alarm Current State (1)4. Alarm Timestamp [32-bit unsigned integer] representing the number of seconds since Jan 1st, 1970 in the UTC time zone.5. Alarm State [8-bit Integer]
- Name: Water Meter Reverse Flow Alarm
  Description1: An alarm indicating reverse flow through the pipe. Also supports delivery of the approximate volume of water flowing in the reverse direction in the preceding period.
  Description2: ""
  ObjectID: 10273
  ObjectURN: urn:oma:lwm2m:x:10273
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 6011
          name: Event Type
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Event Type is a readable and writable resource used to represent how this event will behave. Event Type should be one of the following values:-0. Disabled1. Alarm Current State2. Alarm State Change Log3. Event LogWhen the Event Type is set to Disabled (0), this event will not be recorded by the device. No Latest Eventlog payload should be delivered for events that are Disabled.When the Event Type is set to Alarm Current State (1), this Event is treated as an alarm state manager and the Latest Eventlog Payload will only contain the current state of this alarm.When the Event Type is set to Alarm State Change Log (2), the Event is treated as an alarm that reports whenever the Alarm is either set or cleared. The Latest Eventlog Payload will contain all alarm transitions since the previous delivery in this mode.When the Event Type is set to Event Log (3), this object instance is treated as a raw event log. It is used to manage and deliver events. The Latest Eventlog Payload will contain all events since the previous delivery in this mode.See the Event Log Payload for examples of each of these modes.
        - id: 6012
          name: Alarm Realtime
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Realtime is a readable and writable resource used to indicate if an event should report immediately (1) at the point of occurrence, or delivered periodically as part of the Latest Eventlog Payload.
        - id: 6013
          name: Alarm State
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Alarm State is a read-only resource used to indicate the current alarm state for this Event configuration. This is only applicable if the Event Type is Alarm Current State (1) or Alarm State Change (2).
        - id: 6014
          name: Alarm Set Threshold
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Set Threshold is a readable and writable resource used to represent the threshold for when an alarm is triggered. This resource is used in conjunction with the Set Operator resource.
        - id: 6015
          name: Alarm Set Operator
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Set Operator is a readable and writable resource used in conjunction with the Set Threshold to represent when an alarm is triggered. This resource should be set to one of the following values:-0. Greater Than or Equal to1. Less Than or Equal to By setting the Set Operator to Greater Than (0), when the measured value for this event exceeds the Set Threshold resource, the event is considered to be in an Alarm State of 1By setting the Set Operator to Less Than (1), when the measured value for this event falls below the Set Threshold resource, the event is considered to be in an Alarm State of 1
        - id: 6016
          name: Alarm Clear Threshold
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Clear Threshold is a readable and writable resource used to represent the threshold for when an alarm is cleared. This resource is used in conjunction with the Clear Operator resource.
        - id: 6017
          name: Alarm Clear Operator
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Clear Operator is a readable and writable resource used in conjunction with the Clear Threshold to represent when an alarm is Cleared. This resource should be set to one of the following values:-0. Greater Than or Equal to1. Less Than or Equal toBy setting the Clear Operator to Greater Than (0), when the measured value for this event exceeds the Clear Threshold resource, the event is considered to be in an Alarm State of 0By setting the Clear Operator to Less Than (1), when the measured value for this event falls below the Clear Threshold resource, the event is considered to be in an Alarm State of 0
        - id: 6018
          name: Alarm Maximum Event Count
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Maximum Event Count is a readable and writable resource used provide a ceiling on the number of events that can be raised within the time period defined in Maximum Event Period resource. If no Maximum Event Count is set, the number of events recorded is unconstrained. The intent of this resource is to control the number of events reported, particularly in the case of a faulty sensor.
        - id: 6019
          name: Alarm Maximum Event Period
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 1..864000
          units: s
          description: Maximum Event Period is a readable and writable resource used in conjunction with the Maximum Event Count resource to control the number of events that can be raised in a given period. Maximum Event Period is an integer value representing the number of seconds for which the Maximum Event Count is measured. If no Maximum Event Period is set, the number of events recorded is unconstrained. The intent of this resource is to control the number of events reported, particularly in the case of a faulty sensor.
        - id: 6020
          name: Latest Delivered Event Time
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: Latest Delivered Event Time is a readable and writable resource to represent the last recorded time that an event was delivered for this event code to the LwM2M server. The setting of this resource is implementation specific but should be updated based on, either a Read request of the Latest Eventlog Payload from the LwM2M server or via a confirmed delivery of Notify operation of the Latest Eventlog Payload resource. This resource is writable to allow the server to adjust the Last Delivered Event Time value if the server and client is out of sync.
        - id: 6021
          name: Latest Recorded Event Time
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Time
          rangeenumeration: ""
          units: ""
          description: Latest Recorded Event Time is a readonly resource used to represent the last recorded event time for this object instance on the device
        - id: 6022
          name: Alarm Clear
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Clear Alarm is an executable resource used to allow the LwM2M server to clear alarms when they need to be manually acknowledged.
        - id: 6023
          name: Alarm Auto Clear
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Auto Clear Alarm is a readable and writable resource used to indicate if an alarm is automatically cleared once the delivery of the event data payload is complete
        - id: 6024
          name: Event Code
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 100..255
          units: ""
          description: Event Code is a read-only resource used as an identifier to represent this class of event. The allocation of event codes is implementation specific but ideally be unique across the implementation. Event Codes use vendor specific LogClass value 100...255
        - id: 6025
          name: Latest Payload
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: The Latest Eventlog Payload resource is a read-only serialised Opaque (Binary) representation of all the Event Data between the Last Delivered Event Time and the Latest Recorded Event Time. When this payload is delivered to the LwM2M server, via either a read request or a confirmed observation on this Object, Object Instance or Resource, the Latest Delivered Interval should be updated. When no new data exists, an empty Opaque value should be provided.The payload data can be provided in an implementation specific serialisation, but by default for fixed length values should use the OMA-LwM2M CBOR format encoded with one of these schemes:-Event Type = Alarm Current State (1)In this mode, only the current alarm state should be reported1. 8-bit integer, value 2 representing OMA-LwM2M CBOR format.2. Event Code [16-bit integer]3. Event Type [8-bit Integer] - Alarm Current State (1)4. Alarm Timestamp [32-bit unsigned integer] representing the number of seconds since Jan 1st, 1970 in the UTC time zone.5. Alarm State [8-bit Integer]
- Name: Water Meter Empty Pipe Alarm
  Description1: An alarm when meter detects there is no liquid in the pipe
  Description2: ""
  ObjectID: 10274
  ObjectURN: urn:oma:lwm2m:x:10274
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 6011
          name: Event Type
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Event Type is a readable and writable resource used to represent how this event will behave. Event Type should be one of the following values:-0. Disabled1. Alarm Current State2. Alarm State Change Log3. Event LogWhen the Event Type is set to Disabled (0), this event will not be recorded by the device. No Latest Eventlog payload should be delivered for events that are Disabled.When the Event Type is set to Alarm Current State (1), this Event is treated as an alarm state manager and the Latest Eventlog Payload will only contain the current state of this alarm.When the Event Type is set to Alarm State Change Log (2), the Event is treated as an alarm that reports whenever the Alarm is either set or cleared. The Latest Eventlog Payload will contain all alarm transitions since the previous delivery in this mode.When the Event Type is set to Event Log (3), this object instance is treated as a raw event log. It is used to manage and deliver events. The Latest Eventlog Payload will contain all events since the previous delivery in this mode.See the Event Log Payload for examples of each of these modes.
        - id: 6012
          name: Alarm Realtime
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Realtime is a readable and writable resource used to indicate if an event should report immediately (1) at the point of occurrence, or delivered periodically as part of the Latest Eventlog Payload.
        - id: 6013
          name: Alarm State
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Alarm State is a read-only resource used to indicate the current alarm state for this Event configuration. This is only applicable if the Event Type is Alarm Current State (1) or Alarm State Change (2).
        - id: 6014
          name: Alarm Set Threshold
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Set Threshold is a readable and writable resource used to represent the threshold for when an alarm is triggered. This resource is used in conjunction with the Set Operator resource.
        - id: 6015
          name: Alarm Set Operator
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Set Operator is a readable and writable resource used in conjunction with the Set Threshold to represent when an alarm is triggered. This resource should be set to one of the following values:-0. Greater Than or Equal to1. Less Than or Equal to By setting the Set Operator to Greater Than (0), when the measured value for this event exceeds the Set Threshold resource, the event is considered to be in an Alarm State of 1By setting the Set Operator to Less Than (1), when the measured value for this event falls below the Set Threshold resource, the event is considered to be in an Alarm State of 1
        - id: 6016
          name: Alarm Clear Threshold
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Clear Threshold is a readable and writable resource used to represent the threshold for when an alarm is cleared. This resource is used in conjunction with the Clear Operator resource.
        - id: 6017
          name: Alarm Clear Operator
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Clear Operator is a readable and writable resource used in conjunction with the Clear Threshold to represent when an alarm is Cleared. This resource should be set to one of the following values:-0. Greater Than or Equal to1. Less Than or Equal toBy setting the Clear Operator to Greater Than (0), when the measured value for this event exceeds the Clear Threshold resource, the event is considered to be in an Alarm State of 0By setting the Clear Operator to Less Than (1), when the measured value for this event falls below the Clear Threshold resource, the event is considered to be in an Alarm State of 0
        - id: 6018
          name: Alarm Maximum Event Count
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Maximum Event Count is a readable and writable resource used provide a ceiling on the number of events that can be raised within the time period defined in Maximum Event Period resource. If no Maximum Event Count is set, the number of events recorded is unconstrained. The intent of this resource is to control the number of events reported, particularly in the case of a faulty sensor.
        - id: 6019
          name: Alarm Maximum Event Period
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 1..864000
          units: s
          description: Maximum Event Period is a readable and writable resource used in conjunction with the Maximum Event Count resource to control the number of events that can be raised in a given period. Maximum Event Period is an integer value representing the number of seconds for which the Maximum Event Count is measured. If no Maximum Event Period is set, the number of events recorded is unconstrained. The intent of this resource is to control the number of events reported, particularly in the case of a faulty sensor.
        - id: 6020
          name: Latest Delivered Event Time
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: Latest Delivered Event Time is a readable and writable resource to represent the last recorded time that an event was delivered for this event code to the LwM2M server. The setting of this resource is implementation specific but should be updated based on, either a Read request of the Latest Eventlog Payload from the LwM2M server or via a confirmed delivery of Notify operation of the Latest Eventlog Payload resource. This resource is writable to allow the server to adjust the Last Delivered Event Time value if the server and client is out of sync.
        - id: 6021
          name: Latest Recorded Event Time
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Time
          rangeenumeration: ""
          units: ""
          description: Latest Recorded Event Time is a readonly resource used to represent the last recorded event time for this object instance on the device
        - id: 6022
          name: Alarm Clear
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Clear Alarm is an executable resource used to allow the LwM2M server to clear alarms when they need to be manually acknowledged.
        - id: 6023
          name: Alarm Auto Clear
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Auto Clear Alarm is a readable and writable resource used to indicate if an alarm is automatically cleared once the delivery of the event data payload is complete
        - id: 6024
          name: Event Code
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 100..255
          units: ""
          description: Event Code is a read-only resource used as an identifier to represent this class of event. The allocation of event codes is implementation specific but ideally be unique across the implementation. Event Codes use vendor specific LogClass value 100...255
        - id: 6025
          name: Latest Payload
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: The Latest Eventlog Payload resource is a read-only serialised Opaque (Binary) representation of all the Event Data between the Last Delivered Event Time and the Latest Recorded Event Time. When this payload is delivered to the LwM2M server, via either a read request or a confirmed observation on this Object, Object Instance or Resource, the Latest Delivered Interval should be updated. When no new data exists, an empty Opaque value should be provided.The payload data can be provided in an implementation specific serialisation, but by default for fixed length values should use the OMA-LwM2M CBOR format encoded with one of these schemes:-Event Type = Alarm Current State (1)In this mode, only the current alarm state should be reported1. 8-bit integer, value 2 representing OMA-LwM2M CBOR format.2. Event Code [16-bit integer]3. Event Type [8-bit Integer] - Alarm Current State (1)4. Alarm Timestamp [32-bit unsigned integer] representing the number of seconds since Jan 1st, 1970 in the UTC time zone.5. Alarm State [8-bit Integer]
- Name: Water Meter Tamper Alarm
  Description1: Detects interference from strong magnetic field or other electrical sources. If this is not relevant for ultrasonic meters then the tamper alarm may be used to indicate someone attempting to open the physical enclosure or other options the manufacturer may present.
  Description2: ""
  ObjectID: 10275
  ObjectURN: urn:oma:lwm2m:x:10275
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 6011
          name: Event Type
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Event Type is a readable and writable resource used to represent how this event will behave. Event Type should be one of the following values:-0. Disabled1. Alarm Current State2. Alarm State Change Log3. Event LogWhen the Event Type is set to Disabled (0), this event will not be recorded by the device. No Latest Eventlog payload should be delivered for events that are Disabled.When the Event Type is set to Alarm Current State (1), this Event is treated as an alarm state manager and the Latest Eventlog Payload will only contain the current state of this alarm.When the Event Type is set to Alarm State Change Log (2), the Event is treated as an alarm that reports whenever the Alarm is either set or cleared. The Latest Eventlog Payload will contain all alarm transitions since the previous delivery in this mode.When the Event Type is set to Event Log (3), this object instance is treated as a raw event log. It is used to manage and deliver events. The Latest Eventlog Payload will contain all events since the previous delivery in this mode.See the Event Log Payload for examples of each of these modes.
        - id: 6012
          name: Alarm Realtime
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Realtime is a readable and writable resource used to indicate if an event should report immediately (1) at the point of occurrence, or delivered periodically as part of the Latest Eventlog Payload.
        - id: 6013
          name: Alarm State
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Alarm State is a read-only resource used to indicate the current alarm state for this Event configuration. This is only applicable if the Event Type is Alarm Current State (1) or Alarm State Change (2).
        - id: 6014
          name: Alarm Set Threshold
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Set Threshold is a readable and writable resource used to represent the threshold for when an alarm is triggered. This resource is used in conjunction with the Set Operator resource.
        - id: 6015
          name: Alarm Set Operator
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Set Operator is a readable and writable resource used in conjunction with the Set Threshold to represent when an alarm is triggered. This resource should be set to one of the following values:-0. Greater Than or Equal to1. Less Than or Equal to By setting the Set Operator to Greater Than (0), when the measured value for this event exceeds the Set Threshold resource, the event is considered to be in an Alarm State of 1By setting the Set Operator to Less Than (1), when the measured value for this event falls below the Set Threshold resource, the event is considered to be in an Alarm State of 1
        - id: 6016
          name: Alarm Clear Threshold
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Clear Threshold is a readable and writable resource used to represent the threshold for when an alarm is cleared. This resource is used in conjunction with the Clear Operator resource.
        - id: 6017
          name: Alarm Clear Operator
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Clear Operator is a readable and writable resource used in conjunction with the Clear Threshold to represent when an alarm is Cleared. This resource should be set to one of the following values:-0. Greater Than or Equal to1. Less Than or Equal toBy setting the Clear Operator to Greater Than (0), when the measured value for this event exceeds the Clear Threshold resource, the event is considered to be in an Alarm State of 0By setting the Clear Operator to Less Than (1), when the measured value for this event falls below the Clear Threshold resource, the event is considered to be in an Alarm State of 0
        - id: 6018
          name: Alarm Maximum Event Count
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Maximum Event Count is a readable and writable resource used provide a ceiling on the number of events that can be raised within the time period defined in Maximum Event Period resource. If no Maximum Event Count is set, the number of events recorded is unconstrained. The intent of this resource is to control the number of events reported, particularly in the case of a faulty sensor.
        - id: 6019
          name: Alarm Maximum Event Period
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 1..864000
          units: s
          description: Maximum Event Period is a readable and writable resource used in conjunction with the Maximum Event Count resource to control the number of events that can be raised in a given period. Maximum Event Period is an integer value representing the number of seconds for which the Maximum Event Count is measured. If no Maximum Event Period is set, the number of events recorded is unconstrained. The intent of this resource is to control the number of events reported, particularly in the case of a faulty sensor.
        - id: 6020
          name: Latest Delivered Event Time
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: Latest Delivered Event Time is a readable and writable resource to represent the last recorded time that an event was delivered for this event code to the LwM2M server. The setting of this resource is implementation specific but should be updated based on, either a Read request of the Latest Eventlog Payload from the LwM2M server or via a confirmed delivery of Notify operation of the Latest Eventlog Payload resource. This resource is writable to allow the server to adjust the Last Delivered Event Time value if the server and client is out of sync.
        - id: 6021
          name: Latest Recorded Event Time
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Time
          rangeenumeration: ""
          units: ""
          description: Latest Recorded Event Time is a readonly resource used to represent the last recorded event time for this object instance on the device
        - id: 6022
          name: Alarm Clear
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Clear Alarm is an executable resource used to allow the LwM2M server to clear alarms when they need to be manually acknowledged.
        - id: 6023
          name: Alarm Auto Clear
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Auto Clear Alarm is a readable and writable resource used to indicate if an alarm is automatically cleared once the delivery of the event data payload is complete
        - id: 6024
          name: Event Code
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 100..255
          units: ""
          description: Event Code is a read-only resource used as an identifier to represent this class of event. The allocation of event codes is implementation specific but ideally be unique across the implementation. Event Codes use vendor specific LogClass value 100...255
        - id: 6025
          name: Latest Payload
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: The Latest Eventlog Payload resource is a read-only serialised Opaque (Binary) representation of all the Event Data between the Last Delivered Event Time and the Latest Recorded Event Time. When this payload is delivered to the LwM2M server, via either a read request or a confirmed observation on this Object, Object Instance or Resource, the Latest Delivered Interval should be updated. When no new data exists, an empty Opaque value should be provided.The payload data can be provided in an implementation specific serialisation, but by default for fixed length values should use the OMA-LwM2M CBOR format encoded with one of these schemes:-Event Type = Alarm Current State (1)In this mode, only the current alarm state should be reported1. 8-bit integer, value 2 representing OMA-LwM2M CBOR format.2. Event Code [16-bit integer]3. Event Type [8-bit Integer] - Alarm Current State (1)4. Alarm Timestamp [32-bit unsigned integer] representing the number of seconds since Jan 1st, 1970 in the UTC time zone.5. Alarm State [8-bit Integer]
- Name: Water Meter High Pressure Alarm
  Description1: Where supported by the meter this is an alarm that should be raised if the meter detects pressure above a pre-configured threshold.
  Description2: ""
  ObjectID: 10276
  ObjectURN: urn:oma:lwm2m:x:10276
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 6011
          name: Event Type
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Event Type is a readable and writable resource used to represent how this event will behave. Event Type should be one of the following values:-0. Disabled1. Alarm Current State2. Alarm State Change Log3. Event LogWhen the Event Type is set to Disabled (0), this event will not be recorded by the device. No Latest Eventlog payload should be delivered for events that are Disabled.When the Event Type is set to Alarm Current State (1), this Event is treated as an alarm state manager and the Latest Eventlog Payload will only contain the current state of this alarm.When the Event Type is set to Alarm State Change Log (2), the Event is treated as an alarm that reports whenever the Alarm is either set or cleared. The Latest Eventlog Payload will contain all alarm transitions since the previous delivery in this mode.When the Event Type is set to Event Log (3), this object instance is treated as a raw event log. It is used to manage and deliver events. The Latest Eventlog Payload will contain all events since the previous delivery in this mode.See the Event Log Payload for examples of each of these modes.
        - id: 6012
          name: Alarm Realtime
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Realtime is a readable and writable resource used to indicate if an event should report immediately (1) at the point of occurrence, or delivered periodically as part of the Latest Eventlog Payload.
        - id: 6013
          name: Alarm State
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Alarm State is a read-only resource used to indicate the current alarm state for this Event configuration. This is only applicable if the Event Type is Alarm Current State (1) or Alarm State Change (2).
        - id: 6014
          name: Alarm Set Threshold
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Set Threshold is a readable and writable resource used to represent the threshold for when an alarm is triggered. This resource is used in conjunction with the Set Operator resource.
        - id: 6015
          name: Alarm Set Operator
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Set Operator is a readable and writable resource used in conjunction with the Set Threshold to represent when an alarm is triggered. This resource should be set to one of the following values:-0. Greater Than or Equal to1. Less Than or Equal to By setting the Set Operator to Greater Than (0), when the measured value for this event exceeds the Set Threshold resource, the event is considered to be in an Alarm State of 1By setting the Set Operator to Less Than (1), when the measured value for this event falls below the Set Threshold resource, the event is considered to be in an Alarm State of 1
        - id: 6016
          name: Alarm Clear Threshold
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Clear Threshold is a readable and writable resource used to represent the threshold for when an alarm is cleared. This resource is used in conjunction with the Clear Operator resource.
        - id: 6017
          name: Alarm Clear Operator
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Clear Operator is a readable and writable resource used in conjunction with the Clear Threshold to represent when an alarm is Cleared. This resource should be set to one of the following values:-0. Greater Than or Equal to1. Less Than or Equal toBy setting the Clear Operator to Greater Than (0), when the measured value for this event exceeds the Clear Threshold resource, the event is considered to be in an Alarm State of 0By setting the Clear Operator to Less Than (1), when the measured value for this event falls below the Clear Threshold resource, the event is considered to be in an Alarm State of 0
        - id: 6018
          name: Alarm Maximum Event Count
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Maximum Event Count is a readable and writable resource used provide a ceiling on the number of events that can be raised within the time period defined in Maximum Event Period resource. If no Maximum Event Count is set, the number of events recorded is unconstrained. The intent of this resource is to control the number of events reported, particularly in the case of a faulty sensor.
        - id: 6019
          name: Alarm Maximum Event Period
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 1..864000
          units: s
          description: Maximum Event Period is a readable and writable resource used in conjunction with the Maximum Event Count resource to control the number of events that can be raised in a given period. Maximum Event Period is an integer value representing the number of seconds for which the Maximum Event Count is measured. If no Maximum Event Period is set, the number of events recorded is unconstrained. The intent of this resource is to control the number of events reported, particularly in the case of a faulty sensor.
        - id: 6020
          name: Latest Delivered Event Time
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: Latest Delivered Event Time is a readable and writable resource to represent the last recorded time that an event was delivered for this event code to the LwM2M server. The setting of this resource is implementation specific but should be updated based on, either a Read request of the Latest Eventlog Payload from the LwM2M server or via a confirmed delivery of Notify operation of the Latest Eventlog Payload resource. This resource is writable to allow the server to adjust the Last Delivered Event Time value if the server and client is out of sync.
        - id: 6021
          name: Latest Recorded Event Time
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Time
          rangeenumeration: ""
          units: ""
          description: Latest Recorded Event Time is a readonly resource used to represent the last recorded event time for this object instance on the device
        - id: 6022
          name: Alarm Clear
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Clear Alarm is an executable resource used to allow the LwM2M server to clear alarms when they need to be manually acknowledged.
        - id: 6023
          name: Alarm Auto Clear
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Auto Clear Alarm is a readable and writable resource used to indicate if an alarm is automatically cleared once the delivery of the event data payload is complete
        - id: 6024
          name: Event Code
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 100..255
          units: ""
          description: Event Code is a read-only resource used as an identifier to represent this class of event. The allocation of event codes is implementation specific but ideally be unique across the implementation. Event Codes use vendor specific LogClass value 100...255
        - id: 6025
          name: Latest Payload
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: The Latest Eventlog Payload resource is a read-only serialised Opaque (Binary) representation of all the Event Data between the Last Delivered Event Time and the Latest Recorded Event Time. When this payload is delivered to the LwM2M server, via either a read request or a confirmed observation on this Object, Object Instance or Resource, the Latest Delivered Interval should be updated. When no new data exists, an empty Opaque value should be provided.The payload data can be provided in an implementation specific serialisation, but by default for fixed length values should use the OMA-LwM2M CBOR format encoded with one of these schemes:-Event Type = Alarm Current State (1)In this mode, only the current alarm state should be reported1. 8-bit integer, value 2 representing OMA-LwM2M CBOR format.2. Event Code [16-bit integer]3. Event Type [8-bit Integer] - Alarm Current State (1)4. Alarm Timestamp [32-bit unsigned integer] representing the number of seconds since Jan 1st, 1970 in the UTC time zone.5. Alarm State [8-bit Integer]
- Name: Water Meter Low Pressure Alarm
  Description1: Where supported by the meter this is an alarm that should be raised if the meter detects pressure below a pre-configured threshold.
  Description2: ""
  ObjectID: 10277
  ObjectURN: urn:oma:lwm2m:x:10277
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 6011
          name: Event Type
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Event Type is a readable and writable resource used to represent how this event will behave. Event Type should be one of the following values:-0. Disabled1. Alarm Current State2. Alarm State Change Log3. Event LogWhen the Event Type is set to Disabled (0), this event will not be recorded by the device. No Latest Eventlog payload should be delivered for events that are Disabled.When the Event Type is set to Alarm Current State (1), this Event is treated as an alarm state manager and the Latest Eventlog Payload will only contain the current state of this alarm.When the Event Type is set to Alarm State Change Log (2), the Event is treated as an alarm that reports whenever the Alarm is either set or cleared. The Latest Eventlog Payload will contain all alarm transitions since the previous delivery in this mode.When the Event Type is set to Event Log (3), this object instance is treated as a raw event log. It is used to manage and deliver events. The Latest Eventlog Payload will contain all events since the previous delivery in this mode.See the Event Log Payload for examples of each of these modes.
        - id: 6012
          name: Alarm Realtime
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Realtime is a readable and writable resource used to indicate if an event should report immediately (1) at the point of occurrence, or delivered periodically as part of the Latest Eventlog Payload.
        - id: 6013
          name: Alarm State
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Alarm State is a read-only resource used to indicate the current alarm state for this Event configuration. This is only applicable if the Event Type is Alarm Current State (1) or Alarm State Change (2).
        - id: 6014
          name: Alarm Set Threshold
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Set Threshold is a readable and writable resource used to represent the threshold for when an alarm is triggered. This resource is used in conjunction with the Set Operator resource.
        - id: 6015
          name: Alarm Set Operator
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Set Operator is a readable and writable resource used in conjunction with the Set Threshold to represent when an alarm is triggered. This resource should be set to one of the following values:-0. Greater Than or Equal to1. Less Than or Equal to By setting the Set Operator to Greater Than (0), when the measured value for this event exceeds the Set Threshold resource, the event is considered to be in an Alarm State of 1By setting the Set Operator to Less Than (1), when the measured value for this event falls below the Set Threshold resource, the event is considered to be in an Alarm State of 1
        - id: 6016
          name: Alarm Clear Threshold
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Clear Threshold is a readable and writable resource used to represent the threshold for when an alarm is cleared. This resource is used in conjunction with the Clear Operator resource.
        - id: 6017
          name: Alarm Clear Operator
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Clear Operator is a readable and writable resource used in conjunction with the Clear Threshold to represent when an alarm is Cleared. This resource should be set to one of the following values:-0. Greater Than or Equal to1. Less Than or Equal toBy setting the Clear Operator to Greater Than (0), when the measured value for this event exceeds the Clear Threshold resource, the event is considered to be in an Alarm State of 0By setting the Clear Operator to Less Than (1), when the measured value for this event falls below the Clear Threshold resource, the event is considered to be in an Alarm State of 0
        - id: 6018
          name: Alarm Maximum Event Count
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Maximum Event Count is a readable and writable resource used provide a ceiling on the number of events that can be raised within the time period defined in Maximum Event Period resource. If no Maximum Event Count is set, the number of events recorded is unconstrained. The intent of this resource is to control the number of events reported, particularly in the case of a faulty sensor.
        - id: 6019
          name: Alarm Maximum Event Period
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 1..864000
          units: s
          description: Maximum Event Period is a readable and writable resource used in conjunction with the Maximum Event Count resource to control the number of events that can be raised in a given period. Maximum Event Period is an integer value representing the number of seconds for which the Maximum Event Count is measured. If no Maximum Event Period is set, the number of events recorded is unconstrained. The intent of this resource is to control the number of events reported, particularly in the case of a faulty sensor.
        - id: 6020
          name: Latest Delivered Event Time
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: Latest Delivered Event Time is a readable and writable resource to represent the last recorded time that an event was delivered for this event code to the LwM2M server. The setting of this resource is implementation specific but should be updated based on, either a Read request of the Latest Eventlog Payload from the LwM2M server or via a confirmed delivery of Notify operation of the Latest Eventlog Payload resource. This resource is writable to allow the server to adjust the Last Delivered Event Time value if the server and client is out of sync.
        - id: 6021
          name: Latest Recorded Event Time
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Time
          rangeenumeration: ""
          units: ""
          description: Latest Recorded Event Time is a readonly resource used to represent the last recorded event time for this object instance on the device
        - id: 6022
          name: Alarm Clear
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Clear Alarm is an executable resource used to allow the LwM2M server to clear alarms when they need to be manually acknowledged.
        - id: 6023
          name: Alarm Auto Clear
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Auto Clear Alarm is a readable and writable resource used to indicate if an alarm is automatically cleared once the delivery of the event data payload is complete
        - id: 6024
          name: Event Code
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 100..255
          units: ""
          description: Event Code is a read-only resource used as an identifier to represent this class of event. The allocation of event codes is implementation specific but ideally be unique across the implementation. Event Codes use vendor specific LogClass value 100...255
        - id: 6025
          name: Latest Payload
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: The Latest Eventlog Payload resource is a read-only serialised Opaque (Binary) representation of all the Event Data between the Last Delivered Event Time and the Latest Recorded Event Time. When this payload is delivered to the LwM2M server, via either a read request or a confirmed observation on this Object, Object Instance or Resource, the Latest Delivered Interval should be updated. When no new data exists, an empty Opaque value should be provided.The payload data can be provided in an implementation specific serialisation, but by default for fixed length values should use the OMA-LwM2M CBOR format encoded with one of these schemes:-Event Type = Alarm Current State (1)In this mode, only the current alarm state should be reported1. 8-bit integer, value 2 representing OMA-LwM2M CBOR format.2. Event Code [16-bit integer]3. Event Type [8-bit Integer] - Alarm Current State (1)4. Alarm Timestamp [32-bit unsigned integer] representing the number of seconds since Jan 1st, 1970 in the UTC time zone.5. Alarm State [8-bit Integer]
- Name: High Temperature Alarm
  Description1: Where supported by the meter this is an alarm that should be raised if the meter detects temperature above a pre-configured threshold. When the temperature drops below the clear threshold, the alarm should be cleared.
  Description2: ""
  ObjectID: 10278
  ObjectURN: urn:oma:lwm2m:x:10278
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 6011
          name: Event Type
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Event Type is a readable and writable resource used to represent how this event will behave. Event Type should be one of the following values:-0. Disabled1. Alarm Current State2. Alarm State Change Log3. Event LogWhen the Event Type is set to Disabled (0), this event will not be recorded by the device. No Latest Eventlog payload should be delivered for events that are Disabled.When the Event Type is set to Alarm Current State (1), this Event is treated as an alarm state manager and the Latest Eventlog Payload will only contain the current state of this alarm.When the Event Type is set to Alarm State Change Log (2), the Event is treated as an alarm that reports whenever the Alarm is either set or cleared. The Latest Eventlog Payload will contain all alarm transitions since the previous delivery in this mode.When the Event Type is set to Event Log (3), this object instance is treated as a raw event log. It is used to manage and deliver events. The Latest Eventlog Payload will contain all events since the previous delivery in this mode.See the Event Log Payload for examples of each of these modes.
        - id: 6012
          name: Alarm Realtime
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Realtime is a readable and writable resource used to indicate if an event should report immediately (1) at the point of occurrence, or delivered periodically as part of the Latest Eventlog Payload.
        - id: 6013
          name: Alarm State
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Alarm State is a read-only resource used to indicate the current alarm state for this Event configuration. This is only applicable if the Event Type is Alarm Current State (1) or Alarm State Change (2).
        - id: 6014
          name: Alarm Set Threshold
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Set Threshold is a readable and writable resource used to represent the threshold for when an alarm is triggered. This resource is used in conjunction with the Set Operator resource.
        - id: 6015
          name: Alarm Set Operator
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Set Operator is a readable and writable resource used in conjunction with the Set Threshold to represent when an alarm is triggered. This resource should be set to one of the following values:-0. Greater Than or Equal to1. Less Than or Equal to By setting the Set Operator to Greater Than (0), when the measured value for this event exceeds the Set Threshold resource, the event is considered to be in an Alarm State of 1By setting the Set Operator to Less Than (1), when the measured value for this event falls below the Set Threshold resource, the event is considered to be in an Alarm State of 1
        - id: 6016
          name: Alarm Clear Threshold
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Clear Threshold is a readable and writable resource used to represent the threshold for when an alarm is cleared. This resource is used in conjunction with the Clear Operator resource.
        - id: 6017
          name: Alarm Clear Operator
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Clear Operator is a readable and writable resource used in conjunction with the Clear Threshold to represent when an alarm is Cleared. This resource should be set to one of the following values:-0. Greater Than or Equal to1. Less Than or Equal toBy setting the Clear Operator to Greater Than (0), when the measured value for this event exceeds the Clear Threshold resource, the event is considered to be in an Alarm State of 0By setting the Clear Operator to Less Than (1), when the measured value for this event falls below the Clear Threshold resource, the event is considered to be in an Alarm State of 0
        - id: 6018
          name: Alarm Maximum Event Count
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Maximum Event Count is a readable and writable resource used provide a ceiling on the number of events that can be raised within the time period defined in Maximum Event Period resource. If no Maximum Event Count is set, the number of events recorded is unconstrained. The intent of this resource is to control the number of events reported, particularly in the case of a faulty sensor.
        - id: 6019
          name: Alarm Maximum Event Period
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 1..864000
          units: s
          description: Maximum Event Period is a readable and writable resource used in conjunction with the Maximum Event Count resource to control the number of events that can be raised in a given period. Maximum Event Period is an integer value representing the number of seconds for which the Maximum Event Count is measured. If no Maximum Event Period is set, the number of events recorded is unconstrained. The intent of this resource is to control the number of events reported, particularly in the case of a faulty sensor.
        - id: 6020
          name: Latest Delivered Event Time
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: Latest Delivered Event Time is a readable and writable resource to represent the last recorded time that an event was delivered for this event code to the LwM2M server. The setting of this resource is implementation specific but should be updated based on, either a Read request of the Latest Eventlog Payload from the LwM2M server or via a confirmed delivery of Notify operation of the Latest Eventlog Payload resource. This resource is writable to allow the server to adjust the Last Delivered Event Time value if the server and client is out of sync.
        - id: 6021
          name: Latest Recorded Event Time
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Time
          rangeenumeration: ""
          units: ""
          description: Latest Recorded Event Time is a readonly resource used to represent the last recorded event time for this object instance on the device
        - id: 6022
          name: Alarm Clear
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Clear Alarm is an executable resource used to allow the LwM2M server to clear alarms when they need to be manually acknowledged.
        - id: 6023
          name: Alarm Auto Clear
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Auto Clear Alarm is a readable and writable resource used to indicate if an alarm is automatically cleared once the delivery of the event data payload is complete
        - id: 6024
          name: Event Code
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 100..255
          units: ""
          description: Event Code is a read-only resource used as an identifier to represent this class of event. The allocation of event codes is implementation specific but ideally be unique across the implementation. Event Codes use vendor specific LogClass value 100...255
        - id: 6025
          name: Latest Payload
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: The Latest Eventlog Payload resource is a read-only serialised Opaque (Binary) representation of all the Event Data between the Last Delivered Event Time and the Latest Recorded Event Time. When this payload is delivered to the LwM2M server, via either a read request or a confirmed observation on this Object, Object Instance or Resource, the Latest Delivered Interval should be updated. When no new data exists, an empty Opaque value should be provided.The payload data can be provided in an implementation specific serialisation, but by default for fixed length values should use the OMA-LwM2M CBOR format encoded with one of these schemes:-Event Type = Alarm Current State (1)In this mode, only the current alarm state should be reported1. 8-bit integer, value 2 representing OMA-LwM2M CBOR format.2. Event Code [16-bit integer]3. Event Type [8-bit Integer] - Alarm Current State (1)4. Alarm Timestamp [32-bit unsigned integer] representing the number of seconds since Jan 1st, 1970 in the UTC time zone.5. Alarm State [8-bit Integer]
- Name: Low Temperature Alarm
  Description1: Where supported by the meter this is an alarm that should be raised if the meter detects temperature below a pre-configured threshold. When the temperature rises above the clear threshold, the alarm should be cleared
  Description2: ""
  ObjectID: 10279
  ObjectURN: urn:oma:lwm2m:x:10279
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 6011
          name: Event Type
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Event Type is a readable and writable resource used to represent how this event will behave. Event Type should be one of the following values:-0. Disabled1. Alarm Current State2. Alarm State Change Log3. Event LogWhen the Event Type is set to Disabled (0), this event will not be recorded by the device. No Latest Eventlog payload should be delivered for events that are Disabled.When the Event Type is set to Alarm Current State (1), this Event is treated as an alarm state manager and the Latest Eventlog Payload will only contain the current state of this alarm.When the Event Type is set to Alarm State Change Log (2), the Event is treated as an alarm that reports whenever the Alarm is either set or cleared. The Latest Eventlog Payload will contain all alarm transitions since the previous delivery in this mode.When the Event Type is set to Event Log (3), this object instance is treated as a raw event log. It is used to manage and deliver events. The Latest Eventlog Payload will contain all events since the previous delivery in this mode.See the Event Log Payload for examples of each of these modes.
        - id: 6012
          name: Alarm Realtime
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Realtime is a readable and writable resource used to indicate if an event should report immediately (1) at the point of occurrence, or delivered periodically as part of the Latest Eventlog Payload.
        - id: 6013
          name: Alarm State
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Alarm State is a read-only resource used to indicate the current alarm state for this Event configuration. This is only applicable if the Event Type is Alarm Current State (1) or Alarm State Change (2).
        - id: 6014
          name: Alarm Set Threshold
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Set Threshold is a readable and writable resource used to represent the threshold for when an alarm is triggered. This resource is used in conjunction with the Set Operator resource.
        - id: 6015
          name: Alarm Set Operator
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Set Operator is a readable and writable resource used in conjunction with the Set Threshold to represent when an alarm is triggered. This resource should be set to one of the following values:-0. Greater Than or Equal to1. Less Than or Equal to By setting the Set Operator to Greater Than (0), when the measured value for this event exceeds the Set Threshold resource, the event is considered to be in an Alarm State of 1By setting the Set Operator to Less Than (1), when the measured value for this event falls below the Set Threshold resource, the event is considered to be in an Alarm State of 1
        - id: 6016
          name: Alarm Clear Threshold
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Clear Threshold is a readable and writable resource used to represent the threshold for when an alarm is cleared. This resource is used in conjunction with the Clear Operator resource.
        - id: 6017
          name: Alarm Clear Operator
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Clear Operator is a readable and writable resource used in conjunction with the Clear Threshold to represent when an alarm is Cleared. This resource should be set to one of the following values:-0. Greater Than or Equal to1. Less Than or Equal toBy setting the Clear Operator to Greater Than (0), when the measured value for this event exceeds the Clear Threshold resource, the event is considered to be in an Alarm State of 0By setting the Clear Operator to Less Than (1), when the measured value for this event falls below the Clear Threshold resource, the event is considered to be in an Alarm State of 0
        - id: 6018
          name: Alarm Maximum Event Count
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Maximum Event Count is a readable and writable resource used provide a ceiling on the number of events that can be raised within the time period defined in Maximum Event Period resource. If no Maximum Event Count is set, the number of events recorded is unconstrained. The intent of this resource is to control the number of events reported, particularly in the case of a faulty sensor.
        - id: 6019
          name: Alarm Maximum Event Period
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 1..864000
          units: s
          description: Maximum Event Period is a readable and writable resource used in conjunction with the Maximum Event Count resource to control the number of events that can be raised in a given period. Maximum Event Period is an integer value representing the number of seconds for which the Maximum Event Count is measured. If no Maximum Event Period is set, the number of events recorded is unconstrained. The intent of this resource is to control the number of events reported, particularly in the case of a faulty sensor.
        - id: 6020
          name: Latest Delivered Event Time
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: Latest Delivered Event Time is a readable and writable resource to represent the last recorded time that an event was delivered for this event code to the LwM2M server. The setting of this resource is implementation specific but should be updated based on, either a Read request of the Latest Eventlog Payload from the LwM2M server or via a confirmed delivery of Notify operation of the Latest Eventlog Payload resource. This resource is writable to allow the server to adjust the Last Delivered Event Time value if the server and client is out of sync.
        - id: 6021
          name: Latest Recorded Event Time
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Time
          rangeenumeration: ""
          units: ""
          description: Latest Recorded Event Time is a readonly resource used to represent the last recorded event time for this object instance on the device
        - id: 6022
          name: Alarm Clear
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Clear Alarm is an executable resource used to allow the LwM2M server to clear alarms when they need to be manually acknowledged.
        - id: 6023
          name: Alarm Auto Clear
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Auto Clear Alarm is a readable and writable resource used to indicate if an alarm is automatically cleared once the delivery of the event data payload is complete
        - id: 6024
          name: Event Code
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 100..255
          units: ""
          description: Event Code is a read-only resource used as an identifier to represent this class of event. The allocation of event codes is implementation specific but ideally be unique across the implementation. Event Codes use vendor specific LogClass value 100...255
        - id: 6025
          name: Latest Payload
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: The Latest Eventlog Payload resource is a read-only serialised Opaque (Binary) representation of all the Event Data between the Last Delivered Event Time and the Latest Recorded Event Time. When this payload is delivered to the LwM2M server, via either a read request or a confirmed observation on this Object, Object Instance or Resource, the Latest Delivered Interval should be updated. When no new data exists, an empty Opaque value should be provided.The payload data can be provided in an implementation specific serialisation, but by default for fixed length values should use the OMA-LwM2M CBOR format encoded with one of these schemes:-Event Type = Alarm Current State (1)In this mode, only the current alarm state should be reported1. 8-bit integer, value 2 representing OMA-LwM2M CBOR format.2. Event Code [16-bit integer]3. Event Type [8-bit Integer] - Alarm Current State (1)4. Alarm Timestamp [32-bit unsigned integer] representing the number of seconds since Jan 1st, 1970 in the UTC time zone.5. Alarm State [8-bit Integer]
- Name: Water Network Leak Alarm
  Description1: All meters must support the following default configuration. This alarm will be based on the frequency output of the vibration sensor/accelerometer on the SEW Daughter board. When a frequency is identified that has the characteristics of an upstream network leak, and its amplitude is above the defined threshold, the meter will report this as a network leak alarm.
  Description2: ""
  ObjectID: 10280
  ObjectURN: urn:oma:lwm2m:x:10280
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 6011
          name: Event Type
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Event Type is a readable and writable resource used to represent how this event will behave. Event Type should be one of the following values:-0. Disabled1. Alarm Current State2. Alarm State Change Log3. Event LogWhen the Event Type is set to Disabled (0), this event will not be recorded by the device. No Latest Eventlog payload should be delivered for events that are Disabled.When the Event Type is set to Alarm Current State (1), this Event is treated as an alarm state manager and the Latest Eventlog Payload will only contain the current state of this alarm.When the Event Type is set to Alarm State Change Log (2), the Event is treated as an alarm that reports whenever the Alarm is either set or cleared. The Latest Eventlog Payload will contain all alarm transitions since the previous delivery in this mode.When the Event Type is set to Event Log (3), this object instance is treated as a raw event log. It is used to manage and deliver events. The Latest Eventlog Payload will contain all events since the previous delivery in this mode.See the Event Log Payload for examples of each of these modes.
        - id: 6012
          name: Alarm Realtime
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Realtime is a readable and writable resource used to indicate if an event should report immediately (1) at the point of occurrence, or delivered periodically as part of the Latest Eventlog Payload.
        - id: 6013
          name: Alarm State
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Alarm State is a read-only resource used to indicate the current alarm state for this Event configuration. This is only applicable if the Event Type is Alarm Current State (1) or Alarm State Change (2).
        - id: 6014
          name: Alarm Set Threshold
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Set Threshold is a readable and writable resource used to represent the threshold for when an alarm is triggered. This resource is used in conjunction with the Set Operator resource.
        - id: 6015
          name: Alarm Set Operator
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Set Operator is a readable and writable resource used in conjunction with the Set Threshold to represent when an alarm is triggered. This resource should be set to one of the following values:-0. Greater Than or Equal to1. Less Than or Equal to By setting the Set Operator to Greater Than (0), when the measured value for this event exceeds the Set Threshold resource, the event is considered to be in an Alarm State of 1By setting the Set Operator to Less Than (1), when the measured value for this event falls below the Set Threshold resource, the event is considered to be in an Alarm State of 1
        - id: 6016
          name: Alarm Clear Threshold
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Clear Threshold is a readable and writable resource used to represent the threshold for when an alarm is cleared. This resource is used in conjunction with the Clear Operator resource.
        - id: 6017
          name: Alarm Clear Operator
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Clear Operator is a readable and writable resource used in conjunction with the Clear Threshold to represent when an alarm is Cleared. This resource should be set to one of the following values:-0. Greater Than or Equal to1. Less Than or Equal toBy setting the Clear Operator to Greater Than (0), when the measured value for this event exceeds the Clear Threshold resource, the event is considered to be in an Alarm State of 0By setting the Clear Operator to Less Than (1), when the measured value for this event falls below the Clear Threshold resource, the event is considered to be in an Alarm State of 0
        - id: 6018
          name: Alarm Maximum Event Count
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Maximum Event Count is a readable and writable resource used provide a ceiling on the number of events that can be raised within the time period defined in Maximum Event Period resource. If no Maximum Event Count is set, the number of events recorded is unconstrained. The intent of this resource is to control the number of events reported, particularly in the case of a faulty sensor.
        - id: 6019
          name: Alarm Maximum Event Period
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 1..864000
          units: s
          description: Maximum Event Period is a readable and writable resource used in conjunction with the Maximum Event Count resource to control the number of events that can be raised in a given period. Maximum Event Period is an integer value representing the number of seconds for which the Maximum Event Count is measured. If no Maximum Event Period is set, the number of events recorded is unconstrained. The intent of this resource is to control the number of events reported, particularly in the case of a faulty sensor.
        - id: 6020
          name: Latest Delivered Event Time
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: Latest Delivered Event Time is a readable and writable resource to represent the last recorded time that an event was delivered for this event code to the LwM2M server. The setting of this resource is implementation specific but should be updated based on, either a Read request of the Latest Eventlog Payload from the LwM2M server or via a confirmed delivery of Notify operation of the Latest Eventlog Payload resource. This resource is writable to allow the server to adjust the Last Delivered Event Time value if the server and client is out of sync.
        - id: 6021
          name: Latest Recorded Event Time
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Time
          rangeenumeration: ""
          units: ""
          description: Latest Recorded Event Time is a readonly resource used to represent the last recorded event time for this object instance on the device
        - id: 6022
          name: Alarm Clear
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Clear Alarm is an executable resource used to allow the LwM2M server to clear alarms when they need to be manually acknowledged.
        - id: 6023
          name: Alarm Auto Clear
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Auto Clear Alarm is a readable and writable resource used to indicate if an alarm is automatically cleared once the delivery of the event data payload is complete
        - id: 6024
          name: Event Code
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 100..255
          units: ""
          description: Event Code is a read-only resource used as an identifier to represent this class of event. The allocation of event codes is implementation specific but ideally be unique across the implementation. Event Codes use vendor specific LogClass value 100...255
        - id: 6025
          name: Latest Payload
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: The Latest Eventlog Payload resource is a read-only serialised Opaque (Binary) representation of all the Event Data between the Last Delivered Event Time and the Latest Recorded Event Time. When this payload is delivered to the LwM2M server, via either a read request or a confirmed observation on this Object, Object Instance or Resource, the Latest Delivered Interval should be updated. When no new data exists, an empty Opaque value should be provided.The payload data can be provided in an implementation specific serialisation, but by default for fixed length values should use the OMA-LwM2M CBOR format encoded with one of these schemes:-Event Type = Alarm Current State (1)In this mode, only the current alarm state should be reported1. 8-bit integer, value 2 representing OMA-LwM2M CBOR format.2. Event Code [16-bit integer]3. Event Type [8-bit Integer] - Alarm Current State (1)4. Alarm Timestamp [32-bit unsigned integer] representing the number of seconds since Jan 1st, 1970 in the UTC time zone.5. Alarm State [8-bit Integer]
- Name: Low Battery Alarm
  Description1: This Alarm is raised when the battery voltage drops below a defined level
  Description2: ""
  ObjectID: 10281
  ObjectURN: urn:oma:lwm2m:x:10281
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 6011
          name: Event Type
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Event Type is a readable and writable resource used to represent how this event will behave. Event Type should be one of the following values:-0. Disabled1. Alarm Current State2. Alarm State Change Log3. Event LogWhen the Event Type is set to Disabled (0), this event will not be recorded by the device. No Latest Eventlog payload should be delivered for events that are Disabled.When the Event Type is set to Alarm Current State (1), this Event is treated as an alarm state manager and the Latest Eventlog Payload will only contain the current state of this alarm.When the Event Type is set to Alarm State Change Log (2), the Event is treated as an alarm that reports whenever the Alarm is either set or cleared. The Latest Eventlog Payload will contain all alarm transitions since the previous delivery in this mode.When the Event Type is set to Event Log (3), this object instance is treated as a raw event log. It is used to manage and deliver events. The Latest Eventlog Payload will contain all events since the previous delivery in this mode.See the Event Log Payload for examples of each of these modes.
        - id: 6012
          name: Alarm Realtime
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Realtime is a readable and writable resource used to indicate if an event should report immediately (1) at the point of occurrence, or delivered periodically as part of the Latest Eventlog Payload.
        - id: 6013
          name: Alarm State
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Alarm State is a read-only resource used to indicate the current alarm state for this Event configuration. This is only applicable if the Event Type is Alarm Current State (1) or Alarm State Change (2).
        - id: 6014
          name: Alarm Set Threshold
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Set Threshold is a readable and writable resource used to represent the threshold for when an alarm is triggered. This resource is used in conjunction with the Set Operator resource.
        - id: 6015
          name: Alarm Set Operator
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Set Operator is a readable and writable resource used in conjunction with the Set Threshold to represent when an alarm is triggered. This resource should be set to one of the following values:-0. Greater Than or Equal to1. Less Than or Equal to By setting the Set Operator to Greater Than (0), when the measured value for this event exceeds the Set Threshold resource, the event is considered to be in an Alarm State of 1By setting the Set Operator to Less Than (1), when the measured value for this event falls below the Set Threshold resource, the event is considered to be in an Alarm State of 1
        - id: 6016
          name: Alarm Clear Threshold
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Clear Threshold is a readable and writable resource used to represent the threshold for when an alarm is cleared. This resource is used in conjunction with the Clear Operator resource.
        - id: 6017
          name: Alarm Clear Operator
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Clear Operator is a readable and writable resource used in conjunction with the Clear Threshold to represent when an alarm is Cleared. This resource should be set to one of the following values:-0. Greater Than or Equal to1. Less Than or Equal toBy setting the Clear Operator to Greater Than (0), when the measured value for this event exceeds the Clear Threshold resource, the event is considered to be in an Alarm State of 0By setting the Clear Operator to Less Than (1), when the measured value for this event falls below the Clear Threshold resource, the event is considered to be in an Alarm State of 0
        - id: 6018
          name: Alarm Maximum Event Count
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Maximum Event Count is a readable and writable resource used provide a ceiling on the number of events that can be raised within the time period defined in Maximum Event Period resource. If no Maximum Event Count is set, the number of events recorded is unconstrained. The intent of this resource is to control the number of events reported, particularly in the case of a faulty sensor.
        - id: 6019
          name: Alarm Maximum Event Period
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 1..864000
          units: s
          description: Maximum Event Period is a readable and writable resource used in conjunction with the Maximum Event Count resource to control the number of events that can be raised in a given period. Maximum Event Period is an integer value representing the number of seconds for which the Maximum Event Count is measured. If no Maximum Event Period is set, the number of events recorded is unconstrained. The intent of this resource is to control the number of events reported, particularly in the case of a faulty sensor.
        - id: 6020
          name: Latest Delivered Event Time
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: Latest Delivered Event Time is a readable and writable resource to represent the last recorded time that an event was delivered for this event code to the LwM2M server. The setting of this resource is implementation specific but should be updated based on, either a Read request of the Latest Eventlog Payload from the LwM2M server or via a confirmed delivery of Notify operation of the Latest Eventlog Payload resource. This resource is writable to allow the server to adjust the Last Delivered Event Time value if the server and client is out of sync.
        - id: 6021
          name: Latest Recorded Event Time
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Time
          rangeenumeration: ""
          units: ""
          description: Latest Recorded Event Time is a readonly resource used to represent the last recorded event time for this object instance on the device
        - id: 6022
          name: Alarm Clear
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Clear Alarm is an executable resource used to allow the LwM2M server to clear alarms when they need to be manually acknowledged.
        - id: 6023
          name: Alarm Auto Clear
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Auto Clear Alarm is a readable and writable resource used to indicate if an alarm is automatically cleared once the delivery of the event data payload is complete
        - id: 6024
          name: Event Code
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 100..255
          units: ""
          description: Event Code is a read-only resource used as an identifier to represent this class of event. The allocation of event codes is implementation specific but ideally be unique across the implementation. Event Codes use vendor specific LogClass value 100...255
        - id: 6025
          name: Latest Payload
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: The Latest Eventlog Payload resource is a read-only serialised Opaque (Binary) representation of all the Event Data between the Last Delivered Event Time and the Latest Recorded Event Time. When this payload is delivered to the LwM2M server, via either a read request or a confirmed observation on this Object, Object Instance or Resource, the Latest Delivered Interval should be updated. When no new data exists, an empty Opaque value should be provided.The payload data can be provided in an implementation specific serialisation, but by default for fixed length values should use the OMA-LwM2M CBOR format encoded with one of these schemes:-Event Type = Alarm Current State (1)In this mode, only the current alarm state should be reported1. 8-bit integer, value 2 representing OMA-LwM2M CBOR format.2. Event Code [16-bit integer]3. Event Type [8-bit Integer] - Alarm Current State (1)4. Alarm Timestamp [32-bit unsigned integer] representing the number of seconds since Jan 1st, 1970 in the UTC time zone.5. Alarm State [8-bit Integer]
- Name: Daughter Board Failure Alarm
  Description1: This binary status should indicate that the meter MCU can no longer communicate with a daughter board
  Description2: ""
  ObjectID: 10282
  ObjectURN: urn:oma:lwm2m:x:10282
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 6011
          name: Event Type
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Event Type is a readable and writable resource used to represent how this event will behave. Event Type should be one of the following values:-0. Disabled1. Alarm Current State2. Alarm State Change Log3. Event LogWhen the Event Type is set to Disabled (0), this event will not be recorded by the device. No Latest Eventlog payload should be delivered for events that are Disabled.When the Event Type is set to Alarm Current State (1), this Event is treated as an alarm state manager and the Latest Eventlog Payload will only contain the current state of this alarm.When the Event Type is set to Alarm State Change Log (2), the Event is treated as an alarm that reports whenever the Alarm is either set or cleared. The Latest Eventlog Payload will contain all alarm transitions since the previous delivery in this mode.When the Event Type is set to Event Log (3), this object instance is treated as a raw event log. It is used to manage and deliver events. The Latest Eventlog Payload will contain all events since the previous delivery in this mode.See the Event Log Payload for examples of each of these modes.
        - id: 6012
          name: Alarm Realtime
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Realtime is a readable and writable resource used to indicate if an event should report immediately (1) at the point of occurrence, or delivered periodically as part of the Latest Eventlog Payload.
        - id: 6013
          name: Alarm State
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Alarm State is a read-only resource used to indicate the current alarm state for this Event configuration. This is only applicable if the Event Type is Alarm Current State (1) or Alarm State Change (2).
        - id: 6014
          name: Alarm Set Threshold
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Set Threshold is a readable and writable resource used to represent the threshold for when an alarm is triggered. This resource is used in conjunction with the Set Operator resource.
        - id: 6015
          name: Alarm Set Operator
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Set Operator is a readable and writable resource used in conjunction with the Set Threshold to represent when an alarm is triggered. This resource should be set to one of the following values:-0. Greater Than or Equal to1. Less Than or Equal to By setting the Set Operator to Greater Than (0), when the measured value for this event exceeds the Set Threshold resource, the event is considered to be in an Alarm State of 1By setting the Set Operator to Less Than (1), when the measured value for this event falls below the Set Threshold resource, the event is considered to be in an Alarm State of 1
        - id: 6016
          name: Alarm Clear Threshold
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Clear Threshold is a readable and writable resource used to represent the threshold for when an alarm is cleared. This resource is used in conjunction with the Clear Operator resource.
        - id: 6017
          name: Alarm Clear Operator
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Clear Operator is a readable and writable resource used in conjunction with the Clear Threshold to represent when an alarm is Cleared. This resource should be set to one of the following values:-0. Greater Than or Equal to1. Less Than or Equal toBy setting the Clear Operator to Greater Than (0), when the measured value for this event exceeds the Clear Threshold resource, the event is considered to be in an Alarm State of 0By setting the Clear Operator to Less Than (1), when the measured value for this event falls below the Clear Threshold resource, the event is considered to be in an Alarm State of 0
        - id: 6018
          name: Alarm Maximum Event Count
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Maximum Event Count is a readable and writable resource used provide a ceiling on the number of events that can be raised within the time period defined in Maximum Event Period resource. If no Maximum Event Count is set, the number of events recorded is unconstrained. The intent of this resource is to control the number of events reported, particularly in the case of a faulty sensor.
        - id: 6019
          name: Alarm Maximum Event Period
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 1..864000
          units: s
          description: Maximum Event Period is a readable and writable resource used in conjunction with the Maximum Event Count resource to control the number of events that can be raised in a given period. Maximum Event Period is an integer value representing the number of seconds for which the Maximum Event Count is measured. If no Maximum Event Period is set, the number of events recorded is unconstrained. The intent of this resource is to control the number of events reported, particularly in the case of a faulty sensor.
        - id: 6020
          name: Latest Delivered Event Time
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: Latest Delivered Event Time is a readable and writable resource to represent the last recorded time that an event was delivered for this event code to the LwM2M server. The setting of this resource is implementation specific but should be updated based on, either a Read request of the Latest Eventlog Payload from the LwM2M server or via a confirmed delivery of Notify operation of the Latest Eventlog Payload resource. This resource is writable to allow the server to adjust the Last Delivered Event Time value if the server and client is out of sync.
        - id: 6021
          name: Latest Recorded Event Time
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Time
          rangeenumeration: ""
          units: ""
          description: Latest Recorded Event Time is a readonly resource used to represent the last recorded event time for this object instance on the device
        - id: 6022
          name: Alarm Clear
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Clear Alarm is an executable resource used to allow the LwM2M server to clear alarms when they need to be manually acknowledged.
        - id: 6023
          name: Alarm Auto Clear
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Auto Clear Alarm is a readable and writable resource used to indicate if an alarm is automatically cleared once the delivery of the event data payload is complete
        - id: 6024
          name: Event Code
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 100..255
          units: ""
          description: Event Code is a read-only resource used as an identifier to represent this class of event. The allocation of event codes is implementation specific but ideally be unique across the implementation. Event Codes use vendor specific LogClass value 100...255
        - id: 6025
          name: Latest Payload
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: The Latest Eventlog Payload resource is a read-only serialised Opaque (Binary) representation of all the Event Data between the Last Delivered Event Time and the Latest Recorded Event Time. When this payload is delivered to the LwM2M server, via either a read request or a confirmed observation on this Object, Object Instance or Resource, the Latest Delivered Interval should be updated. When no new data exists, an empty Opaque value should be provided.The payload data can be provided in an implementation specific serialisation, but by default for fixed length values should use the OMA-LwM2M CBOR format encoded with one of these schemes:-Event Type = Alarm Current State (1)In this mode, only the current alarm state should be reported1. 8-bit integer, value 2 representing OMA-LwM2M CBOR format.2. Event Code [16-bit integer]3. Event Type [8-bit Integer] - Alarm Current State (1)4. Alarm Timestamp [32-bit unsigned integer] representing the number of seconds since Jan 1st, 1970 in the UTC time zone.5. Alarm State [8-bit Integer]
- Name: Device Reboot Event
  Description1: This binary status should indicate that the meter MCU can no longer communicate with a daughter board
  Description2: ""
  ObjectID: 10283
  ObjectURN: urn:oma:lwm2m:x:10283
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 6011
          name: Event Type
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Event Type is a readable and writable resource used to represent how this event will behave. Event Type should be one of the following values:-0. Disabled1. Alarm Current State2. Alarm State Change Log3. Event LogWhen the Event Type is set to Disabled (0), this event will not be recorded by the device. No Latest Eventlog payload should be delivered for events that are Disabled.When the Event Type is set to Alarm Current State (1), this Event is treated as an alarm state manager and the Latest Eventlog Payload will only contain the current state of this alarm.When the Event Type is set to Alarm State Change Log (2), the Event is treated as an alarm that reports whenever the Alarm is either set or cleared. The Latest Eventlog Payload will contain all alarm transitions since the previous delivery in this mode.When the Event Type is set to Event Log (3), this object instance is treated as a raw event log. It is used to manage and deliver events. The Latest Eventlog Payload will contain all events since the previous delivery in this mode.See the Event Log Payload for examples of each of these modes.
        - id: 6012
          name: Alarm Realtime
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Realtime is a readable and writable resource used to indicate if an event should report immediately (1) at the point of occurrence, or delivered periodically as part of the Latest Eventlog Payload.
        - id: 6013
          name: Alarm State
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Alarm State is a read-only resource used to indicate the current alarm state for this Event configuration. This is only applicable if the Event Type is Alarm Current State (1) or Alarm State Change (2).
        - id: 6014
          name: Alarm Set Threshold
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Set Threshold is a readable and writable resource used to represent the threshold for when an alarm is triggered. This resource is used in conjunction with the Set Operator resource.
        - id: 6015
          name: Alarm Set Operator
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Set Operator is a readable and writable resource used in conjunction with the Set Threshold to represent when an alarm is triggered. This resource should be set to one of the following values:-0. Greater Than or Equal to1. Less Than or Equal to By setting the Set Operator to Greater Than (0), when the measured value for this event exceeds the Set Threshold resource, the event is considered to be in an Alarm State of 1By setting the Set Operator to Less Than (1), when the measured value for this event falls below the Set Threshold resource, the event is considered to be in an Alarm State of 1
        - id: 6016
          name: Alarm Clear Threshold
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Clear Threshold is a readable and writable resource used to represent the threshold for when an alarm is cleared. This resource is used in conjunction with the Clear Operator resource.
        - id: 6017
          name: Alarm Clear Operator
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Clear Operator is a readable and writable resource used in conjunction with the Clear Threshold to represent when an alarm is Cleared. This resource should be set to one of the following values:-0. Greater Than or Equal to1. Less Than or Equal toBy setting the Clear Operator to Greater Than (0), when the measured value for this event exceeds the Clear Threshold resource, the event is considered to be in an Alarm State of 0By setting the Clear Operator to Less Than (1), when the measured value for this event falls below the Clear Threshold resource, the event is considered to be in an Alarm State of 0
        - id: 6018
          name: Alarm Maximum Event Count
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Maximum Event Count is a readable and writable resource used provide a ceiling on the number of events that can be raised within the time period defined in Maximum Event Period resource. If no Maximum Event Count is set, the number of events recorded is unconstrained. The intent of this resource is to control the number of events reported, particularly in the case of a faulty sensor.
        - id: 6019
          name: Alarm Maximum Event Period
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 1..864000
          units: s
          description: Maximum Event Period is a readable and writable resource used in conjunction with the Maximum Event Count resource to control the number of events that can be raised in a given period. Maximum Event Period is an integer value representing the number of seconds for which the Maximum Event Count is measured. If no Maximum Event Period is set, the number of events recorded is unconstrained. The intent of this resource is to control the number of events reported, particularly in the case of a faulty sensor.
        - id: 6020
          name: Latest Delivered Event Time
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: Latest Delivered Event Time is a readable and writable resource to represent the last recorded time that an event was delivered for this event code to the LwM2M server. The setting of this resource is implementation specific but should be updated based on, either a Read request of the Latest Eventlog Payload from the LwM2M server or via a confirmed delivery of Notify operation of the Latest Eventlog Payload resource. This resource is writable to allow the server to adjust the Last Delivered Event Time value if the server and client is out of sync.
        - id: 6021
          name: Latest Recorded Event Time
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Time
          rangeenumeration: ""
          units: ""
          description: Latest Recorded Event Time is a readonly resource used to represent the last recorded event time for this object instance on the device
        - id: 6022
          name: Alarm Clear
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Clear Alarm is an executable resource used to allow the LwM2M server to clear alarms when they need to be manually acknowledged.
        - id: 6023
          name: Alarm Auto Clear
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Auto Clear Alarm is a readable and writable resource used to indicate if an alarm is automatically cleared once the delivery of the event data payload is complete
        - id: 6024
          name: Event Code
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 100..255
          units: ""
          description: Event Code is a read-only resource used as an identifier to represent this class of event. The allocation of event codes is implementation specific but ideally be unique across the implementation. Event Codes use vendor specific LogClass value 100...255
        - id: 6025
          name: Latest Payload
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: The Latest Eventlog Payload resource is a read-only serialised Opaque (Binary) representation of all the Event Data between the Last Delivered Event Time and the Latest Recorded Event Time. When this payload is delivered to the LwM2M server, via either a read request or a confirmed observation on this Object, Object Instance or Resource, the Latest Delivered Interval should be updated. When no new data exists, an empty Opaque value should be provided.The payload data can be provided in an implementation specific serialisation, but by default for fixed length values should use the OMA-LwM2M CBOR format encoded with one of these schemes:-Event Type = Alarm Current State (1)In this mode, only the current alarm state should be reported1. 8-bit integer, value 2 representing OMA-LwM2M CBOR format.2. Event Code [16-bit integer]3. Event Type [8-bit Integer] - Alarm Current State (1)4. Alarm Timestamp [32-bit unsigned integer] representing the number of seconds since Jan 1st, 1970 in the UTC time zone.5. Alarm State [8-bit Integer]
- Name: Time Synchronisation Event
  Description1: This event records the fact that the device has rebooted
  Description2: ""
  ObjectID: 10284
  ObjectURN: urn:oma:lwm2m:x:10284
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 6011
          name: Event Type
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Event Type is a readable and writable resource used to represent how this event will behave. Event Type should be one of the following values:-0. Disabled1. Alarm Current State2. Alarm State Change Log3. Event LogWhen the Event Type is set to Disabled (0), this event will not be recorded by the device. No Latest Eventlog payload should be delivered for events that are Disabled.When the Event Type is set to Alarm Current State (1), this Event is treated as an alarm state manager and the Latest Eventlog Payload will only contain the current state of this alarm.When the Event Type is set to Alarm State Change Log (2), the Event is treated as an alarm that reports whenever the Alarm is either set or cleared. The Latest Eventlog Payload will contain all alarm transitions since the previous delivery in this mode.When the Event Type is set to Event Log (3), this object instance is treated as a raw event log. It is used to manage and deliver events. The Latest Eventlog Payload will contain all events since the previous delivery in this mode.See the Event Log Payload for examples of each of these modes.
        - id: 6012
          name: Alarm Realtime
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Realtime is a readable and writable resource used to indicate if an event should report immediately (1) at the point of occurrence, or delivered periodically as part of the Latest Eventlog Payload.
        - id: 6013
          name: Alarm State
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Alarm State is a read-only resource used to indicate the current alarm state for this Event configuration. This is only applicable if the Event Type is Alarm Current State (1) or Alarm State Change (2).
        - id: 6014
          name: Alarm Set Threshold
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Set Threshold is a readable and writable resource used to represent the threshold for when an alarm is triggered. This resource is used in conjunction with the Set Operator resource.
        - id: 6015
          name: Alarm Set Operator
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Set Operator is a readable and writable resource used in conjunction with the Set Threshold to represent when an alarm is triggered. This resource should be set to one of the following values:-0. Greater Than or Equal to1. Less Than or Equal to By setting the Set Operator to Greater Than (0), when the measured value for this event exceeds the Set Threshold resource, the event is considered to be in an Alarm State of 1By setting the Set Operator to Less Than (1), when the measured value for this event falls below the Set Threshold resource, the event is considered to be in an Alarm State of 1
        - id: 6016
          name: Alarm Clear Threshold
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Clear Threshold is a readable and writable resource used to represent the threshold for when an alarm is cleared. This resource is used in conjunction with the Clear Operator resource.
        - id: 6017
          name: Alarm Clear Operator
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Clear Operator is a readable and writable resource used in conjunction with the Clear Threshold to represent when an alarm is Cleared. This resource should be set to one of the following values:-0. Greater Than or Equal to1. Less Than or Equal toBy setting the Clear Operator to Greater Than (0), when the measured value for this event exceeds the Clear Threshold resource, the event is considered to be in an Alarm State of 0By setting the Clear Operator to Less Than (1), when the measured value for this event falls below the Clear Threshold resource, the event is considered to be in an Alarm State of 0
        - id: 6018
          name: Alarm Maximum Event Count
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Maximum Event Count is a readable and writable resource used provide a ceiling on the number of events that can be raised within the time period defined in Maximum Event Period resource. If no Maximum Event Count is set, the number of events recorded is unconstrained. The intent of this resource is to control the number of events reported, particularly in the case of a faulty sensor.
        - id: 6019
          name: Alarm Maximum Event Period
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 1..864000
          units: s
          description: Maximum Event Period is a readable and writable resource used in conjunction with the Maximum Event Count resource to control the number of events that can be raised in a given period. Maximum Event Period is an integer value representing the number of seconds for which the Maximum Event Count is measured. If no Maximum Event Period is set, the number of events recorded is unconstrained. The intent of this resource is to control the number of events reported, particularly in the case of a faulty sensor.
        - id: 6020
          name: Latest Delivered Event Time
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: Latest Delivered Event Time is a readable and writable resource to represent the last recorded time that an event was delivered for this event code to the LwM2M server. The setting of this resource is implementation specific but should be updated based on, either a Read request of the Latest Eventlog Payload from the LwM2M server or via a confirmed delivery of Notify operation of the Latest Eventlog Payload resource. This resource is writable to allow the server to adjust the Last Delivered Event Time value if the server and client is out of sync.
        - id: 6021
          name: Latest Recorded Event Time
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Time
          rangeenumeration: ""
          units: ""
          description: Latest Recorded Event Time is a readonly resource used to represent the last recorded event time for this object instance on the device
        - id: 6022
          name: Alarm Clear
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Clear Alarm is an executable resource used to allow the LwM2M server to clear alarms when they need to be manually acknowledged.
        - id: 6023
          name: Alarm Auto Clear
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Auto Clear Alarm is a readable and writable resource used to indicate if an alarm is automatically cleared once the delivery of the event data payload is complete
        - id: 6024
          name: Event Code
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 100..255
          units: ""
          description: Event Code is a read-only resource used as an identifier to represent this class of event. The allocation of event codes is implementation specific but ideally be unique across the implementation. Event Codes use vendor specific LogClass value 100...255
        - id: 6025
          name: Latest Payload
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: The Latest Eventlog Payload resource is a read-only serialised Opaque (Binary) representation of all the Event Data between the Last Delivered Event Time and the Latest Recorded Event Time. When this payload is delivered to the LwM2M server, via either a read request or a confirmed observation on this Object, Object Instance or Resource, the Latest Delivered Interval should be updated. When no new data exists, an empty Opaque value should be provided.The payload data can be provided in an implementation specific serialisation, but by default for fixed length values should use the OMA-LwM2M CBOR format encoded with one of these schemes:-Event Type = Alarm Current State (1)In this mode, only the current alarm state should be reported1. 8-bit integer, value 2 representing OMA-LwM2M CBOR format.2. Event Code [16-bit integer]3. Event Type [8-bit Integer] - Alarm Current State (1)4. Alarm Timestamp [32-bit unsigned integer] representing the number of seconds since Jan 1st, 1970 in the UTC time zone.5. Alarm State [8-bit Integer]
- Name: App Fota Container
  Description1: ' This LWM2M Object is used to download the firmware package of a device''s application.'
  Description2: ""
  ObjectID: 10286
  ObjectURN: urn:oma:lwm2m:x:10286
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: UL data
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: Running firmware package information of a device's application,e.g. version of firmare package.
        - id: 1
          name: DL data
          operations: W
          multipleinstances: Single
          mandatory: Mandatory
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: Package URI and the data sequence of firmware package.
- Name: Voltage Logging
  Description1: Periodic voltage measurements that are logged into CBOR structure payload
  Description2: ""
  ObjectID: 10290
  ObjectURN: urn:oma:lwm2m:x:10290
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 6000
          name: Interval Period
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 1..864000
          units: s
          description: The Interval Period resource is an Integer value representing the width in seconds of the intervals being managed by this interval data object. This resource is read only and can only be changed by resource 11 (Change Interval Configuration). It is recommended that the Interval Period be set to a devisor of 24 hours (86400 seconds) to provide a consistent interval period. Examples of Interval Period include:- 30 = Every 30 seconds 600 = Every 10 minutes 1800 = Every 30 minutes 3600 = Hourly 7200 = Every 2 hours 14400 = Every 4 hours 43200 = Every 12 hours 86400 = Every Day 172600 = Every Second Day
        - id: 6001
          name: Interval Start Offset
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..86399
          units: s
          description: The Interval Start Offset resource is a read only resource representing the number of seconds past midnight for which the first interval is recorded. If this resource is empty, it is assumed that the intervals are midnight aligned. This can be used to adjust interval boundaries. As an example, an Interval Period of 3600 seconds and an Interval Start time of 300 represents hourly interval data, starting at 00:05.
        - id: 6002
          name: Interval UTC Offset
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The Interval UTC Offset resource is a read only resource representing the time zone offset for this Interval Data instance. If this resource is empty, the application should use the UTC offset provided in the Device [/3/0/14] object instance resource or UTC if not provided. UTC+X [ISO 8601].
        - id: 6003
          name: Interval Collection Start Time
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Time
          rangeenumeration: ""
          units: ""
          description: The Collection Start Time resource is a read only resource representing the time when the first interval was recorded on the device. Interval times represent the end of the interval, not the beginning. As an example, the first four hourly interval past midnight will have a timestamp of 04:00 (adjusting for UTC offset).
        - id: 6004
          name: Oldest Recorded Interval
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Time
          rangeenumeration: ""
          units: ""
          description: The Oldest Recorded Interval resource is a read-only resource representing the oldest available interval on the device. Interval times represent the end of the interval, not the beginning.
        - id: 6005
          name: Last Delivered Interval
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: The Last Delivered Interval is a readable and writable resource used to represent the last interval delivered to the LwM2M server. Interval times represent the end of the interval, not the beginning. The setting of this resource is implementation specific but should be updated based on, either a Read request of the Latest Payload from the LwM2M server or via a confirmed delivery of Notify operation of the Latest Payload resource. This resource is writable to allow the server to adjust the Last Delivered Interval value if the server and client is out of sync.
        - id: 6006
          name: Latest Recorded Interval
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Time
          rangeenumeration: ""
          units: ""
          description: The Latest Recorded Interval is a readable resource representing the currently highest recorded interval on the device. Interval times represent the end of the interval, not the beginning.
        - id: 6007
          name: Interval Delivery Midnight Aligned
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: The Delivery Midnight Aligned is a readable and writable resource used to indicate if data is delivered only to the previous midnight (1) or if part-day data can be delivered (0). Calculating Midnight should consider the Interval UTC Offset resource, or if empty, the Device [/3/0/14] object instance resource.
        - id: 6008
          name: Interval Historical Read
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: 'Historical Interval Read is an executable resource designed to retrieve ad-hoc interval read data. The resource takes two arguments:- Argument 0: First Interval time to Retrieve represented as number of seconds since Jan 1st, 1970 in the UTC time zone. Argument 1: Last interval time to Retrieve represented as number of seconds since Jan 1st, 1970 in the UTC time zone. The dates should be inclusive based on the end time of the interval. The data retrieved from this resource will be readable (or observable) from the Historical Read Payload Resource. As an example, the Argument List to retrieve data from Midnight 2nd March (UTC+10) to Midnight 6rd March (UTC+10) for a specific instance of the interval data object, would be constructed as follows:- 0=''1488463200'',1=''1488808800'''
        - id: 6009
          name: Interval Historical Read Payload
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: The Historical Read Payload resource is the representation of the data requested by the Historical Interval Read executable resource. The format of this Opaque value should be identical to the Latest Payload resource. If no Historical Interval Read has been executed, this resource should return and empty Opaque value. This resource can either be Read from the Server or set up as an observation and Notified to the server as soon as the historical data is available. When this payload is delivered to the LwM2M server, via either a read request or a confirmed observation on this Object, Object Instance or Resource, the Historical Read Payload should be set to an empty Opaque value.
        - id: 6010
          name: Interval Change Configuration
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: 'Change Interval Configuration is an executable resource designed to allow the Interval Period, Interval Start Offset and Interval UTC Offset to be reconfigured. The resource takes three arguments:- Argument 0: [Mandatory] Interval Period represented as an integer as defined in the Interval Period Resource. Argument 1: [Optional] Interval start offset represented as an integer as defined in the Interval Start Offset Resource. If not provided, leave the value as per the current configuration Argument 2: [Optional] Interval UTC offset represented as a String as defined in the Interval UTC Offset Resource. If not provided, leave the value as per the current configuration. Depending on the specifics of the implementation of this object, reconfiguring the Interval data object may result in the removal of all historical data for this Interval Data Object Instance. Please consult with your device vendor as to the implications of reconfiguring an Interval Data Object Instance. As an example, the Argument List to change an interval data object instance from its existing values to one hour intervals, midnight aligned in UTC+10 time zone:- 0=''3600'',1=''0'',1=''UTC+10'''
        - id: 6026
          name: Start
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Start is an executable resource that enables the recording of interval data. The first interval recorded will have a timestamp based on the Interval Start Offset resource. This executable resource takes no arguments. Refer to re-usable resource LogStart for further details.
        - id: 6027
          name: Stop
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Stop (LogStop) is an executable resource that disables the recording of interval data for this object instance. This executable resource takes no arguments. Refer to re-usable resource LogStop for further details.
        - id: 6028
          name: Status
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Recording Enabled is a read-only resource providing an indication of if interval data is currently being recorded for this object instance. Refer to re-usable resource LogStatus for further details.
        - id: 6029
          name: Latest Payload
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: 'The Latest Payload resource is a read-only serialised Opaque (Binary) representation of all the Interval Data between the Last Delivered Interval and the Latest Recorded Interval, accounting for the Delivery Midnight Aligned resource. When this payload is delivered to the LwM2M server, via either a read request or a confirmed observation on this Object, Object Instance or Resource, the Latest Delivered Interval should be updated. When no new data exists, an empty Opaque value should be provided. The payload data can be provided in an implementation specific serialisation, but by default for fixed length values should use the OMA-LwM2M CBOR format encoded as follows: 1. 8-bit integer, value 2 representing OMA-LwM2M CBOR format. 2. Interval Data Instance ID/ Class [16-bit integer] 3. Timestamp of first Interval [32-bit integer] representing the number of seconds since Jan 1st, 1970 in the UTC time zone. 4. Interval Period in seconds [32-bit integer] 5. Number of intervals in Payload [16-bit integer] 6. Number of Values Per Interval [8-bit integer] 7. Size of Value 1 in bits [8-bit integer] 8. Size of Value 2 in bits [8-bit integer] ... 9. Size of Value N in bits [8-bit integer] 10. Interval 1 Value 1 [x bits] 11. Interval 1 Value 2 [x bits] ... 12. Interval 1 Value N [x bits] ... 13. Interval N Value N [x bits] If for some implementation specific reason, there are missing intervals in the sequence, the payload may consist of multiple blocks of the above serialised data (appended into a single binary opaque value), each block representing a continuous series of interval data.'
- Name: Voltage Transient
  Description1: Object for sampling high frequency values (in this case Voltage readings) in order to aggregate them and summarize them (Avg, Max, Min) and to then time-stamp and log these aggregates for packaging and transmission to the server. This allows for efficient data transfer of high frequency data, without the need to send huge amounts of raw data over the air.
  Description2: ""
  ObjectID: 10291
  ObjectURN: urn:oma:lwm2m:x:10291
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 6000
          name: Interval Period
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 1..864000
          units: s
          description: The Interval Period resource is an Integer value representing the width in seconds of the intervals being managed by this interval data object. This resource is read only and can only be changed by resource 11 (Change Interval Configuration). It is recommended that the Interval Period be set to a devisor of 24 hours (86400 seconds) to provide a consistent interval period. Examples of Interval Period include:- 30 = Every 30 seconds 600 = Every 10 minutes 1800 = Every 30 minutes 3600 = Hourly 7200 = Every 2 hours 14400 = Every 4 hours 43200 = Every 12 hours 86400 = Every Day 172600 = Every Second Day
        - id: 6001
          name: Interval Start Offset
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..86399
          units: s
          description: The Interval Start Offset resource is a read only resource representing the number of seconds past midnight for which the first interval is recorded. If this resource is empty, it is assumed that the intervals are midnight aligned. This can be used to adjust interval boundaries. As an example, an Interval Period of 3600 seconds and an Interval Start time of 300 represents hourly interval data, starting at 00:05.
        - id: 6002
          name: Interval UTC Offset
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The Interval UTC Offset resource is a read only resource representing the time zone offset for this Interval Data instance. If this resource is empty, the application should use the UTC offset provided in the Device [/3/0/14] object instance resource or UTC if not provided. UTC+X [ISO 8601].
        - id: 6003
          name: Interval Collection Start Time
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Time
          rangeenumeration: ""
          units: ""
          description: The Collection Start Time resource is a read only resource representing the time when the first interval was recorded on the device. Interval times represent the end of the interval, not the beginning. As an example, the first four hourly interval past midnight will have a timestamp of 04:00 (adjusting for UTC offset).
        - id: 6004
          name: Oldest Recorded Interval
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Time
          rangeenumeration: ""
          units: ""
          description: The Oldest Recorded Interval resource is a read-only resource representing the oldest available interval on the device. Interval times represent the end of the interval, not the beginning.
        - id: 6005
          name: Last Delivered Interval
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Time
          rangeenumeration: ""
          units: ""
          description: The Last Delivered Interval is a readable and writable resource used to represent the last interval delivered to the LwM2M server. Interval times represent the end of the interval, not the beginning. The setting of this resource is implementation specific but should be updated based on, either a Read request of the Latest Payload from the LwM2M server or via a confirmed delivery of Notify operation of the Latest Payload resource. This resource is writable to allow the server to adjust the Last Delivered Interval value if the server and client is out of sync.
        - id: 6006
          name: Latest Recorded Interval
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Time
          rangeenumeration: ""
          units: ""
          description: The Latest Recorded Interval is a readable resource representing the currently highest recorded interval on the device. Interval times represent the end of the interval, not the beginning.
        - id: 6007
          name: Interval Delivery Midnight Aligned
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: The Delivery Midnight Aligned is a readable and writable resource used to indicate if data is delivered only to the previous midnight (1) or if part-day data can be delivered (0). Calculating Midnight should consider the Interval UTC Offset resource, or if empty, the Device [/3/0/14] object instance resource.
        - id: 6008
          name: Interval Historical Read
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: 'Historical Interval Read is an executable resource designed to retrieve ad-hoc interval read data. The resource takes two arguments:- Argument 0: First Interval time to Retrieve represented as number of seconds since Jan 1st, 1970 in the UTC time zone. Argument 1: Last interval time to Retrieve represented as number of seconds since Jan 1st, 1970 in the UTC time zone. The dates should be inclusive based on the end time of the interval. The data retrieved from this resource will be readable (or observable) from the Historical Read Payload Resource. As an example, the Argument List to retrieve data from Midnight 2nd March (UTC+10) to Midnight 6rd March (UTC+10) for a specific instance of the interval data object, would be constructed as follows:- 0=''1488463200'',1=''1488808800'''
        - id: 6009
          name: Interval Historical Read Payload
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: The Historical Read Payload resource is the representation of the data requested by the Historical Interval Read executable resource. The format of this Opaque value should be identical to the Latest Payload resource. If no Historical Interval Read has been executed, this resource should return and empty Opaque value. This resource can either be Read from the Server or set up as an observation and Notified to the server as soon as the historical data is available. When this payload is delivered to the LwM2M server, via either a read request or a confirmed observation on this Object, Object Instance or Resource, the Historical Read Payload should be set to an empty Opaque value.
        - id: 6010
          name: Interval Change Configuration
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: 'Change Interval Configuration is an executable resource designed to allow the Interval Period, Interval Start Offset and Interval UTC Offset to be reconfigured. The resource takes three arguments:- Argument 0: [Mandatory] Interval Period represented as an integer as defined in the Interval Period Resource. Argument 1: [Optional] Interval start offset represented as an integer as defined in the Interval Start Offset Resource. If not provided, leave the value as per the current configuration Argument 2: [Optional] Interval UTC offset represented as a String as defined in the Interval UTC Offset Resource. If not provided, leave the value as per the current configuration. Depending on the specifics of the implementation of this object, reconfiguring the Interval data object may result in the removal of all historical data for this Interval Data Object Instance. Please consult with your device vendor as to the implications of reconfiguring an Interval Data Object Instance. As an example, the Argument List to change an interval data object instance from its existing values to one hour intervals, midnight aligned in UTC+10 time zone:- 0=''3600'',1=''0'',1=''UTC+10'''
        - id: 6026
          name: Start
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Start is an executable resource that enables the recording of interval data. The first interval recorded will have a timestamp based on the Interval Start Offset resource. This executable resource takes no arguments. Refer to re-usable resource LogStart for further details.
        - id: 6027
          name: Stop
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Stop (LogStop) is an executable resource that disables the recording of interval data for this object instance. This executable resource takes no arguments. Refer to re-usable resource LogStop for further details.
        - id: 6028
          name: Status
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Recording Enabled is a read-only resource providing an indication of if interval data is currently being recorded for this object instance. Refer to re-usable resource LogStatus for further details.
        - id: 6029
          name: Latest Payload
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: 'The Latest Payload resource is a read-only serialised Opaque (Binary) representation of all the Interval Data between the Last Delivered Interval and the Latest Recorded Interval, accounting for the Delivery Midnight Aligned resource. When this payload is delivered to the LwM2M server, via either a read request or a confirmed observation on this Object, Object Instance or Resource, the Latest Delivered Interval should be updated. When no new data exists, an empty Opaque value should be provided. The payload data can be provided in an implementation specific serialisation, but by default for fixed length values should use the OMA-LwM2M CBOR format encoded as follows: 1. 8-bit integer, value 2 representing OMA-LwM2M CBOR format. 2. Interval Data Instance ID/ Class [16-bit integer] 3. Timestamp of first Interval [32-bit integer] representing the number of seconds since Jan 1st, 1970 in the UTC time zone. 4. Interval Period in seconds [32-bit integer] 5. Number of intervals in Payload [16-bit integer] 6. Number of Values Per Interval [8-bit integer] 7. Size of Value 1 in bits [8-bit integer] 8. Size of Value 2 in bits [8-bit integer] ... 9. Size of Value N in bits [8-bit integer] 10. Interval 1 Value 1 [x bits] 11. Interval 1 Value 2 [x bits] ... 12. Interval 1 Value N [x bits] ... 13. Interval N Value N [x bits] If for some implementation specific reason, there are missing intervals in the sequence, the payload may consist of multiple blocks of the above serialised data (appended into a single binary opaque value), each block representing a continuous series of interval data.'
        - id: 6040
          name: Sample Frequency
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: 0.0..86400.0
          units: s
          description: How often the inputs are read/sampled.This value can be changed by doing a write command
- Name: Pressure Transient
  Description1: Object for measuring high frequency pressure readings and summarizing/logging them at defined intervals. This way, the raw data does not need to be sent over the air, and instead just the Average , Maximum and Minimum values for the interval
  Description2: ""
  ObjectID: 10292
  ObjectURN: urn:oma:lwm2m:x:10292
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 6000
          name: Interval Period
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 1..864000
          units: s
          description: The Interval Period resource is an Integer value representing the width in seconds of the intervals being managed by this interval data object. This resource is read only and can only be changed by resource 11 (Change Interval Configuration). It is recommended that the Interval Period be set to a devisor of 24 hours (86400 seconds) to provide a consistent interval period. Examples of Interval Period include:- 30 = Every 30 seconds 600 = Every 10 minutes 1800 = Every 30 minutes 3600 = Hourly 7200 = Every 2 hours 14400 = Every 4 hours 43200 = Every 12 hours 86400 = Every Day 172600 = Every Second Day
        - id: 6001
          name: Interval Start Offset
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..86399
          units: s
          description: The Interval Start Offset resource is a read only resource representing the number of seconds past midnight for which the first interval is recorded. If this resource is empty, it is assumed that the intervals are midnight aligned. This can be used to adjust interval boundaries. As an example, an Interval Period of 3600 seconds and an Interval Start time of 300 represents hourly interval data, starting at 00:05.
        - id: 6002
          name: Interval UTC Offset
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The Interval UTC Offset resource is a read only resource representing the time zone offset for this Interval Data instance. If this resource is empty, the application should use the UTC offset provided in the Device [/3/0/14] object instance resource or UTC if not provided. UTC+X [ISO 8601].
        - id: 6003
          name: Interval Collection Start Time
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Time
          rangeenumeration: ""
          units: ""
          description: The Collection Start Time resource is a read only resource representing the time when the first interval was recorded on the device. Interval times represent the end of the interval, not the beginning. As an example, the first four hourly interval past midnight will have a timestamp of 04:00 (adjusting for UTC offset).
        - id: 6004
          name: Oldest Recorded Interval
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Time
          rangeenumeration: ""
          units: ""
          description: The Oldest Recorded Interval resource is a read-only resource representing the oldest available interval on the device. Interval times represent the end of the interval, not the beginning.
        - id: 6005
          name: Last Delivered Interval
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Time
          rangeenumeration: ""
          units: ""
          description: The Last Delivered Interval is a readable and writable resource used to represent the last interval delivered to the LwM2M server. Interval times represent the end of the interval, not the beginning. The setting of this resource is implementation specific but should be updated based on, either a Read request of the Latest Payload from the LwM2M server or via a confirmed delivery of Notify operation of the Latest Payload resource. This resource is writable to allow the server to adjust the Last Delivered Interval value if the server and client is out of sync.
        - id: 6006
          name: Latest Recorded Interval
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Time
          rangeenumeration: ""
          units: ""
          description: The Latest Recorded Interval is a readable resource representing the currently highest recorded interval on the device. Interval times represent the end of the interval, not the beginning.
        - id: 6007
          name: Interval Delivery Midnight Aligned
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: The Delivery Midnight Aligned is a readable and writable resource used to indicate if data is delivered only to the previous midnight (1) or if part-day data can be delivered (0). Calculating Midnight should consider the Interval UTC Offset resource, or if empty, the Device [/3/0/14] object instance resource.
        - id: 6008
          name: Interval Historical Read
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: 'Historical Interval Read is an executable resource designed to retrieve ad-hoc interval read data. The resource takes two arguments:- Argument 0: First Interval time to Retrieve represented as number of seconds since Jan 1st, 1970 in the UTC time zone. Argument 1: Last interval time to Retrieve represented as number of seconds since Jan 1st, 1970 in the UTC time zone. The dates should be inclusive based on the end time of the interval. The data retrieved from this resource will be readable (or observable) from the Historical Read Payload Resource. As an example, the Argument List to retrieve data from Midnight 2nd March (UTC+10) to Midnight 6rd March (UTC+10) for a specific instance of the interval data object, would be constructed as follows:- 0=''1488463200'',1=''1488808800'''
        - id: 6009
          name: Interval Historical Read Payload
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: The Historical Read Payload resource is the representation of the data requested by the Historical Interval Read executable resource. The format of this Opaque value should be identical to the Latest Payload resource. If no Historical Interval Read has been executed, this resource should return and empty Opaque value. This resource can either be Read from the Server or set up as an observation and Notified to the server as soon as the historical data is available. When this payload is delivered to the LwM2M server, via either a read request or a confirmed observation on this Object, Object Instance or Resource, the Historical Read Payload should be set to an empty Opaque value.
        - id: 6010
          name: Interval Change Configuration
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: 'Change Interval Configuration is an executable resource designed to allow the Interval Period, Interval Start Offset and Interval UTC Offset to be reconfigured. The resource takes three arguments:- Argument 0: [Mandatory] Interval Period represented as an integer as defined in the Interval Period Resource. Argument 1: [Optional] Interval start offset represented as an integer as defined in the Interval Start Offset Resource. If not provided, leave the value as per the current configuration Argument 2: [Optional] Interval UTC offset represented as a String as defined in the Interval UTC Offset Resource. If not provided, leave the value as per the current configuration. Depending on the specifics of the implementation of this object, reconfiguring the Interval data object may result in the removal of all historical data for this Interval Data Object Instance. Please consult with your device vendor as to the implications of reconfiguring an Interval Data Object Instance. As an example, the Argument List to change an interval data object instance from its existing values to one hour intervals, midnight aligned in UTC+10 time zone:- 0=''3600'',1=''0'',1=''UTC+10'''
        - id: 6026
          name: Start
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Start is an executable resource that enables the recording of interval data. The first interval recorded will have a timestamp based on the Interval Start Offset resource. This executable resource takes no arguments. Refer to re-usable resource LogStart for further details.
        - id: 6027
          name: Stop
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Stop (LogStop) is an executable resource that disables the recording of interval data for this object instance. This executable resource takes no arguments. Refer to re-usable resource LogStop for further details.
        - id: 6028
          name: Status
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Recording Enabled is a read-only resource providing an indication of if interval data is currently being recorded for this object instance. Refer to re-usable resource LogStatus for further details.
        - id: 6029
          name: Latest Payload
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: 'The Latest Payload resource is a read-only serialised Opaque (Binary) representation of all the Interval Data between the Last Delivered Interval and the Latest Recorded Interval, accounting for the Delivery Midnight Aligned resource. When this payload is delivered to the LwM2M server, via either a read request or a confirmed observation on this Object, Object Instance or Resource, the Latest Delivered Interval should be updated. When no new data exists, an empty Opaque value should be provided. The payload data can be provided in an implementation specific serialisation, but by default for fixed length values should use the OMA-LwM2M CBOR format encoded as follows: 1. 8-bit integer, value 2 representing OMA-LwM2M CBOR format. 2. Interval Data Instance ID/ Class [16-bit integer] 3. Timestamp of first Interval [32-bit integer] representing the number of seconds since Jan 1st, 1970 in the UTC time zone. 4. Interval Period in seconds [32-bit integer] 5. Number of intervals in Payload [16-bit integer] 6. Number of Values Per Interval [8-bit integer] 7. Size of Value 1 in bits [8-bit integer] 8. Size of Value 2 in bits [8-bit integer] ... 9. Size of Value N in bits [8-bit integer] 10. Interval 1 Value 1 [x bits] 11. Interval 1 Value 2 [x bits] ... 12. Interval 1 Value N [x bits] ... 13. Interval N Value N [x bits] If for some implementation specific reason, there are missing intervals in the sequence, the payload may consist of multiple blocks of the above serialised data (appended into a single binary opaque value), each block representing a continuous series of interval data.'
        - id: 6040
          name: Sample Frequency
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: 0.0..86400.0
          units: s
          description: How often the inputs are read/sampled.This value can be changed by doing a write command
- Name: HostDevice
  Description1: This LWM2M Object provides a range of host device related information which can be queried by the LWM2M Server. The host device is any integrated device with an embedded cellular radio module.
  Description2: ""
  ObjectID: 10299
  ObjectURN: urn:oma:lwm2m:x:10299
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: Manufacturer
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: Host device manufacturers name (OEM).
        - id: 1
          name: Model
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: Identifier of the model name or number determined by device manufacturer.
        - id: 2
          name: UniqueID
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: 'Unique ID assigned by an manufacturer or other body. Used to uniquely identify a host device. Examples include serial # or UUID.'
        - id: 3
          name: FirmwareVersion
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: Current Firmware version of the host device. (manufacturer specified string).
        - id: 4
          name: SoftwareVersion
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Current software version of the host device. (manufacturer specified string).
        - id: 5
          name: HardwareVersion
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Current hardware version of the host device. (manufacturer specified string).
        - id: 6
          name: DateStamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: UTC value of the time and date of the last Firmware or Software update. Format:MM:DD:YYYY HH:MM:SS
- Name: LWM2M Meta Object
  Description1: "\n\t  \n\t  Use this meta object to provide one or more locations hosting XML data\n\t  model definitions for reusable or private and vendor-specific devices,\n\t  such as those in the range 26241-42768.\n\t  \n\t"
  Description2: ""
  ObjectID: 10300
  ObjectURN: urn:oma:lwm2m:x:10300
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: ObjectID
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Object ID of the vendor-specific object. If a finer granularity isneeded to identify the object (for example, Object IDs in the range26241 - 32768), the optional ObjectInstanceHandle resource can also beused.
        - id: 1
          name: ObjectURN
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: Object URN of the vendor-specific object. URN-equivalence resolutionmust conform to Section 3 of RFC 8141.
        - id: 4000
          name: ObjectInstanceHandle
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: The object link is used to refer an Instance of a given Object. An Object link value is composed of two concatenated 16-bit unsigned integers following the Network Byte Order convention. The Most Significant Halfword is an Object ID, the Least Significant Halfword is an Object Instance ID. An Object Link referencing no Object Instance will contain the concatenation of 2 MAX-ID values.
        - id: 2
          name: URI
          operations: R
          multipleinstances: Multiple
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: The full URI of the XML file containing the object definition of thevendor-specfic object. The URI must contain the scheme and authoritycomponents, and the URI syntax must conform to RFC 3986. If severalalternative locations exist for the XML definition, multiple instancescan be used, with each instance containing a single URI. In suchcases, the URI selection is implementation-specific.
        - id: 3
          name: SHAType
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..8
          units: ""
          description: The Secure Hash Algorithm used to compute the message digest for theXML file in the URL(s). Currently defined values are "0" (no checksumused), "1" (for SHA224), "2" (for SHA256), "3" (for SHA384), "4" (forSHA512), "5" (SHA3-224), "6" (for SHA3-256), "7" (for SHA3-384) and"8" (for SHA3-512).
        - id: 4
          name: ChecksumValue
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: 'If the SHAType value is "0" then this string must be ignored. If theSHAType value is 1-8, this field contains a hexadecimal encodedchecksum value based on the SHA function used. Valid characters forthe string are: 0123456789abcdef. The length of the string mustcorrespond exactly to the respective digest. Otherwise, the value mustbe ignored and no SHA computation should be performed. For instance, afile containing "foo" as its content would have the following valuefor SHAType 1 (SHA224) as a 56 character string representing 224 bits:e7d5e36e8d470c3e5103fedd2e4f2aa5c30ab27f6629bdc3286f9dd2'
- Name: AT&T Connectivity Extension
  Description1: The AT&T Connectivity Extension Object will be used to gather information describing the UE and the operating state of the UE. The AT&T Connectivity Extension Object is an open and standard object used by AT&T.
  Description2: ""
  ObjectID: 10308
  ObjectURN: urn:oma:lwm2m:x:10308
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 1
          name: ICCID
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: T he ICCID resource is used to identify the UICC used by the IoT device or module for authentication by the network. Reference ITU-T recommendation E.118
        - id: 2
          name: IMSI
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: The IMSI resource is used to log the IMSI used by the UE to identify itself to the network. The IMSI is defined in 3GPP TS 23.003 and is a combination of MCC (Mobile Country Code), MNC (Mobile Network Code), and MSIN (Mobile Subscriber Identification Number).
        - id: 3
          name: MSISDN
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: The MSISDN resource will indicate the MSISDN as assigned, if any, to the SIM card. In the case that no MSISDN is assigned to the SIM card the response should be zero.
        - id: 4
          name: APN Retries
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: The APN Retry multi instance resource will maintain the number of retries the device can attempt to activate a context on a particular APN. This resource should be defaulted to 2 retries. Should a device integrator wish to manipulate this the integrator should be able to do so.
        - id: 5
          name: APN Retry Period
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: s
          description: The APN retry period multi instance resource is the time in seconds between attempting a context activation on the APN. This should be defaulted to 0. Note that the IoT Module will be limited by the number retries and the periodicity of the retries by the DAM requirements in Chapter 28 of the AT&T 13340. The resource is multi-instance to accommodate different periods of retries on different APNs.
        - id: 6
          name: APN Retry Back-Off Period
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: s
          description: The APN Retry Back-Off Period is the period between a burst of attempts to activate a context on a particular APN. This resource is intended to be a longer period than the APN retry period to account for limitations on the numbers of times an authentication request can be made with the network. This should be defaulted to 86400 seconds (1 Day). This resource is also a multiple instance resource to accommodate different retry periods amongst different APNs.
        - id: 7
          name: SINR
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: <7 to >12.5
          units: ""
          description: 'This is the signal to noise ratio resource. This measurement should be measured over 10 sampled at a 400ms sample rate. Once the 10 samples are averaged the measurement should be reflected in the Signal to Noise Ratio resource. Reference: 3GPP TS 38.215, clause 5.1.'
        - id: 8
          name: SRXLEV
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: This resource indicates the cell selection receive value. See definition in 3GPP TS 36.304.
        - id: 9
          name: CE Mode
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: 'This resource indicates the CE Mode the IoT module is currently in. Potential values: Mode A, Mode B.'
- Name: AT&T Connectivity Extension
  Description1: The AT&T Connectivity Extension Object will be used to gather information describing the UE and the operating state of the UE. The AT&T Connectivity Extension Object is an open and standard object used by AT&T.
  Description2: ""
  ObjectID: 10308
  ObjectURN: urn:oma:lwm2m:x:10308:2.0
  LWM2MVersion: "1.0"
  ObjectVersion: "2.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 1
          name: ICCID
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: T he ICCID resource is used to identify the UICC used by the IoT device or module for authentication by the network. Reference ITU-T recommendation E.118
        - id: 2
          name: IMSI
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: The IMSI resource is used to log the IMSI used by the UE to identify itself to the network. The IMSI is defined in 3GPP TS 23.003 and is a combination of MCC (Mobile Country Code), MNC (Mobile Network Code), and MSIN (Mobile Subscriber Identification Number).
        - id: 3
          name: MSISDN
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: The MSISDN resource will indicate the MSISDN as assigned, if any, to the SIM card. In the case that no MSISDN is assigned to the SIM card the response should be zero.
        - id: 4
          name: APN Retries
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: The APN Retry multi instance resource will maintain the number of retries the device can attempt to activate a context on a particular APN. This resource should be defaulted to 2 retries. Should a device integrator wish to manipulate this the integrator should be able to do so.
        - id: 5
          name: APN Retry Period
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: s
          description: The APN retry period multi instance resource is the time in seconds between attempting a context activation on the APN. This should be defaulted to 0. Note that the IoT Module will be limited by the number retries and the periodicity of the retries by the DAM requirements in Chapter 28 of the AT&T 13340. The resource is multi-instance to accommodate different periods of retries on different APNs.
        - id: 6
          name: APN Retry Back-Off Period
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: s
          description: The APN Retry Back-Off Period is the period between a burst of attempts to activate a context on a particular APN. This resource is intended to be a longer period than the APN retry period to account for limitations on the numbers of times an authentication request can be made with the network. This should be defaulted to 86400 seconds (1 Day). This resource is also a multiple instance resource to accommodate different retry periods amongst different APNs.
        - id: 7
          name: SINR
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: <7 to >12.5
          units: ""
          description: 'This is the signal to noise ratio resource. This measurement should be measured over 10 sampled at a 400ms sample rate. Once the 10 samples are averaged the measurement should be reflected in the Signal to Noise Ratio resource. Reference: 3GPP TS 38.215, clause 5.1.'
        - id: 8
          name: SRXLEV
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: This resource indicates the cell selection receive value. See definition in 3GPP TS 36.304.
        - id: 9
          name: CE_LEVEL
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0,1,2
          units: ""
          description: This resource indicates the Coverage Enhancement Level defined for LTE-M and NB-IoT. The Coverage Enhancement Level is on a range from 0-2. AT&T NB-IoT supports CE MODE A and B (CE LEVEL 0,1,2) and AT&T LTE-M supports CE MODE A (CE Level 0,1).
- Name: Shareparkinglot
  Description1: This LwM2M Object provides the keying material of our technology product-ShareParkingLock.
  Description2: ""
  ObjectID: 10309
  ObjectURN: urn:oma:lwm2m:x:10309
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 1
          name: LockID
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Unique ID of the lock.
        - id: 2
          name: LockType
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Type of the lock.
        - id: 3
          name: LightSwitchState
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Infra-red sensor switch state.
        - id: 4
          name: RSSI
          operations: R
          multipleinstances: Multiple
          mandatory: Mandatory
          type: Integer
          rangeenumeration: -30..-120
          units: dBm
          description: Radio Received Signal Strength Indicator.
        - id: 5
          name: BatteryCapacity
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: Float
          rangeenumeration: 0..100
          units: '%EL'
          description: Current battery capacity in percentage Energy Level (EL).
        - id: 6
          name: DataUpTime
          operations: R
          multipleinstances: Multiple
          mandatory: Mandatory
          type: Time
          rangeenumeration: ""
          units: ""
          description: The data upload time.
        - id: 5514
          name: Latitude
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The decimal notation of latitude, e.g. -43.5723 (World Geodetic System 1984).
        - id: 5515
          name: Longitude
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The decimal notation of longitude, e.g. 153.21760 (World Geodetic System 1984).
- Name: Solar Radiation
  Description1: "\n            This object is used to report solar irradiance (SI), i.e. power per unit area received from the Sun in the form of electromagnetic radiation, on a planar surface measured by a pyranometer or similar instrument. A pyranometer measures solar irradiance from the hemisphere above within a wavelength range 0.3 μm to 3 μm. For example, the application of solar radiation measurement can be meteorological networks and solar energy applications.\n        "
  Description2: ""
  ObjectID: 10311
  ObjectURN: urn:oma:lwm2m:x:10311
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5601
          name: Min Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value measured by the sensor since power ON or reset.
        - id: 5602
          name: Max Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value measured by the sensor since power ON or reset.
        - id: 5603
          name: Min Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value that can be measured by the sensor.
        - id: 5604
          name: Max Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value that can be measured by the sensor.
        - id: 5605
          name: Reset Min and Max Measured Values
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the Min and Max Measured Values to Current Value.
        - id: 5518
          name: Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: The timestamp of when the measurement was performed.
        - id: 5700
          name: Sensor Value
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: ""
          description: Last or Current Measured Value from the Sensor.
        - id: 5701
          name: Sensor Units
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Measurement Units Definition.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
        - id: 5821
          name: Current Calibration
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Read or Write the current calibration coefficient.
- Name: Solar Radiation
  Description1: This Object is used to report solar irradiance (SI), i.e. power per unit area received from the Sun in the form of electromagnetic radiation, on a planar surface measured by a pyranometer or similar instrument. A pyranometer measures solar irradiance from the hemisphere above within a wavelength range 0.3 um to 3 um. For example, the application of solar radiation measurement can be meterological networks and solar energy applications.
  Description2: ""
  ObjectID: 10311
  ObjectURN: urn:oma:lwm2m:x:10311:1.1
  LWM2MVersion: "1.0"
  ObjectVersion: "1.1"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5601
          name: Min Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value measured by the sensor since power ON or reset.
        - id: 5602
          name: Max Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value measured by the sensor since power ON or reset.
        - id: 5603
          name: Min Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value that can be measured by the sensor.
        - id: 5604
          name: Max Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value that can be measured by the sensor.
        - id: 5605
          name: Reset Min and Max Measured Values
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the Min and Max Measured Values to Current Value.
        - id: 5518
          name: Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: The timestamp of when the measurement was performed.
        - id: 5700
          name: Sensor Value
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: ""
          description: Last or Current Measured Value from the Sensor.
        - id: 5701
          name: Sensor Units
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Measurement Units Definition.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
        - id: 5821
          name: Current Calibration
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: Read or Write the current calibration coefficient.
        - id: 6050
          name: Fractional Timestamp
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: 0..1
          units: s
          description: Fractional part of the timestamp when sub-second precision is used (e.g., 0.23 for 230 ms).
        - id: 6042
          name: Measurement Quality Indicator
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..23
          units: ""
          description: 'Measurement quality indicator reported by a smart sensor. 0: UNCHECKED No quality checks were done because they do not exist or can not be applied. 1: REJECTED WITH CERTAINTY The measured value is invalid. 2: REJECTED WITH PROBABILITY The measured value is likely invalid. 3: ACCEPTED BUT SUSPICIOUS The measured value is likely OK. 4: ACCEPTED The measured value is OK. 5-15: Reserved for future extensions. 16-23: Vendor specific measurement quality.'
        - id: 6049
          name: Measurement Quality Level
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..100
          units: ""
          description: Measurement quality level reported by a smart sensor. Quality level 100 means that the measurement has fully passed quality check algorithms. Smaller quality levels mean that quality has decreased and the measurement has only partially passed quality check algorithms. The smaller the quality level, the more caution should be used by the application when using the measurement. When the quality level is 0 it means that the measurement should certainly be rejected.
- Name: Gas Readings
  Description1: Object to periodically log readings from any gas sensor (eg H2S, VOCx, methane etc)
  Description2: ""
  ObjectID: 10313
  ObjectURN: urn:oma:lwm2m:x:10313
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 6000
          name: Interval Period
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 1..864000
          units: s
          description: The Interval Period resource is an Integer value representing the width in seconds of the intervals being managed by this interval data object. This resource is read only and can only be changed by resource 11 (Change Interval Configuration). It is recommended that the Interval Period be set to a devisor of 24 hours (86400 seconds) to provide a consistent interval period. Examples of Interval Period include:-30 = Every 30 seconds600 = Every 10 minutes1800 = Every 30 minutes3600 = Hourly7200 = Every 2 hours14400 = Every 4 hours43200 = Every 12 hours86400 = Every Day172600 = Every Second Day
        - id: 6001
          name: Interval Start Offset
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..86399
          units: s
          description: The Interval Start Offset resource is a read only resource representing the number of seconds past midnight for which the first interval is recorded. If this resource is empty, it is assumed that the intervals are midnight aligned. This can be used to adjust interval boundaries. As an example, an Interval Period of 3600 seconds and an Interval Start time of 300 represents hourly interval data, starting at 00:05.
        - id: 6002
          name: Interval UTC Offset
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The Interval UTC Offset resource is a read only resource representing the time zone offset for this Interval Data instance. If this resource is empty, the application should use the UTC offset provided in the Device [/3/0/14] object instance resource or UTC if not provided. UTC+X [ISO 8601].
        - id: 6003
          name: Interval Collection Start Time
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Time
          rangeenumeration: ""
          units: ""
          description: The Collection Start Time resource is a read only resource representing the time when the first interval was recorded on the device. Interval times represent the end of the interval, not the beginning. As an example, the first four hourly interval past midnight will have a timestamp of 04:00 (adjusting for UTC offset).
        - id: 6004
          name: Oldest Recorded Interval
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Time
          rangeenumeration: ""
          units: ""
          description: The Oldest Recorded Interval resource is a read-only resource representing the oldest available interval on the device. Interval times represent the end of the interval, not the beginning.
        - id: 6005
          name: Last Delivered Interval
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Time
          rangeenumeration: ""
          units: ""
          description: The Last Delivered Interval is a readable and writable resource used to represent the last interval delivered to the LwM2M server. Interval times represent the end of the interval, not the beginning. The setting of this resource is implementation specific but should be updated based on, either a Read request of the Latest Payload from the LwM2M server or via a confirmed delivery of Notify operation of the Latest Payload resource. This resource is writable to allow the server to adjust the Last Delivered Interval value if the server and client is out of sync.
        - id: 6006
          name: Latest Recorded Interval
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Time
          rangeenumeration: ""
          units: ""
          description: The Latest Recorded Interval is a readable resource representing the currently highest recorded interval on the device. Interval times represent the end of the interval, not the beginning.
        - id: 6007
          name: Interval Delivery Midnight Aligned
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: The Delivery Midnight Aligned is a readable and writable resource used to indicate if data is delivered only to the previous midnight (1) or if part-day data can be delivered (0). Calculating Midnight should consider the Interval UTC Offset resource, or if empty, the Device [/3/0/14] object instance resource.
        - id: 6008
          name: Interval Historical Read
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: 'Historical Interval Read is an executable resource designed to retrieve ad-hoc interval read data. The resource takes two arguments:-Argument 0: First Interval time to Retrieve represented as number of seconds since Jan 1st, 1970 in the UTC time zone.Argument 1: Last interval time to Retrieve represented as number of seconds since Jan 1st, 1970 in the UTC time zone.The dates should be inclusive based on the end time of the interval. The data retrieved from this resource will be readable (or observable) from the Historical Read Payload Resource.As an example, the Argument List to retrieve data from Midnight 2nd March (UTC+10) to Midnight 6rd March (UTC+10) for a specific instance of the interval data object, would be constructed as follows:-0=''1488463200'',1=''1488808800'''
        - id: 6009
          name: Interval Historical Read Payload
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: The Historical Read Payload resource is the representation of the data requested by the Historical Interval Read executable resource. The format of this Opaque value should be identical to the Latest Payload resource. If no Historical Interval Read has been executed, this resource should return and empty Opaque value. This resource can either be Read from the Server or set up as an observation and Notified to the server as soon as the historical data is available. When this payload is delivered to the LwM2M server, via either a read request or a confirmed observation on this Object, Object Instance or Resource, the Historical Read Payload should be set to an empty Opaque value.
        - id: 6010
          name: Interval Change Configuration
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: 'Change Interval Configuration is an executable resource designed to allow the Interval Period, Interval Start Offset and Interval UTC Offset to be reconfigured. The resource takes three arguments:-Argument 0: [Mandatory] Interval Period represented as an integer as defined in the Interval Period Resource.Argument 1: [Optional] Interval start offset represented as an integer as defined in the Interval Start Offset Resource. If not provided, leave the value as per the current configurationArgument 2: [Optional] Interval UTC offset represented as a String as defined in the Interval UTC Offset Resource. If not provided, leave the value as per the current configuration.Depending on the specifics of the implementation of this object, reconfiguring the Interval data object may result in the removal of all historical data for this Interval Data Object Instance. Please consult with your device vendor as to the implications of reconfiguring an Interval Data Object Instance.As an example, the Argument List to change an interval data object instance from its existing values to one hour intervals, midnight aligned in UTC+10 time zone:-0=''3600'',1=''0'',1=''UTC+10'''
        - id: 6026
          name: Start
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Start is an executable resource that enables the recording of interval data. The first interval recorded will have a timestamp based on the Interval Start Offset resource. This executable resource takes no arguments. Refer to re-usable resource LogStart for further details.
        - id: 6027
          name: Stop
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Stop (LogStop) is an executable resource that disables the recording of interval data for this object instance. This executable resource takes no arguments. Refer to re-usable resource LogStop for further details.
        - id: 6028
          name: Status
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Recording Enabled is a read-only resource providing an indication of if interval data is currently being recorded for this object instance. Refer to re-usable resource LogStatus for further details.
        - id: 6029
          name: Latest Payload
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: The Latest Payload resource is a read-only serialised Opaque (Binary) representation of all the Interval Data between the Last Delivered Interval and the Latest Recorded Interval, accounting for the Delivery Midnight Aligned resource. When this payload is delivered to the LwM2M server, via either a read request or a confirmed observation on this Object, Object Instance or Resource, the Latest Delivered Interval should be updated. When no new data exists, an empty Opaque value should be provided.The payload data can be provided in an implementation specific serialisation, but by default for fixed length values should use the OMA-LwM2M CBOR format encoded as follows:1. 8-bit integer, value 2 representing OMA-LwM2M CBOR format.2. Interval Data Instance ID/ Class [16-bit integer]3. Timestamp of first Interval [32-bit integer] representing the number of seconds since Jan 1st, 1970 in the UTC time zone.4. Interval Period in seconds [32-bit integer]5. Number of intervals in Payload [16-bit integer]6. Number of Values Per Interval [8-bit integer]7. Size of Value 1 in bits [8-bit integer]8. Size of Value 2 in bits [8-bit integer]...9. Size of Value N in bits [8-bit integer]10. Interval 1 Value 1 [x bits]11. Interval 1 Value 2 [x bits]...12. Interval 1 Value N [x bits]...13. Interval N Value N [x bits]If for some implementation specific reason, there are missing intervals in the sequence, the payload may consist of multiple blocks of the above serialised data (appended into a single binary opaque value), each block representing a continuous series of interval data.
        - id: 6041
          name: Sensor Warm-up Time
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..86400
          units: s
          description: Warm-up (wait) time before sensor value is read
- Name: Particulates
  Description1: This object should be used to report the concentration of particulates, for example a measurement of a particulates air quality sensor.  It also provides resources for minimum/maximum measured values and the minimum/maximum range that can be measured by the particulate sensor. An example measurement unit is microgrammes per cubic metre ug/m3.
  Description2: ""
  ObjectID: 10314
  ObjectURN: urn:oma:lwm2m:x:10314
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 5700
          name: Sensor Value
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: ""
          description: Last or Current Measured Value from the Sensor.
        - id: 5601
          name: Min Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The minimum value measured by the sensor since power ON or reset.
        - id: 5602
          name: Max Measured Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value measured by the sensor since power ON or reset.
        - id: 5604
          name: Max Range Value
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ""
          description: The maximum value that can be measured by the sensor.
        - id: 5701
          name: Sensor Units
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Measurement Units Definition.
        - id: 5750
          name: Application Type
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The application type of the sensor or actuator as a string depending on the use case.
        - id: 5605
          name: Reset Min and Max Measured Values
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the Min and Max Measured Values to Current Value.
        - id: 6043
          name: Measured Particle Size
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: m
          description: Size of the particle that the sensor is measuring
- Name: Robot
  Description1: This LWM2M Object includes robot information and links to the location object.
  Description2: ""
  ObjectID: 10315
  ObjectURN: urn:oma:lwm2m:x:10315
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Mandatory
  Resources:
    Item:
        - id: 1
          name: Robot ID
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: 0..255
          units: ""
          description: The Robot identity.
        - id: 2
          name: Robot Type
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: 0..63
          units: ""
          description: 'Robot Type, for example: Ginger, CloudCleanX, CloudPepper.'
        - id: 3
          name: Robot Serial Number
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: 0..63
          units: ""
          description: 'Robot Type, for example: Ginger, CloudCleanX, CloudPepper.'
        - id: 51
          name: Battery Level
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..100
          units: '%'
          description: Current Battery Level of the robot.
        - id: 4
          name: Charging
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: If the robot is charging or not,the setting of which is a Boolean value (1,0) where 1 is Yes and 0 is No.
        - id: 5852
          name: On time
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: s
          description: The time in seconds that the device has been on. Writing a value of 0 resets the counter.
        - id: 5
          name: Positioning
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: If the robot is needed to be positioned, the setting of which is a Boolean value (1,0) where 1 is Yes and 0 is No.
        - id: 6
          name: Location
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: The location of the robot, contains the reference to the Location object(6).
- Name: RCU
  Description1: This LWM2M Object includes RCU(Robotic Control Unit) information and the link to RCU APPs.
  Description2: ""
  ObjectID: 10316
  ObjectURN: urn:oma:lwm2m:x:10316
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Mandatory
  Resources:
    Item:
        - id: 1
          name: RCU ID
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: 0..127
          units: ""
          description: The RCU identity.
        - id: 2
          name: RCU Serial Number
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: 0..63
          units: ""
          description: Serial Number of the RCU.
        - id: 3
          name: RCU Software Version
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: 0..63
          units: ""
          description: Software Version of the RCU.
        - id: 4
          name: RCU OS Version
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: 0..127
          units: ""
          description: OS type and version of the RCU.
        - id: 5
          name: RCU CPU Info
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: "64"
          units: ""
          description: Cpu information of the RCU.
        - id: 6
          name: RCU RAM Info
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: "64"
          units: ""
          description: RAM information of the RCU.
        - id: 7
          name: RCU ROM Size
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: GB
          description: ROM Size of the RCU (expressed in gigabyte).
        - id: 8
          name: RCU ROM Available Size
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: GB
          description: Available ROM Size of the RCU (expressed in gigabyte).
        - id: 9
          name: SD Storage
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: GB
          description: 'Total storage of the RCU SD card, for example: 128G.'
        - id: 10
          name: SD Available Storage
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: GB
          description: 'Available storage of the RCU SD card, for example: 63G.'
        - id: 11
          name: RCU GPS Location
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: RCU GPS location, contains the referrence to Location(6).
        - id: 12
          name: Wi-Fi MAC
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: "12"
          units: ""
          description: Wi-Fi MAC of the RCU.
        - id: 13
          name: Bluetooth MAC
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: "12"
          units: ""
          description: 'Bluetooth MAC of the RCU, for example: .'
        - id: 14
          name: Camera Info
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: "64"
          units: ""
          description: Camera info of the RCU.
        - id: 51
          name: Battery Level
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..100
          units: /100
          description: The current Battery Level as a percentage (with a range from 0 to 100).
        - id: 5852
          name: On time
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: s
          description: The time in seconds that the device has been on. Writing a value of 0 resets the counter.
        - id: 60
          name: Downloaded APP Packages
          operations: R
          multipleinstances: Multiple
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: Each item contains APP Name/Version info/Package Name.
        - id: 100
          name: RCU APPs
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: Contains the reference to the APPs belongs to RCU.
- Name: RCU PM
  Description1: This LWM2M Object includes RCU(Robotic Control Unit) PM information(counter and guage).
  Description2: ""
  ObjectID: 10318
  ObjectURN: urn:oma:lwm2m:x:10318
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Mandatory
  Resources:
    Item:
        - id: 1
          name: CPU Usage
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..100
          units: /100
          description: The CPU usage of the RCU.
        - id: 2
          name: Max CPU Usage
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..100
          units: /100
          description: Max CPU Usage of the RCU.
        - id: 3
          name: Memory Usage
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..100
          units: /100
          description: Memory Usage of the RCU.
        - id: 4
          name: Storage Usage
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..100
          units: /100
          description: Storage Usage of the RCU.
        - id: 51
          name: Battery Level
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..100
          units: /100
          description: The Battery Level of the RCU.
        - id: 52
          name: Network Bandwidth
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: Mbit/s
          description: Network Bandwidth of the RCU.
        - id: 53
          name: Mobile Signal
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Mobile Signal of the RCU.
        - id: 54
          name: GPS Signal
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: GPS Signal of the RCU.
        - id: 55
          name: Wi-Fi Signal
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Wi-Fi Signal of the RCU.
        - id: 56
          name: UpLink Rate
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: Mbit/s
          description: UpLink Rate of the network used by the RCU.
        - id: 57
          name: DownLink Rate
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: Mbit/s
          description: DownLink Rate of the network used by the RCU.
        - id: 58
          name: Packet Loss Rate
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..100
          units: /100
          description: Packet Loss Rate in percentage.
        - id: 59
          name: Network Latency
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ms
          description: Network Latency in ms.
        - id: 300
          name: Battery Temperature
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: Cel
          description: Battery Temperature.
- Name: RCU Control
  Description1: This LWM2M Object includes all operations on RCUs.
  Description2: ""
  ObjectID: 10319
  ObjectURN: urn:oma:lwm2m:x:10319
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Mandatory
  Resources:
    Item:
        - id: 1
          name: RCU Diagnostics Mode
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: If the Diagnostics Mode is switched on or not, the setting of which is a Boolean value (1,0) where 1 is On and 0 is Off.
        - id: 2
          name: RCU Log Recording
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: If the Log Recording is switched on or not,the setting of which is a Boolean value (1,0) where 1 is On and 0 is Off.
        - id: 100
          name: RCU Shutdown
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: Shut down the RCU.
        - id: 101
          name: RCU Restart
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: Restart the RCU.
        - id: 102
          name: RCU Deactivate
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: Deactivate the RCU.
        - id: 103
          name: RCU Reset
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the RCU to factory settings.
        - id: 104
          name: RCU Diagnostics Mode Control
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: 'Switch on/off Diagnostics Mode: Parameter: 1:On, 0:Off'
        - id: 105
          name: RCU Log Recording Control
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: 'Switch on/off the Log Recording, Parameter: 1:On, 0:Off'
- Name: CCU
  Description1: This LWM2M Object includes CCU(Central Control Unit) information and the link to CCU APPs.
  Description2: ""
  ObjectID: 10320
  ObjectURN: urn:oma:lwm2m:x:10320
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 1
          name: CCU ID
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: The CCU identity.
        - id: 2
          name: CCU FM Version
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: The firmware version of the CCU.
        - id: 3
          name: CCU SW Version
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: The software version of the CCU.
        - id: 4
          name: CCU Memory Size
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: GB
          description: Total Memory Size of the CCU (expressed in gigabyte).
        - id: 5
          name: CCU Storage
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: GB
          description: Total storage of the CCU.
        - id: 6
          name: CCU Available Storage
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: GB
          description: Available storage of the CCU.
        - id: 5852
          name: On time
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: s
          description: The time in seconds that the device has been on. Writing a value of 0 resets the counter.
        - id: 100
          name: Downloaded APP Packages
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Each item contains APP Name, Version info, Package Name.
        - id: 101
          name: CCU APPs
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: Contains the reference to the APPs belongs to this CCU.
- Name: CCU PM
  Description1: This LWM2M Object includes CCU PM(counter and gauge).
  Description2: ""
  ObjectID: 10322
  ObjectURN: urn:oma:lwm2m:x:10322
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 1
          name: CPU Usage
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..100
          units: '%'
          description: The CPU usage of the CCU.
        - id: 2
          name: Max CPU Usage
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..100
          units: '%'
          description: Max CPU Usage of the CCU.
        - id: 3
          name: Memory Usage
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..100
          units: '%'
          description: Memory Usage of the CCU.
        - id: 4
          name: Storage Usage
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..100
          units: '%'
          description: Storage Usage of the CCU.
- Name: CCU Control
  Description1: This LWM2M Object includes all operations on CCUs.
  Description2: ""
  ObjectID: 10323
  ObjectURN: urn:oma:lwm2m:x:10323
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 100
          name: CCU Restart
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: Restart the CCU.
        - id: 101
          name: CCU Reset
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the CCU to factory settings.
        - id: 102
          name: CCU Self-checking
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: Let the CCU to do Self-checking.
- Name: ECU
  Description1: This LWM2M Object includes ECU(End Control Unit) information.
  Description2: ""
  ObjectID: 10324
  ObjectURN: urn:oma:lwm2m:x:10324
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 1
          name: ECU ID
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: The ECU identity.
        - id: 2
          name: ECU FM Version
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: The firmware version of the ECU.
        - id: 5852
          name: On time
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: s
          description: The time in seconds that the device has been on. Writing a value of 0 resets the counter.
- Name: Robot PM
  Description1: This LWM2M Object includes PM(counter and gauge) supported by all robots.
  Description2: ""
  ObjectID: 10326
  ObjectURN: urn:oma:lwm2m:x:10326
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Mandatory
  Resources:
    Item:
        - id: 51
          name: Battery Level
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..100
          units: /100
          description: 'Referrence to a PM item, similar with Corelnk in LwM2M 1.1, </object ID/object instance ID/resource ID>, for example: </10315/0/2>'
        - id: 300
          name: Battery Temperature
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: Cel
          description: Battery Temperature.
        - id: 301
          name: Temperature
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: Cel
          description: Environment Temperature.
        - id: 302
          name: Humidity
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..100
          units: /100
          description: Environment Humidity.
        - id: 303
          name: PM2.5
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ug/m3
          description: PM2.5 of the environment.
        - id: 304
          name: Smog
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ug/m3
          description: Smoke concentration of the environment.
        - id: 305
          name: CO
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ppm
          description: CO concentration of the environment.
        - id: 306
          name: CO2
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: ppm
          description: CO2 concentration of the environment.
        - id: 307
          name: PM10
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ug/m3
          description: PM10 of the environment.
        - id: 601
          name: Speed
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: m/h
          description: The speed of the robot.
        - id: 602
          name: Water Used
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..100
          units: /100
          description: The percentage of water used for CloudCleanX.
        - id: 603
          name: Dust Box Used
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..100
          units: /100
          description: The percentage of Dust Box Space used for CloudCleanX.
        - id: 604
          name: Obstacle Distance
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: cm
          description: The distance between the robot and the obstacle.
        - id: 607
          name: Robot Temperate
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: Cel
          description: 'Robot surface temperature, for example: the RCU temperature.'
        - id: 608
          name: Confidence Index
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..100
          units: /100
          description: The Confidence Index of the robot.
        - id: 1101
          name: Data Traffic Used
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: Mbit/s
          description: Data Traffic Used by the robot.
        - id: 1102
          name: Images Handled
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: How many images have been handled by the robot.
        - id: 1103
          name: HARI S-Voice Requests
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: HARI S-Voice Requests number by the robot.
        - id: 1104
          name: HARI S-Vision Requests
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: HARI S-Vision Requests number by the robot.
        - id: 1105
          name: HARI S-Motion Requests
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: HARI S-Motion Requests number by the robot.
        - id: 1106
          name: HARI S-Map Requests
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: HARI S-Map Requests number by the robot.
        - id: 1107
          name: Successful HARI S-Voice Requests
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Successful HARI S-Voice Requests number by the robot.
        - id: 1108
          name: Successful HARI S-Vision Requests
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Successful HARI S-Vision Requests number by the robot.
        - id: 1109
          name: Successful HARI S-Motion Requests
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Successful HARI S-Motion Requests number by the robot.
        - id: 1110
          name: Successful HARI S-Map Requests
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Successful HARI S-Map Requests number by the robot.
        - id: 1111
          name: Questions Answered
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: How many questions have been answered by the robot.
        - id: 1112
          name: Unknown Questions
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: How many questions can't be answered by the robot.
        - id: 1113
          name: Mileage
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: m
          description: How long has the robot gone, for CloudCleanX and CloudPatrol.
        - id: 1114
          name: Cleaned Times
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Cleaned Times by the robot, for CloudCleanX.
        - id: 1115
          name: Cleaned Area
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: m2
          description: Space cleaned by the robot, for CloudCleanX.
        - id: 1116
          name: Cleaned Time
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: s
          description: How long has the robot cleaned, for CloudCleanX.
        - id: 1117
          name: ASR Recognized
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: B
          description: How many bytes of ASRs have been recognized by the robot.
        - id: 1118
          name: Incorrect ASR Recognitions
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: B
          description: How many bytes of ASRs have been recognized incorrectly by the robot.
        - id: 1119
          name: Tried TTS Texts
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: B
          description: Tried TTS Texts number in bytes.
        - id: 1120
          name: Successful TTS Texts
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: B
          description: Successful TTS Texts number in bytes.
        - id: 1121
          name: ASR Recognized (CH)
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: B
          description: How many bytes of (CH) ASRs have been recognized by the robot.
        - id: 1122
          name: Tried TTS Texts (CH)
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: B
          description: Tried (CH) TTS Texts number in bytes.
        - id: 1123
          name: Successful TTS Texts (CH)
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: B
          description: Successful (CH) TTS Texts number in bytes.
        - id: 1124
          name: ASR Recognized (EN)
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: B
          description: How many bytes of (EN) ASRs have been recognized by the robot.
        - id: 1125
          name: Tried TTS Texts (EN)
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: B
          description: Tried (EN) TTS Texts number in bytes.
        - id: 1126
          name: Successful TTS Texts (EN)
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: B
          description: Successful (EN) TTS Texts number in bytes.
        - id: 1127
          name: ASR Recognized (ES)
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: B
          description: How many bytes of (ES) ASRs have been recognized by the robot.
        - id: 1128
          name: Tried TTS Texts (ES)
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: B
          description: Tried (ES) TTS Texts number in bytes.
        - id: 1129
          name: Successful TTS Texts (ES)
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: B
          description: Successful(ES) TTS Texts number in bytes.
        - id: 1130
          name: ASR Recognized (JA)
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: B
          description: How many bytes of (JA) ASRs have been recognized by the robot.
        - id: 1131
          name: Tried TTS Texts (JA)
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: B
          description: Tried (JA) TTS Texts number in bytes.
        - id: 1132
          name: Successful TTS Texts (JA)
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: B
          description: Successful (JA) TTS Texts number in bytes.
        - id: 1133
          name: ASR Recognized (SCCH)
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: B
          description: How many bytes of (SCCH) ASRs have been recognized by the robot.
        - id: 1134
          name: Tried TTS Texts (SCCH)
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: B
          description: Tried (SCCH) TTS Texts number in bytes.
        - id: 1135
          name: Successful TTS Texts (SCCH)
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: B
          description: Successful (SCCH) TTS Texts number in bytes.
        - id: 1136
          name: ASR Recognized (GDCH)
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: B
          description: How many bytes of (GDCH) ASRs have been recognized by the robot.
        - id: 1137
          name: Tried TTS Texts (GDCH)
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: B
          description: Tried (GDCH) TTS Texts number in bytes.
        - id: 1138
          name: Successful TTS Texts (GDCH)
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: B
          description: Successful (GDCH) TTS Texts number in bytes.
        - id: 1139
          name: ASR Recognized (TCH)
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: B
          description: How many bytes of (TCH) ASRs have been recognized by the robot.
        - id: 1140
          name: Tried TTS Texts (TCH)
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: B
          description: Tried(TCH)TTS Texts number in bytes.
        - id: 1141
          name: Successful TTS Texts (TCH)
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: B
          description: Successful (TCH) TTS Texts number in bytes.
        - id: 1501
          name: Objects Recognition Tries
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Objects Recognition Tries by the robot.
        - id: 1502
          name: Successful Object Recognition
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Successful Objects Recognition Tries by the robot.
        - id: 1503
          name: Face Recognition Tries
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Face Recognition Tries by the robot.
        - id: 1504
          name: Successful Face Recognitions
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Successful Face Recognition Tries by the robot.
        - id: 1505
          name: Vehicle Plate Recognition Tries
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Vehicle Plate Recognition Tries by the robot.
        - id: 1506
          name: Successful Vehicle Plate Recognitions
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Successful Vehicle Plate Recognitions by the robot.
        - id: 1507
          name: Tasks Assigned
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Tasks number assigned to the robot.
        - id: 1508
          name: Successful Tasks Executed
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Tasks successfully executed by the robot.
        - id: 1509
          name: Images Uploaded
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Images Uploaded by the robot.
        - id: 1510
          name: Videos Uploaded
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Videos Uploaded by the robot.
        - id: 1511
          name: Images Matted
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: ""
          description: Images Matted by the robot.
- Name: Compressor
  Description1: This LWM2M Object includes the Compressor information.
  Description2: ""
  ObjectID: 10327
  ObjectURN: urn:oma:lwm2m:x:10327
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 1
          name: Compressor Name
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: The name of the compressor.
        - id: 50
          name: Compressor Status
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: The status of the compressor, 1:Working, 0:Stopped.
- Name: SCA PM
  Description1: This LWM2M Object includes all PM items belongs to a specific SCA.
  Description2: ""
  ObjectID: 10328
  ObjectURN: urn:oma:lwm2m:x:10328
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 1
          name: SCA Name
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: The name of the SCA.
        - id: 605
          name: SCA Current
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: A
          description: The current of the SCA.
        - id: 606
          name: SCA Temperate
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: Cel
          description: SCA Temperature.
- Name: Robot Control
  Description1: This LWM2M Object includes all operations on robots.
  Description2: ""
  ObjectID: 10329
  ObjectURN: urn:oma:lwm2m:x:10329
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Mandatory
  Resources:
    Item:
        - id: 1
          name: Collision Detection
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: If Collision Detection is enabled or not, the setting of which is a Boolean value (1,0) where 1 is Enabled and 0 is Disabled.
        - id: 2
          name: Drop Detection
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: If Drop Detection is enabled or not,the setting of which is a Boolean value (1,0) where 1 is Enabled and 0 is Disabled.
        - id: 3
          name: Automatic Navigation
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: If Automatic Navigation is enabled or not,the setting of which is a Boolean value (1,0) where 1 is Enabled and 0 is Disabled.
        - id: 100
          name: Robot Shutdown
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: Shut down the robot.
        - id: 101
          name: Robot Reboot
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reboot the robot.
        - id: 102
          name: Robot Reset
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the robot to factory settings.
        - id: 103
          name: 'Robot Wakeup '
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: Let the robot to wake up.
        - id: 104
          name: Robot Sleep
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: Let the robot to sleep.
        - id: 105
          name: Robot Self-checking
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: Let the robot to do self-checking.
        - id: 106
          name: Emergency Braking
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: Bark the robot emergently.
        - id: 107
          name: Emergency Braking Release
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: Release Emergency Braking for the robot.
        - id: 110
          name: Action Execution
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: 'Let the robot to execute a task, parameter: Action name|possible parameters if any.'
        - id: 111
          name: Action List Upload
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Upload action list, parameter:select action list to be uploaed.
        - id: 112
          name: Action List Download
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: 'Download action list, parameter: download path if present, else store in default directory with default name.'
        - id: 113
          name: Group Dancing Program Control
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Change playbill for group dancing, parameter:playbill.
        - id: 114
          name: Navigation Map Upload
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Upload navigation map, parameter:select navigation map to be uploaded.
        - id: 115
          name: Group Dancing Program Control
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Change playbill for group dancing, parameter:playbill.
        - id: 116
          name: Navigation Map Download
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: 'Download navigation map, parameter: download path if present, else store in default directory with default name.'
        - id: 117
          name: Route list Execution
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Execute route list , parameter:if any.
        - id: 118
          name: Route list Upload
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Upload route list, parameter:select route list to be uploaded.
        - id: 119
          name: Route list Download
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: 'Download route list, parameter: download path if present, else store in default directory with default name.'
        - id: 120
          name: Automatic Navigation Control
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: 'Enable/Disable Automatic Navigation: Parameter: 1:Enable, 0:Disable'
        - id: 121
          name: Manual Navigation
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: 'Manual Navigation: Parameter: route info.'
        - id: 122
          name: Moving to Charging Station
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Moving to Charging Station.
        - id: 123
          name: Moving to Specified location
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: 'Manual Navigation: Parameter: route info.'
        - id: 124
          name: Low Frequency Patrol Broadcasting
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Patrol broadcast in low frequency.
        - id: 125
          name: Task Start
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Start a task, parameter:task name.
        - id: 126
          name: Task Stop
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Stop a task, parameter:task name.
        - id: 127
          name: Task Suspend
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Suspend a task, parameter:task name.
        - id: 128
          name: Task Resume
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Resume a task, parameter:task name.
        - id: 129
          name: Video Upload
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Upload a video, parameter:select video to be uploaded.
        - id: 130
          name: Picture Upload
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Upload picture, parameter:select picture to be uploaded.
        - id: 131
          name: Default Language Switching
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Upload picture, parameter:Language name.
        - id: 132
          name: Intonation Change
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Change intonation of the robot, parameter:Intonation name.
        - id: 133
          name: Intonation Change
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Change intonation of the robot, parameter:Intonation name.
        - id: 134
          name: Speaking with Action
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Robot speaks with specific action, parameter:key words|action name.
        - id: 135
          name: Collision Detection Control
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: 'Enable/Disable Collision Detection: Parameter: 1:Enable, 0:Disable'
        - id: 136
          name: Drop Detection Control
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: 'Enable/Disable Drop Detection: Parameter: 1:Enable, 0:Disable'
- Name: Network Info
  Description1: This LWM2M Object includes network status related information.
  Description2: ""
  ObjectID: 10330
  ObjectURN: urn:oma:lwm2m:x:10330
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Mandatory
  Resources:
    Item:
        - id: 1
          name: IMEI
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: "15"
          units: ""
          description: The IMEI of the RCU in the Robot.
        - id: 2
          name: IMSI
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: "15"
          units: ""
          description: The IMSI of the RCU in the Robot.
        - id: 3
          name: Radio Connectivity
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: The radio connectivity status, contains the reference to the Connectivity Monitoring(4).
        - id: 4
          name: GPS Signal Status
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 1..4
          units: ""
          description: 'The GPS signal status: 1: Very Good, 2: Good, 3:Normal, 4: Bad.'
        - id: 5
          name: VBN Connection Status
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..1
          units: ""
          description: 'VBN Connection Status: 1:Connected, 0:Disconnected.'
        - id: 6
          name: HARI Connection Status
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..1
          units: ""
          description: 'HARI Connection Status: 1:Connected, 0:Disconnected.'
        - id: 7
          name: CCU Connection Status
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..1
          units: ""
          description: 'CCU Connection Status: 1:Connected, 0:Disconnected.The resource instance ID is the same with the Object Instance ID of corresponding CCU.'
- Name: Robot Service Info
  Description1: This LWM2M Object includes robot service related information.
  Description2: ""
  ObjectID: 10331
  ObjectURN: urn:oma:lwm2m:x:10331
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Mandatory
  Resources:
    Item:
        - id: 1
          name: Current status
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: 0..127
          units: ""
          description: 'Current status, for example: working, pasued, dormant, holding, charging and so on.'
        - id: 2
          name: Services Providing
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: 0..127
          units: ""
          description: 'Providing services: for example: patrolling, advertisement playing, patrolling and so on,one robot can do several works at the same time, for example, patrolling with advertisement playing.'
        - id: 3
          name: Advertising Contents
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: The Advertising Contents it is playing.
        - id: 4
          name: Current Language
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: 0..127
          units: ""
          description: Current language used by the robot.
        - id: 5
          name: Volume
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: 0..100
          units: /100
          description: The Volume of the speaker.
        - id: 6
          name: Moving Status
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..2
          units: ""
          description: 0:Moving, 1:Stopped, 2:Suspended.
        - id: 7
          name: Moving Speed
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Float
          rangeenumeration: ""
          units: m/h
          description: The moving speed of the robot.
        - id: 8
          name: Location
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: Contains the reference to the location object(6).
        - id: 9
          name: Map List
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Assigned Map List and the Map currently within.
        - id: 10
          name: Planned Route list
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Planned Route list, routes are separated by comma.
        - id: 11
          name: Current Route
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Current Route.
        - id: 12
          name: Route to-do List
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Routes to be done, routes are separated by comma.
        - id: 13
          name: Synchronous Whistle
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: The status of the Synchronous Whistle, 1:On, 0:Off.
        - id: 14
          name: Current Actions
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Current Body Actions/Actions.
        - id: 15
          name: ASR Type
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..2
          units: ""
          description: ASR Type, 0:Cloud, 1:Local, 2:Offline.
        - id: 50
          name: TTS Vendor
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The TTS Vendor.
        - id: 51
          name: TTS Speaker
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Which speaker of the vender is selected.
- Name: Robot Selfcheck Info
  Description1: This LWM2M Object includes robot selfcheck result.
  Description2: ""
  ObjectID: 10332
  ObjectURN: urn:oma:lwm2m:x:10332
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 1
          name: Entity
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: 4..63
          units: ""
          description: 'Contains the object ID and object instance ID/Name, for example: </10320/2>.'
        - id: 2
          name: Status
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: 0:Normal, 1:Unknown, 0:Failed with error code(negative number).
- Name: PM Threshold
  Description1: Here defines all items needed in PM Threshold management.
  Description2: ""
  ObjectID: 10333
  ObjectURN: urn:oma:lwm2m:x:10333
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 1
          name: Entity
          operations: RW
          multipleinstances: Multiple
          mandatory: Mandatory
          type: String
          rangeenumeration: 4..63
          units: ""
          description: 'Contains the object ID and object instance ID/name, for example: </10320/2>.'
        - id: 2
          name: Performance Type
          operations: RW
          multipleinstances: Multiple
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: Referrence to a PM item, similar with Corelnk in LwM2M 1.1, </object ID/object instance ID/resoure ID>, for example:/10322/2/4
        - id: 3
          name: High Threshold
          operations: RW
          multipleinstances: Multiple
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: ""
          description: High Threshold of this PM item.
        - id: 4
          name: Low Threshold
          operations: RW
          multipleinstances: Multiple
          mandatory: Mandatory
          type: Float
          rangeenumeration: ""
          units: ""
          description: Low Threshold of this PM item.
- Name: Robot Alarm
  Description1: Here lists all items of an alarm reported by the robot.
  Description2: ""
  ObjectID: 10334
  ObjectURN: urn:oma:lwm2m:x:10334
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 1
          name: Entity
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: 4..63
          units: ""
          description: 'Contains the object ID and object instance ID/name, for example: </10320/2>.'
        - id: 2
          name: Probable Cause
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..65535
          units: ""
          description: Probable cause of this alarm.
        - id: 3
          name: Specific Problem
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: Specific Problem of of this alarm.
        - id: 4
          name: Alarm Type
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 2..6
          units: ""
          description: The Alarm Type of this alarm,2:Communications, 3:Quality of Service (QoS), 4:Processing Error, 5:Equipment, 6:Environmental.
        - id: 5
          name: Severity
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 1..5
          units: ""
          description: The severity of this alarm. Critical(1), Major(2), Minor(3), Warning(4), Cleared(5).
        - id: 6
          name: Report Time
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Time
          rangeenumeration: ""
          units: ""
          description: When was this alarm reported.
        - id: 7
          name: Sequence No
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..2^63-1
          units: ""
          description: Sequence No of this alarm, used to detect alarm loss.
        - id: 8
          name: Additional Info
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The information related to this alarm.
- Name: Event
  Description1: Here lists all items of an event reported by the robot.
  Description2: ""
  ObjectID: 10335
  ObjectURN: urn:oma:lwm2m:x:10335
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 1
          name: Entity
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: 4..63
          units: ""
          description: 'Contains the object ID and object instance ID/name, for example: </10320/2>.'
        - id: 2
          name: Event Type
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..65535
          units: ""
          description: 'The type of this event, for example: APP restart.'
        - id: 3
          name: Time
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Time
          rangeenumeration: ""
          units: ""
          description: When was this event reported.
        - id: 4
          name: Sequence No
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..2^63-1
          units: ""
          description: Sequence No of this event, used to detect event loss.
        - id: 5
          name: Additional Info
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The information related to this event.
- Name: MIC
  Description1: This LWM2M Object includes MIC array information.
  Description2: ""
  ObjectID: 10336
  ObjectURN: urn:oma:lwm2m:x:10336
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 5907
          name: Host Device Unique ID
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The host device unique ID as assigned by an OEM, MNO, or other as the Device ID in the onboarding or manufacturing process.
        - id: 5905
          name: Host Device Manufacturer
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Human readable host device manufacturer name.
        - id: 5906
          name: Host Device Model Number
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: A host device model identifier (manufacturer specified string).
- Name: SCA
  Description1: This LWM2M Object includes SCA information.
  Description2: ""
  ObjectID: 10337
  ObjectURN: urn:oma:lwm2m:x:10337
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 1
          name: SCA Name
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: Human readable SCA name
        - id: 100
          name: SCA Motion Status
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..2
          units: ""
          description: 0:Forward, 1:Backward, 2:Stop.
        - id: 200
          name: SCA Motion Control
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Parameter:0:Forward, 1:Backward, 2:Stop.
- Name: Speaker
  Description1: This LWM2M Object includes speaker information.
  Description2: ""
  ObjectID: 10338
  ObjectURN: urn:oma:lwm2m:x:10338
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 1
          name: Speaker status
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: If speaker is switched on or not, 1:On, 0:Off.
        - id: 2
          name: Voice Warning
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: If Voice Warning is enabled or not, 1:Enabled, 0:Disabled.
        - id: 100
          name: Voice Control
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: 'Switch on/off voice: Parameter: 1:On, 0:Off'
        - id: 101
          name: Voice Warning Control
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: 'Enable/Disable Voice Warning: Parameter: 1:Enable, 0:Disable'
- Name: Tripod Head
  Description1: This LWM2M Object includes Tripod Head information.
  Description2: ""
  ObjectID: 10339
  ObjectURN: urn:oma:lwm2m:x:10339
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 5907
          name: Host Device Unique ID
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The host device unique ID as assigned by an OEM, MNO, or other as the Device ID in the onboarding or manufacturing process.
        - id: 5905
          name: Host Device Manufacturer
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Human readable host device manufacturer name.
        - id: 5906
          name: Host Device Model Number
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: A host device model identifier (manufacturer specified string).
        - id: 100
          name: Tripod Direction Control
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: 'Control the direction of the Tripod Head: Parameter: 0:Up, 1:Down, 2:Left, 3:Right.'
        - id: 101
          name: Tripod Automatic Control
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: 'If the Tripod Head is automatically controlled: Parameter: 0:False, 1:True.'
        - id: 102
          name: Tripod Reset
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Reset the Tripod Head.
- Name: Camera
  Description1: This LWM2M Object includes camera information.
  Description2: ""
  ObjectID: 10340
  ObjectURN: urn:oma:lwm2m:x:10340
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 1
          name: Camera Name
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: Human readable camera name
        - id: 2
          name: Camera Status
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: The status of the camera, 1:Enabled, 0:Disabled.
        - id: 3
          name: Connection Status
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: The Connection Status of the camera, 1:On, 0:Off.
        - id: 4
          name: Working Status
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..15
          units: ""
          description: The Working Status of the camera, 0:Recording, 1:Playing, 2:Paused.
        - id: 5
          name: Local Recording
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: If Local Recording is enabled or not, 1:Enabled, 0:Disabled.
        - id: 6
          name: Image Matting
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: If Image Matting is enabled or not, 1:Enabled, 0:Disabled.
        - id: 7
          name: Camera Snapshot
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: If Camera Snapshot is enabled or not(in Dangerous Situation), 1:Enabled, 0:Disabled.
        - id: 8
          name: Camera Recording
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: If Camera Recording is enabled or not(in Dangerous Situation), 1:Enabled, 0:Disabled.
        - id: 100
          name: Camera Control
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: 'Enable/Disable the camera: Parameter: 1:Enable, 0:Disable'
        - id: 101
          name: Local Recording Control
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: 'Enable/Disable Local Recording: Parameter: 1:Enable, 0:Disable'
        - id: 102
          name: Image Matting Control
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: 'Enable/Disable Image Matting: Parameter: 1:Enable, 0:Disable'
        - id: 103
          name: Camera Snapshot Control
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: 'Enable/Disable Camera Snapshot in Dangerous Situation: Parameter: 1:Enable, 0:Disable'
        - id: 104
          name: Camera Recording Control
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: 'Enable/Disable Camera Recording in Dangerous Situation: Parameter: 1:Enable, 0:Disable'
- Name: GPS
  Description1: This LWM2M Object includes GPS information.
  Description2: ""
  ObjectID: 10341
  ObjectURN: urn:oma:lwm2m:x:10341
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 5907
          name: Host Device Unique ID
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The host device unique ID as assigned by an OEM, MNO, or other as the Device ID in the onboarding or manufacturing process.
        - id: 5905
          name: Host Device Manufacturer
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Human readable host device manufacturer name.
        - id: 5906
          name: Host Device Model Number
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: A host device model identifier (manufacturer specified string).
- Name: IMU
  Description1: This LWM2M Object includes IMU(Inertial Measurement Unit) information.
  Description2: ""
  ObjectID: 10342
  ObjectURN: urn:oma:lwm2m:x:10342
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 5907
          name: Host Device Unique ID
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The host device unique ID as assigned by an OEM, MNO, or other as the Device ID in the onboarding or manufacturing process.
        - id: 5905
          name: Host Device Manufacturer
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Human readable host device manufacturer name.
        - id: 5906
          name: Host Device Model Number
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: A host device model identifier (manufacturer specified string).
- Name: LiDAR
  Description1: This LWM2M Object includes LiDAR information.
  Description2: ""
  ObjectID: 10343
  ObjectURN: urn:oma:lwm2m:x:10343
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 1
          name: LiDAR Name
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: Human readable LiDAR name
        - id: 5907
          name: Host Device Unique ID
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The host device unique ID as assigned by an OEM, MNO, or other as the Device ID in the onboarding or manufacturing process.
        - id: 5905
          name: Host Device Manufacturer
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Human readable host device manufacturer name.
        - id: 5906
          name: Host Device Model Number
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: A host device model identifier (manufacturer specified string).
- Name: Arm
  Description1: This LWM2M Object includes arm information.
  Description2: ""
  ObjectID: 10344
  ObjectURN: urn:oma:lwm2m:x:10344
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 1
          name: Arm Name
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: The display name of the arm, Left/Right arm.
        - id: 5907
          name: Host Device Unique ID
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The host device unique ID as assigned by an OEM, MNO, or other as the Device ID in the onboarding or manufacturing process.
        - id: 5905
          name: Host Device Manufacturer
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Human readable host device manufacturer name.
        - id: 5906
          name: Host Device Model Number
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: A host device model identifier (manufacturer specified string).
- Name: Leg
  Description1: This LWM2M Object includes leg information.
  Description2: ""
  ObjectID: 10345
  ObjectURN: urn:oma:lwm2m:x:10345
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 1
          name: Leg Name
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: The display name of the leg, Left/Right Leg.
        - id: 5907
          name: Host Device Unique ID
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The host device unique ID as assigned by an OEM, MNO, or other as the Device ID in the onboarding or manufacturing process.
        - id: 5905
          name: Host Device Manufacturer
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Human readable host device manufacturer name.
        - id: 5906
          name: Host Device Model Number
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: A host device model identifier (manufacturer specified string).
- Name: Servomotor
  Description1: This LWM2M Object includes Servomotor information.
  Description2: ""
  ObjectID: 10346
  ObjectURN: urn:oma:lwm2m:x:10346
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 1
          name: Servomotor Name
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: Human readable Servomotor Name
        - id: 5907
          name: Host Device Unique ID
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The host device unique ID as assigned by an OEM, MNO, or other as the Device ID in the onboarding or manufacturing process.
        - id: 5905
          name: Host Device Manufacturer
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Human readable host device manufacturer name.
        - id: 5906
          name: Host Device Model Number
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: A host device model identifier (manufacturer specified string).
- Name: Screen
  Description1: This LWM2M Object includes robot screen information.
  Description2: ""
  ObjectID: 10347
  ObjectURN: urn:oma:lwm2m:x:10347
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 1
          name: Screen Status
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: The status of the camera, 1:On, 0:Off.
        - id: 2
          name: Startup Page
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The Startup Page of the screen.
        - id: 3
          name: Current Displaying Page or Current Screen Play List
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Current Displaying Page or Current Screen Play List.
        - id: 100
          name: Screen Control
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: 'If the screen is locked, Parameter: 1:Bright Screen, 0:Locked Screen'
        - id: 101
          name: Startup Page Set
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: Set startup page, Parameter:startup page
        - id: 102
          name: Screen Page Set
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: Set screen page, Parameter:screen page
        - id: 103
          name: Screen Play List Set
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: Set screen play list , Parameter:screen play list
- Name: Wheel
  Description1: This LWM2M Object includes wheel information.
  Description2: ""
  ObjectID: 10348
  ObjectURN: urn:oma:lwm2m:x:10348
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 1
          name: Wheel Name
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: The display name of the wheel.
        - id: 5907
          name: Host Device Unique ID
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The host device unique ID as assigned by an OEM, MNO, or other as the Device ID in the onboarding or manufacturing process.
        - id: 5905
          name: Host Device Manufacturer
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Human readable host device manufacturer name.
        - id: 5906
          name: Host Device Model Number
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: A host device model identifier (manufacturer specified string).
- Name: Chassis
  Description1: This LWM2M Object includes chassis information.
  Description2: ""
  ObjectID: 10349
  ObjectURN: urn:oma:lwm2m:x:10349
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 5907
          name: Host Device Unique ID
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The host device unique ID as assigned by an OEM, MNO, or other as the Device ID in the onboarding or manufacturing process.
        - id: 5905
          name: Host Device Manufacturer
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Human readable host device manufacturer name.
        - id: 5906
          name: Host Device Model Number
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: A host device model identifier (manufacturer specified string).
- Name: Light
  Description1: This LWM2M Object includes light information.
  Description2: ""
  ObjectID: 10350
  ObjectURN: urn:oma:lwm2m:x:10350
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 1
          name: Light Name
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: The display name of the light.
        - id: 2
          name: Light Status
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: The status of the light, 1:On, 0:Off.
        - id: 100
          name: Light Control
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: 'Switch on/off the light: Parameter: 1:On, 0:Off'
- Name: Door
  Description1: This LWM2M Object includes the door information.
  Description2: ""
  ObjectID: 10351
  ObjectURN: urn:oma:lwm2m:x:10351
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 1
          name: Door Name
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: The name of the door.
        - id: 50
          name: Door Status
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: The status of the door, 1:Opened, 0:Closed.
        - id: 100
          name: Door Control
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: 'Open/Close the door: Parameter: 1:Open, 0:Close'
- Name: Thermal Imager
  Description1: This LWM2M Object includes the Thermal Imager information.
  Description2: ""
  ObjectID: 10352
  ObjectURN: urn:oma:lwm2m:x:10352
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 1
          name: Highest Temperature
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: -100.0..100.0
          units: Cel
          description: The Highest Temperature of the thermal imager.
        - id: 2
          name: Lowest Temperature
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: -100.0..100.0
          units: Cel
          description: The Lowest Temperature of the thermal imager.
        - id: 3
          name: Average Temperature
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Float
          rangeenumeration: -100.0..100.0
          units: Cel
          description: The Average Temperature of the thermal imager.
- Name: Warning Light
  Description1: This LWM2M Object includes Warning Light information.
  Description2: ""
  ObjectID: 10353
  ObjectURN: urn:oma:lwm2m:x:10353
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 1
          name: Light Status
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: The status of the light, 1:On, 0:Off.
        - id: 2
          name: Light Warning
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: If Light Warning is enabled or not, 1:Enabled, 0:Disabled.
        - id: 100
          name: Light Control
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: 'Switch on/off the light: Parameter: 1:On, 0:Off'
        - id: 101
          name: Light Warning Control
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: 'Enable/Disable Light Warning: Parameter: 1:Enable, 0:Disable'
- Name: APP
  Description1: This LWM2M Object includes the APP information.
  Description2: ""
  ObjectID: 10354
  ObjectURN: urn:oma:lwm2m:x:10354
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Mandatory
  Resources:
    Item:
        - id: 1
          name: APP Name
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: The name of the APP, human readable string.
        - id: 2
          name: APP Version
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: The version of the APP, human readable string.
        - id: 3
          name: APP Build No
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The Build No of the APP, human readable string.
        - id: 4
          name: APP Patch No
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The Patch No of the APP, human readable string.
        - id: 5
          name: Package URI
          operations: W
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: 0..255 bytes
          units: ""
          description: URI from where the device can download the software package by an alternative mechanism.
        - id: 6
          name: Vendor Name
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The vendor of the package.
        - id: 7
          name: Installation Target
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: Specify where this APP should be installed, RCU or which CCU.
        - id: 8
          name: APP Status
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..5
          units: ""
          description: The Status of the APP, 0:Downloading, 1:Downloaded, 2:Installed, 3:Verified, 4:Activated, 5:Stopped.
        - id: 100
          name: APP Restart
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: Restart the APP.
        - id: 101
          name: APP Start
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: Start the APP.
        - id: 102
          name: APP Stop
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: Stop the APP.
        - id: 103
          name: APP Download
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: Download the APP.
        - id: 104
          name: APP Install
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: Install the APP.
        - id: 105
          name: APP Uninstall
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: Uninstall the APP.
        - id: 106
          name: APP Activate
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: Activate the APP.
        - id: 107
          name: APP Deactivate
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: Deactivate the APP.
        - id: 108
          name: APP Verify
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: Verify the installed APP after APP is activated.
- Name: General Info
  Description1: This LWM2M Object contains the referrence to all general info objects of the robot.
  Description2: ""
  ObjectID: 10355
  ObjectURN: urn:oma:lwm2m:x:10355
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 100
          name: Robot General Info
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: Contains the reference to the Robot General Info.
        - id: 101
          name: RCU General Info
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: Contains the reference to the RCU General info of the Robot.
        - id: 102
          name: CCU General Info
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: Contains the reference to general info of CCUs of the Robot.
        - id: 103
          name: ECU General Info
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: Contains the reference to general info of ECUs of the Robot.
- Name: Service Info
  Description1: This LWM2M Object contains the referrence to all objects containing service info.
  Description2: ""
  ObjectID: 10356
  ObjectURN: urn:oma:lwm2m:x:10356
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 100
          name: Robot Service Info
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: Contains the reference to the Robot Service Info.
        - id: 101
          name: SCA Info
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: Contains the reference to SCAs of the Robot.
        - id: 102
          name: Speaker Info
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: Contains the reference to the Speaker of the Robot.
        - id: 103
          name: Camera Info
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: Contains the reference to Cameras of the Robot.
        - id: 104
          name: Screen Info
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: Contains the reference to the Screen of the Robot.
        - id: 105
          name: Light Info
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: Contains the reference to Lights of the Robot.
        - id: 106
          name: Warning Light Info
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: Contains the reference to the Warning Light of the Robot.
        - id: 107
          name: Door Info
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: Contains the reference to the Door of the Robot.
        - id: 108
          name: Thermal Imager Info
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: Contains the reference to the Thermal Imager of the Robot.
        - id: 109
          name: Compressor Info
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: Contains the reference to the Compressor of the Robot.
        - id: 110
          name: Lock Info
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: Contains the reference to Lock Info of the Robot.
        - id: 111
          name: Collision Sensor Info
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: Contains the reference to Collision Sensor Info of the Robot.
        - id: 112
          name: Drop Sensor Info
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: Contains the reference to Drop Sensor Info of the Robot.
- Name: PM
  Description1: This LWM2M Object contains the referrence to all PM objects.
  Description2: ""
  ObjectID: 10357
  ObjectURN: urn:oma:lwm2m:x:10357
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 100
          name: Robot PM
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: Contains the reference to the Robot PM.
        - id: 101
          name: RCU PM
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: Contains the reference to the RCU PM.
        - id: 102
          name: CCU PM
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: Contains the reference to CCU PMs.
        - id: 103
          name: SCA PM
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: Contains the reference to SCA PMs.
- Name: Fan PM
  Description1: This LWM2M Object includes all PM items belongs to Fans.
  Description2: ""
  ObjectID: 10358
  ObjectURN: urn:oma:lwm2m:x:10358
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 1
          name: Fan Name
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: The name of the Fan.
        - id: 609
          name: Fan Speed
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: 1/min
          description: The speed of the Fan.
- Name: Lock
  Description1: This LWM2M Object includes the Lock information.
  Description2: ""
  ObjectID: 10359
  ObjectURN: urn:oma:lwm2m:x:10359
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 1
          name: Lock Name
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: The name of the compressor.
        - id: 50
          name: Lock Status
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: The status of the lock, 1:Locked, 0:Unlocked.
        - id: 100
          name: Lock Control
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: 'Lock/Unlock the lock: Parameter: 1:Lock, 0:Unlock'
- Name: Ultrasonic Sensor
  Description1: This LWM2M Object includes Ultrasonic Sensor information.
  Description2: ""
  ObjectID: 10360
  ObjectURN: urn:oma:lwm2m:x:10360
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 1
          name: Name
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: The display name of the Ultrasonic Sensor.
        - id: 50
          name: Status
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: 0:Normal, 1:Unknown, <0:Failed with error code(negative number).
- Name: Collision Sensor
  Description1: This LWM2M Object includes Collision Sensor information.
  Description2: ""
  ObjectID: 10361
  ObjectURN: urn:oma:lwm2m:x:10361
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 1
          name: Name
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: The display name of the Collision Sensor.
        - id: 50
          name: Status
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: 0:Normal, 1:Unknown, <0:Failed with error code(negative number).
        - id: 51
          name: Collision Detection
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: If Collision Detection is enabled or not, the setting of which is a Boolean value (1,0) where 1 is Enabled and 0 is Disabled.
        - id: 100
          name: Collision Detection Control
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: 'Enable/Disable Collision Detection: Parameter: 1:Enable, 0:Disable'
- Name: Drop Sensor
  Description1: This LWM2M Object includes Drop Sensor information.
  Description2: ""
  ObjectID: 10362
  ObjectURN: urn:oma:lwm2m:x:10362
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 1
          name: Name
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: The display name of the Drop Sensor.
        - id: 50
          name: Status
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: 0:Normal, 1:Unknown, <0:Failed with error code(negative number).
        - id: 51
          name: Drop Detection
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: If Drop Detection is enabled or not,the setting of which is a Boolean value (1,0) where 1 is Enabled and 0 is Disabled.
        - id: 100
          name: Drop Detection Control
          operations: E
          multipleinstances: Single
          mandatory: Mandatory
          type: ""
          rangeenumeration: ""
          units: ""
          description: 'Enable/Disable Drop Detection: Parameter: 1:Enable, 0:Disable'
- Name: Temperature Sensor
  Description1: This LWM2M Object includes Temperature Sensor information.
  Description2: ""
  ObjectID: 10363
  ObjectURN: urn:oma:lwm2m:x:10363
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 50
          name: Status
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: 0:Normal, 1:Unknown, <0:Failed with error code(negative number).
- Name: Humidity Sensor
  Description1: This LWM2M Object includes Humidity Sensor information.
  Description2: ""
  ObjectID: 10364
  ObjectURN: urn:oma:lwm2m:x:10364
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 50
          name: Status
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: 0:Normal, 1:Unknown, <0:Failed with error code(negative number).
- Name: Gas-Dust Sensor
  Description1: This LWM2M Object includes Gas-Dust information.
  Description2: ""
  ObjectID: 10365
  ObjectURN: urn:oma:lwm2m:x:10365
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 50
          name: Status
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: ""
          units: ""
          description: 0:Normal, 1:Unknown, <0:Failed with error code(negative number).
- Name: Fan
  Description1: This LWM2M Object includes Fan information.
  Description2: ""
  ObjectID: 10366
  ObjectURN: urn:oma:lwm2m:x:10366
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 1
          name: Fan Name
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: The display name of the Fan.
- Name: SpringMotor
  Description1: This LWM2M Object includes SpringMotor information.
  Description2: ""
  ObjectID: 10368
  ObjectURN: urn:oma:lwm2m:x:10368
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 1
          name: SpringMotor Name
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: Human readable SpringMotor Name
        - id: 5907
          name: Host Device Unique ID
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The host device unique ID as assigned by an OEM, MNO, or other as the Device ID in the onboarding or manufacturing process.
        - id: 5905
          name: Host Device Manufacturer
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Human readable host device manufacturer name.
        - id: 5906
          name: Host Device Model Number
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: A host device model identifier (manufacturer specified string).
- Name: MCU
  Description1: This LWM2M Object includes MCU information.
  Description2: ""
  ObjectID: 10369
  ObjectURN: urn:oma:lwm2m:x:10369
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 5907
          name: Host Device Unique ID
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The host device unique ID as assigned by an OEM, MNO, or other as the Device ID in the onboarding or manufacturing process.
        - id: 5905
          name: Host Device Manufacturer
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Human readable host device manufacturer name.
        - id: 5906
          name: Host Device Model Number
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: A host device model identifier (manufacturer specified string).
- Name: Reboot Status
  Description1: This object provides features allowing to monitor Reboot and Reset Factory operation from LWM2M Device object.
  Description2: This LWM2M object provides features to monitor Reboot(/3/0/4) and Reset Factory(/3/0/5) operation available on LWM2M Device (3) Object, allowing to know if a reboot or a reset factory is a success or a failure and why it failed. This is strongly recommended to use separated response for those resources (/3/0/4 and /3/0/5) and wait for response ACK before to execute/schedule the operation (reboot or reset factory). This prevents LWM2M server to consider the request as a failure in case response is lost. This situation could be annoying as server could decide to resent the request later which could bring to unexpected reboot or reset factory.
  ObjectID: 10371
  ObjectURN: urn:oma:lwm2m:x:10371
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Single
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: Reboot State
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..2
          units: ""
          description: Containing the state of reboot operation. At device start-up the value should be 0 (booted). Once a reboot process is scheduled (e.g. exec on /3/0/4), this value must be set to 1 (rebooting), it is adviced to do that before to send response of Reboot resource (/3/0/4) to avoid any race conditions. If rebooting failed for any reason value must be set to 2(reboot error). If reboot succeeds, at device start up, reboot state should be set to 0 (booted) as always.
        - id: 1
          name: Reboot Error Message
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: Containing the error message of the last reboot failure. This value MUST be set to an empty string on exec on /3/0/4, ideally before to send the response for Reboot resource (3/0/4) to avoid any race conditions
        - id: 2
          name: Reset Factory State
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..3
          units: ""
          description: Containing the state of reset factory operation. At start-up the value should be 0 (initial-state). Once the reset factory process is scheduled (exec on /3/O/5), this value must be set to 1 (resetting), it is advised to do that before to send response of Reset Factory resource (/3/0/5) to avoid any race conditions. If reset fails for any reason value must be set to 2 (reset error). If reset succeeds, state should be set to 3 (reset). If the reset factory need a reboot, reboot state(/10371/0/0) resource SHOULD also be updated accordingly. If reset factory need a reboot, in case of successful reset, the value MUST be set to 3 (reset) at device start-up. If it helps implementation, this is tolerated to have this resource set to 3 (reset) at first device start-up.
        - id: 3
          name: Reset Factory Error Message
          operations: R
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: Containing the error message of the last reset factory failure. This value MUST be set to an empty string on exec on /3/0/5, ideally before to send the response for Reset Factory resource (3/0/5) to avoid any race conditions
- Name: Modbus Connection
  Description1: This LwM2M Object is used to configure a Modbus protocol connection.
  Description2: ""
  ObjectID: 10374
  ObjectURN: urn:oma:lwm2m:x:10374
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: Address
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: Address uniquely defining the Modbus connection within a given physical layer. The LwM2M Client is assumed to take the role of a Modbus client.For Modbus TCP, this is a hostname with optional port number, e.g. "10.11.12.13" or "example.com:502". Port number 502 is the default if not specified.For Modbus RTU, this is an implementation-defined unique identifier of a physical port. Suggested formats are UNIX-style device names (e.g. "/dev/tty1") or DOS-style port designations (e.g. "COM2"), but any strings may be used. Values that are valid for this LwM2M Client are listed in the "Available RTU ports" resource. The Client MAY treat configuration as invalid if Physical Layer Type is set to Modbus RTU and the Address is not equal to any of the "Available RTU ports".
        - id: 1
          name: Physical Layer Type
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..2
          units: ""
          description: 'Type of the physical layer to use for this connection.0: Modbus TCP1: Modbus RTU (RS-232)2: Modbus RTU (RS-485)Additional types MAY be specified in future revisions of this object.'
        - id: 2
          name: Enable
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: Enables or disables this Modbus connection.When set to false, this Modbus connection is administratively disabled and shall not function. Upon setting it to true, the LwM2M Client shall attempt opening the relevant connection and report the result of that operation in the "State" resource.
        - id: 3
          name: Baudrate
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: ""
          units: bit/s
          description: 'Baudrate for the RTU link layer, e.g. 9600, 115200, etc.NOTE: 8 data bits are always used.Mandatory if Physical Layer Type is set to Modbus RTU.'
        - id: 4
          name: Stop Bits
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 1..2
          units: ""
          description: Number of stop bits to use for the RTU link layer.Mandatory if Physical Layer Type is set to Modbus RTU.
        - id: 5
          name: Parity
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..2
          units: ""
          description: 'Parity bit type to use for the RTU link layer.0: none1: even2: oddMandatory if Physical Layer Type is set to Modbus RTU.'
        - id: 6
          name: Hardware Control Flow Mode
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..2
          units: ""
          description: 'Type of hardware flow control to use for the RTU link layer.0: none1: Set RTS flag when sending data2: Set RTS flag when NOT sending dataMandatory if Physical Layer Type is set to Modbus RTU.'
        - id: 7
          name: Available RTU Ports
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: List of all valid values for the "Address" resource when Physical Layer Type is set to Modbus RTU. The Resource Instance IDs shall have no semantic meaning. The value of this resource shall be equal for all instances of this Object.Mandatory if this LwM2M Client has at least one physical port usable for Modbus RTU.
        - id: 8
          name: State
          operations: R
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..4
          units: ""
          description: 'State of this Modbus connection.0: disabled (MUST NOT be used unless the "Enable" resource is set to false)1: connecting2: successfully connected3: invalid or unsupported configuration4: connection errorIf this resource reached the "connection error" state after having been successfully connected previously, the LwM2M Client SHOULD apply an implementation-specific deferred retry policy to try establishing the connection again.If the resource reached the "connection error" state as a direct result of setting the "Enable" resource to true or changing the configuration while in the enabled state, the LwM2M Client MAY apply an implementation-specific deferred retry policy to try establishing the connection again, or it MAY stay in the "connection error" state until further reconfiguration by the LwM2M Server.NOTE: The "connection error" state corresponds to any non-specific failure case. More specific error cases MAY be specified in future revisions of this object. LwM2M Server SHOULD interpret any unknown or invalid value reported by the LwM2M Client as equivalent to "connection error".'
- Name: Modbus Register Cluster
  Description1: This LwM2M Object represents a set of Modbus registers and acts as an interface to read and write their values.
  Description2: ""
  ObjectID: 10375
  ObjectURN: urn:oma:lwm2m:x:10375
  LWM2MVersion: "1.0"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: Connection
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: Link to an instance of the "Modbus Connection" object to use.
        - id: 1
          name: Register Type
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 1..4
          units: ""
          description: 'Type of Modbus objects to access.1: Coil2: Discrete Input3: Holding Register4: Input RegisterNote: For convenience, the values are equal to function codes corresponding to Modbus "read" operations for each object type.'
        - id: 2
          name: Unit ID
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..247, 255
          units: ""
          description: Server unit ID that this register cluster addresses.Special non-significant value of 255 is valid only for Modbus TCP connections.
        - id: 3
          name: Starting Register Address
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..65535
          units: ""
          description: Address of the first register that this register cluster addresses.
        - id: 4
          name: Quantity of Registers
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 1..2000
          units: ""
          description: Number of registers in this register cluster.If the Register Type is Holding Register or Input Register, the valid range for this resource is 1..125. Larger values are only supported for Coils and Discrete Inputs.If this resource is not present, the default value of 1 is assumed.
        - id: 5
          name: Values
          operations: RW
          multipleinstances: Multiple
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..65535
          units: ""
          description: 'List of values of the registers addressed by this register cluster.The Resource Instance IDs shall range from 0 to "Quantity of Registers - 1" (note: absolute register address cannot be used, because 65535 is a valid Modbus register ID, but not a valid LwM2M Resource Instance ID).When the Register Type is Coil or Discrete Input, "0" and "1" are the only valid values for each of the Resource Instances.When the Register Type is Discrete Input or Input Register, this resource shall behave as a read-only resource, i.e. as if the "Operations" attribute was "R".Even if the Register Type is Coil or Holding Register, any write operation that would result in the set of valid Resource Instance IDs being changed, shall result in a Bad Request error.'
        - id: 6
          name: Minimum Measured Values
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..65535
          units: ""
          description: Minimum values recorded by each of the registers in this cluster.If this resource is supported, the Resource Instance IDs shall range from 0 to "Quantity of Registers - 1". Each Resource Instance shall hold the minimum value recorded by the corresponding Resource Instance of the "Values" resource since the configuration of this cluster (resources 0-4) has been last changed, or since the "Reset Minimum and Maximum Measured Values" resource has been last executed, whichever was later.
        - id: 7
          name: Maximum Measured Values
          operations: R
          multipleinstances: Multiple
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..65535
          units: ""
          description: Maximum values recorded by each of the registers in this cluster.If this resource is supported, the Resource Instance IDs shall range from 0 to "Quantity of Registers - 1". Each Resource Instance shall hold the maximum value recorded by the corresponding Resource Instance of the "Values" resource since the configuration of this cluster (resources 0-4) has been last changed, or since the "Reset Minimum and Maximum Measured Values" resource has been last executed, whichever was later.
        - id: 8
          name: Reset Minimum and Maximum Measured Values
          operations: E
          multipleinstances: Single
          mandatory: Optional
          type: ""
          rangeenumeration: ""
          units: ""
          description: Resets the "Minimum Measured Values" and "Maximum Measured Values" resources.
- Name: MQTT Broker
  Description1: This LwM2M Object provides the information to connect to an MQTT Broker i.e. URI, configuration, and keying material.
  Description2: ""
  ObjectID: 18830
  ObjectURN: urn:oma:lwm2m:x:18830
  LWM2MVersion: "1.1"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: URI
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: URI of the MQTT broker.
        - id: 1
          name: Client Identifier
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: MQTT Client Identifier to use when connecting to this MQTT broker.
        - id: 2
          name: Clean Session
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: The Clean Session value to declare in the MQTT CONNECT message.
        - id: 3
          name: Keep Alive
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 0..65535
          units: s
          description: The Keep Alive value to declare in the MQTT CONNECT message.
        - id: 4
          name: User Name
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: String
          rangeenumeration: ""
          units: ""
          description: The User Name to declare in the MQTT CONNECT message.
        - id: 5
          name: Password
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Opaque
          rangeenumeration: 0..65535
          units: ""
          description: The Password value to declare in the MQTT CONNECT message.
        - id: 6
          name: Security Mode
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Integer
          rangeenumeration: 0..4
          units: ""
          description: 'Determines which security mode is used0: PreShared Key mode1: Raw Public Key mode2: Certificate mode3: NoSec mode4: Certificate mode with EST'
        - id: 7
          name: Public Key or Identity
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: Stores the Device’s certificate, public key (RPK mode) or PSK Identity (PSK mode).
        - id: 8
          name: MQTT Broker Public Key
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: Stores the MQTT Broker’s certificate, public key (RPK mode) or trust anchor. The Certificate Usage Resource determines the content of this resource.
        - id: 9
          name: Secret Key
          operations: W
          multipleinstances: Single
          mandatory: Optional
          type: Opaque
          rangeenumeration: ""
          units: ""
          description: Stores the secret key (PSK mode) or private key (RPK or certificate mode).
        - id: 10
          name: Certificate Usage
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Integer
          rangeenumeration: 0..3
          units: ""
          description: 'The Certificate Usage Resource specifies the semantic of the certificate or raw public key stored in the "MQTT Broker Public Key" Resource, which is used to match the certificate presented in the TLS/DTLS handshake. The currently defined values are:0: CA constraint1: service certificate constraint2: trust anchor assertion3: domain-issued certificateWhen this Resource is absent, value (3) for domain issued certificate mode is assumed.'
- Name: MQTT Publication
  Description1: This LwM2M Object is used to configure data reporting over MQTT.
  Description2: ""
  ObjectID: 18831
  ObjectURN: urn:oma:lwm2m:x:18831
  LWM2MVersion: "1.1"
  ObjectVersion: "1.0"
  MultipleInstances: Multiple
  Mandatory: Optional
  Resources:
    Item:
        - id: 0
          name: Source
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Corelnk
          rangeenumeration: ""
          units: ""
          description: The source of the data to publish (e.g. </sensors/temp>, or </3303/0/5700>; </3336/0>). If this Resource is empty, the published data are implementation dependent.
        - id: 1
          name: Broker
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Objlnk
          rangeenumeration: ""
          units: ""
          description: A link to the MQTT Broker Object Instance (OMNA registered Object ID:18830) describing the MQTT Broker to use.
        - id: 2
          name: Topic
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: String
          rangeenumeration: ""
          units: ""
          description: The MQTT topic to publish to.
        - id: 3
          name: QoS
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Unsigned Integer
          rangeenumeration: 0..2
          units: ""
          description: The Quality of Service value to use when publishing.
        - id: 4
          name: Retain
          operations: RW
          multipleinstances: Single
          mandatory: Mandatory
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: The RETAIN flag value to use when publishing.
        - id: 5
          name: Active
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Boolean
          rangeenumeration: ""
          units: ""
          description: If true or if the Resource is not present, the Device publishes the data pointed by the Source Resource to the MQTT Broker pointed by the Broker Resource using the MQTT topic indicated in the Topic Resource. If false, the Device does nothing.
        - id: 6
          name: Encoding
          operations: RW
          multipleinstances: Single
          mandatory: Optional
          type: Unsigned Integer
          rangeenumeration: 0..65535
          units: ""
          description: A CoAP Content-Format value used to encode the data in the MQTT Publish message. If this Resource is not present or equal to 65535, the encoding of the data is implementation dependent.
