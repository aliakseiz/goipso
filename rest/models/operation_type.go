// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// OperationType operation type
// swagger:model OperationType
type OperationType string

const (

	// OperationTypeR captures enum value "R"
	OperationTypeR OperationType = "R"

	// OperationTypeW captures enum value "W"
	OperationTypeW OperationType = "W"

	// OperationTypeRW captures enum value "RW"
	OperationTypeRW OperationType = "RW"

	// OperationTypeE captures enum value "E"
	OperationTypeE OperationType = "E"
)

// for schema
var operationTypeEnum []interface{}

func init() {
	var res []OperationType
	if err := json.Unmarshal([]byte(`["R","W","RW","E"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		operationTypeEnum = append(operationTypeEnum, v)
	}
}

func (m OperationType) validateOperationTypeEnum(path, location string, value OperationType) error {
	if err := validate.Enum(path, location, value, operationTypeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this operation type
func (m OperationType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateOperationTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
