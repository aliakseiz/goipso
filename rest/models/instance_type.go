// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// InstanceType instance type
// swagger:model InstanceType
type InstanceType string

const (

	// InstanceTypeMultiple captures enum value "Multiple"
	InstanceTypeMultiple InstanceType = "Multiple"

	// InstanceTypeSingle captures enum value "Single"
	InstanceTypeSingle InstanceType = "Single"
)

// for schema
var instanceTypeEnum []interface{}

func init() {
	var res []InstanceType
	if err := json.Unmarshal([]byte(`["Multiple","Single"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		instanceTypeEnum = append(instanceTypeEnum, v)
	}
}

func (m InstanceType) validateInstanceTypeEnum(path, location string, value InstanceType) error {
	if err := validate.Enum(path, location, value, instanceTypeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this instance type
func (m InstanceType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateInstanceTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
